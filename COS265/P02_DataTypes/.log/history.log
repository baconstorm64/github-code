--[ 2019.09.17.10.33.29.154.0 ]--
NewLogger: P02_DataTypes
Version: 1.3
--[ 2019.09.17.10.33.29.157.0 ]--
InitTree:
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2019.09.17.10.33.29.157.1 ]--
InitFile: /.cos265


--[ 2019.09.17.10.33.29.157.2 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2019.09.17.10.33.29.157.3 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    public Steque() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return true;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {

    }

    // pushes item to top of steque
    public void push(Item item) {

    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {

    }
}

--[ 2019.09.17.10.33.29.158.0 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2019.09.17.10.33.29.158.1 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2019.09.17.10.33.32.519.0 ]--
UpdateTree (AD): 1 0
+ /.log/history.log

--[ 2019.09.17.10.35.30.745.0 ]--
UpdateTree (AD): 5 0
+ /out/production/P02_DataTypes/algs4.jar
+ /out/production/P02_DataTypes/stdlib.jar
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/MinimumStack.class
+ /out/production/P02_DataTypes/OnePointerQueue.class

--[ 2019.09.17.10.35.30.821.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.10.38.37.388.0 ]--
:/src/Steque.java
+ 6     public Steque() 
r 7     {
--[ 2019.09.17.10.38.38.952.0 ]--
- 6
r 6     public Steque() {
--[ 2019.09.17.10.38.39.506.0 ]--
+ 6     public Steque() 
r 7     {
--[ 2019.09.17.10.38.40.373.0 ]--
- 6
r 6     public Steque() {
--[ 2019.09.17.10.38.41.457.0 ]--
+ 6     public Steque()  
r 7     {
--[ 2019.09.17.10.38.42.396.0 ]--
- 6
r 6     public Steque()  {
--[ 2019.09.17.10.38.42.717.0 ]--
r 6     public Steque()   {
--[ 2019.09.17.10.38.43.254.0 ]--
r 6     public Steque()  {
--[ 2019.09.17.10.38.43.599.0 ]--
r 6     public Steque()   {
--[ 2019.09.17.10.38.43.929.0 ]--
r 6     public Steque()  {
--[ 2019.09.17.10.38.44.458.0 ]--
r 6     public Steque() {
--[ 2019.09.17.10.38.45.124.0 ]--
r 6     public Steque(){
--[ 2019.09.17.10.38.46.330.0 ]--
r 6     public Steque() {
--[ 2019.09.17.10.38.46.535.0 ]--
+ 6     public Steque() 
r 7     {
--[ 2019.09.17.10.38.47.221.0 ]--
- 6
r 6     public Steque() {
--[ 2019.09.17.10.38.48.162.0 ]--
r 6     public Steque() a{
--[ 2019.09.17.10.38.48.788.0 ]--
r 6     public Steque() aa{
--[ 2019.09.17.10.38.49.076.0 ]--
r 6     public Steque() aaa{
--[ 2019.09.17.10.38.49.205.0 ]--
r 6     public Steque() aaaa{
--[ 2019.09.17.10.38.49.307.0 ]--
r 6     public Steque() aaaaa{
--[ 2019.09.17.10.38.49.461.0 ]--
r 6     public Steque() aaaaaa{
--[ 2019.09.17.10.38.49.918.0 ]--
r 6     public Steque() {
--[ 2019.09.17.10.38.50.988.0 ]--
r 6     public Steque(){
--[ 2019.09.17.10.38.52.082.0 ]--
r 6     public Steque() {
--[ 2019.09.17.10.38.52.284.0 ]--
r 6     public Steque()  {
--[ 2019.09.17.10.38.52.676.0 ]--
r 6     public Steque()   {
--[ 2019.09.17.10.38.52.924.0 ]--
r 6     public Steque()    {
--[ 2019.09.17.10.38.53.161.0 ]--
r 6     public Steque()     {
--[ 2019.09.17.10.38.53.509.0 ]--
r 6     public Steque(){
--[ 2019.09.17.10.38.56.560.0 ]--
+ 12         
--[ 2019.09.17.10.38.58.702.0 ]--
- 12
--[ 2019.09.17.10.39.01.376.0 ]--
+ 17         
--[ 2019.09.17.10.39.02.747.0 ]--
- 17
--[ 2019.09.17.10.39.06.149.0 ]--
+ 21     public void enqueue(Item item) 
r 22     {
--[ 2019.09.17.10.39.07.073.0 ]--
- 21
r 21     public void enqueue(Item item) {
--[ 2019.09.17.10.39.08.789.0 ]--
r 23     
--[ 2019.09.17.10.39.10.483.0 ]--
r 23     }
--[ 2019.09.17.10.39.16.005.0 ]--
+ 6     public Steque()
r 7     {
--[ 2019.09.17.10.39.17.150.0 ]--
r 7     a{
--[ 2019.09.17.10.39.17.416.0 ]--
r 7     as{
--[ 2019.09.17.10.39.17.506.0 ]--
r 7     asd{
--[ 2019.09.17.10.39.17.544.0 ]--
r 7     asda{
--[ 2019.09.17.10.39.17.733.0 ]--
r 7     asdaf{
--[ 2019.09.17.10.39.18.127.0 ]--
r 7     {
--[ 2019.09.17.10.39.18.856.0 ]--
- 6
r 6     public Steque() {
--[ 2019.09.17.10.39.19.986.0 ]--
r 6     public Steque(){
--[ 2019.09.17.10.39.26.009.0 ]--
+ 31     public Item pop() throws NoSuchElementException 
r 32     {
--[ 2019.09.17.10.39.27.486.0 ]--
- 31
r 31     public Item pop() throws NoSuchElementException {
--[ 2019.09.17.10.40.00.494.0 ]--
+ 6     public Steque()
r 7     {
--[ 2019.09.17.10.40.01.269.0 ]--
- 6
r 6     public Steque() {
--[ 2019.09.17.10.40.02.883.0 ]--
r 6     public Steque() d{
--[ 2019.09.17.10.40.02.916.0 ]--
r 6     public Steque() dsf{
--[ 2019.09.17.10.40.03.739.0 ]--
r 6     public Steque() ds{
--[ 2019.09.17.10.40.03.877.0 ]--
r 6     public Steque() d{
--[ 2019.09.17.10.40.03.988.0 ]--
r 6     public Steque() {
--[ 2019.09.17.10.40.07.909.0 ]--
r 8     
--[ 2019.09.17.10.40.09.474.0 ]--
r 8     }
--[ 2019.09.17.10.41.53.042.0 ]--
- 7
--[ 2019.09.17.10.41.53.631.0 ]--
+ 7         
--[ 2019.09.17.10.46.47.896.0 ]--
+ 6     
--[ 2019.09.17.10.46.49.008.0 ]--
r 6     p
--[ 2019.09.17.10.46.49.086.0 ]--
r 6     pr
--[ 2019.09.17.10.46.49.213.0 ]--
r 6     pri
--[ 2019.09.17.10.46.49.290.0 ]--
r 6     priv
--[ 2019.09.17.10.46.49.433.0 ]--
r 6     priva
--[ 2019.09.17.10.46.49.516.0 ]--
r 6     privat
--[ 2019.09.17.10.46.49.588.0 ]--
r 6     private
--[ 2019.09.17.10.46.49.681.0 ]--
r 6     private 
--[ 2019.09.17.10.46.49.782.0 ]--
r 6     private i
--[ 2019.09.17.10.46.49.839.0 ]--
r 6     private in
--[ 2019.09.17.10.46.49.917.0 ]--
r 6     private int
--[ 2019.09.17.10.46.50.021.0 ]--
r 6     private int 
--[ 2019.09.17.10.46.50.325.0 ]--
r 6     private int N
--[ 2019.09.17.10.46.51.009.0 ]--
r 6     private int N;
--[ 2019.09.17.10.46.52.905.0 ]--
r 6     private int N; 
--[ 2019.09.17.10.46.52.919.0 ]--
r 6     private int N;
--[ 2019.09.17.10.46.56.004.0 ]--
r 8 
--[ 2019.09.17.10.46.59.255.0 ]--
r 6     private int N ;
--[ 2019.09.17.10.46.59.355.0 ]--
r 6     private int N =;
--[ 2019.09.17.10.46.59.421.0 ]--
r 6     private int N = ;
--[ 2019.09.17.10.46.59.537.0 ]--
r 6     private int N = 0;
--[ 2019.09.17.10.47.00.168.0 ]--
r 6     private int N = 0 ;
--[ 2019.09.17.10.47.00.228.0 ]--
r 6     private int N = 0;
--[ 2019.09.17.10.47.03.550.0 ]--
r 13         return ;
--[ 2019.09.17.10.47.03.742.0 ]--
r 13         return N;
--[ 2019.09.17.10.47.09.996.0 ]--
r 18         return N;
--[ 2019.09.17.10.47.10.093.0 ]--
r 18         return N ;
--[ 2019.09.17.10.47.10.303.0 ]--
r 18         return N =;
--[ 2019.09.17.10.47.10.536.0 ]--
r 18         return N ==;
--[ 2019.09.17.10.47.10.676.0 ]--
r 18         return N == ;
--[ 2019.09.17.10.47.10.755.0 ]--
r 18         return N == 0;
--[ 2019.09.17.10.47.11.974.0 ]--
r 18         return N == 0 ;
--[ 2019.09.17.10.47.12.008.0 ]--
r 18         return N == 0;
--[ 2019.09.17.10.47.15.604.0 ]--
r 44     
--[ 2019.09.17.10.47.15.943.0 ]--
- 44
--[ 2019.09.17.10.47.16.249.0 ]--
+ 44         
--[ 2019.09.17.10.47.27.393.0 ]--
r 23     
--[ 2019.09.17.10.47.27.859.0 ]--
- 23
--[ 2019.09.17.10.47.28.290.0 ]--
+ 23         
--[ 2019.09.17.10.47.28.833.0 ]--
r 23         n
--[ 2019.09.17.10.47.29.694.0 ]--
r 23         
--[ 2019.09.17.10.47.29.900.0 ]--
r 23         N
--[ 2019.09.17.10.47.30.048.0 ]--
r 23         N+
--[ 2019.09.17.10.47.30.142.0 ]--
r 23         N++
--[ 2019.09.17.10.47.31.218.0 ]--
r 23         N++ 
--[ 2019.09.17.10.47.31.279.0 ]--
r 23         N++
--[ 2019.09.17.10.47.31.345.0 ]--
r 23         N++;
--[ 2019.09.17.10.47.53.090.0 ]--
r 44         S
--[ 2019.09.17.10.47.53.288.0 ]--
r 44         St
--[ 2019.09.17.10.47.54.231.0 ]--
r 44         Stw
--[ 2019.09.17.10.47.54.471.0 ]--
r 44         Stwq
--[ 2019.09.17.10.47.54.617.0 ]--
r 44         Stwqu
--[ 2019.09.17.10.47.54.952.0 ]--
r 44         Stwq
--[ 2019.09.17.10.47.55.074.0 ]--
r 44         Stw
--[ 2019.09.17.10.47.55.180.0 ]--
r 44         St
--[ 2019.09.17.10.47.55.606.0 ]--
r 44         Ste
--[ 2019.09.17.10.47.55.745.0 ]--
r 44         Steq
--[ 2019.09.17.10.47.55.819.0 ]--
r 44         Stequ
--[ 2019.09.17.10.47.55.975.0 ]--
r 44         Steque
--[ 2019.09.17.10.47.56.725.0 ]--
r 44         Steque<>
--[ 2019.09.17.10.47.57.548.0 ]--
r 44         Steque<S>
--[ 2019.09.17.10.47.58.309.0 ]--
r 44         Steque<St>
--[ 2019.09.17.10.48.01.848.0 ]--
r 44         Steque<Str>
--[ 2019.09.17.10.48.01.956.0 ]--
r 44         Steque<Stri>
--[ 2019.09.17.10.48.01.983.0 ]--
r 44         Steque<Strin>
--[ 2019.09.17.10.48.02.063.0 ]--
r 44         Steque<String>
--[ 2019.09.17.10.48.04.222.0 ]--
r 44         Steque<String> 
--[ 2019.09.17.10.48.05.605.0 ]--
r 44         Steque<String> t
--[ 2019.09.17.10.48.05.673.0 ]--
r 44         Steque<String> te
--[ 2019.09.17.10.48.05.802.0 ]--
r 44         Steque<String> tes
--[ 2019.09.17.10.48.05.937.0 ]--
r 44         Steque<String> test
--[ 2019.09.17.10.48.06.589.0 ]--
r 44         Steque<String> testS
--[ 2019.09.17.10.48.07.396.0 ]--
r 44         Steque<String> testSt
--[ 2019.09.17.10.48.09.842.0 ]--
r 44         Steque<String> testSte
--[ 2019.09.17.10.48.10.196.0 ]--
r 44         Steque<String> testSteq
--[ 2019.09.17.10.48.10.236.0 ]--
r 44         Steque<String> testStequ
--[ 2019.09.17.10.48.10.367.0 ]--
r 44         Steque<String> testSteque
--[ 2019.09.17.10.48.11.831.0 ]--
r 44         Steque<String> testSteque 
--[ 2019.09.17.10.48.11.901.0 ]--
r 44         Steque<String> testSteque =
--[ 2019.09.17.10.48.11.971.0 ]--
r 44         Steque<String> testSteque = 
--[ 2019.09.17.10.48.14.665.0 ]--
r 44         Steque<String> testSteque = m
--[ 2019.09.17.10.48.14.703.0 ]--
r 44         Steque<String> testSteque = me
--[ 2019.09.17.10.48.14.835.0 ]--
r 44         Steque<String> testSteque = mew
--[ 2019.09.17.10.48.14.996.0 ]--
r 44         Steque<String> testSteque = mew 
--[ 2019.09.17.10.48.15.308.0 ]--
r 44         Steque<String> testSteque = mew
--[ 2019.09.17.10.48.15.415.0 ]--
r 44         Steque<String> testSteque = me
--[ 2019.09.17.10.48.15.653.0 ]--
r 44         Steque<String> testSteque = m
--[ 2019.09.17.10.48.15.756.0 ]--
r 44         Steque<String> testSteque = mn
--[ 2019.09.17.10.48.15.838.0 ]--
r 44         Steque<String> testSteque = mne
--[ 2019.09.17.10.48.15.992.0 ]--
r 44         Steque<String> testSteque = mnew
--[ 2019.09.17.10.48.16.410.0 ]--
r 44         Steque<String> testSteque = mne
--[ 2019.09.17.10.48.16.513.0 ]--
r 44         Steque<String> testSteque = mn
--[ 2019.09.17.10.48.16.611.0 ]--
r 44         Steque<String> testSteque = m
--[ 2019.09.17.10.48.16.955.0 ]--
r 44         Steque<String> testSteque = 
--[ 2019.09.17.10.48.17.146.0 ]--
r 44         Steque<String> testSteque = n
--[ 2019.09.17.10.48.17.189.0 ]--
r 44         Steque<String> testSteque = ne
--[ 2019.09.17.10.48.18.171.0 ]--
r 44         Steque<String> testSteque = new
--[ 2019.09.17.10.48.18.265.0 ]--
r 44         Steque<String> testSteque = new 
--[ 2019.09.17.10.48.27.931.0 ]--
r 44         Steque<String> testSteque = new S
--[ 2019.09.17.10.48.28.205.0 ]--
r 44         Steque<String> testSteque = new St
--[ 2019.09.17.10.48.28.498.0 ]--
r 44         Steque<String> testSteque = new Stq
--[ 2019.09.17.10.48.29.718.0 ]--
r 44         Steque<String> testSteque = new Steque
--[ 2019.09.17.10.48.29.803.0 ]--
r 44         Steque<String> testSteque = new Steque<>
--[ 2019.09.17.10.48.29.819.0 ]--
r 44         Steque<String> testSteque = new Steque<>()
--[ 2019.09.17.10.48.30.992.0 ]--
r 44         Steque<String> testSteque = new Steque<>();
--[ 2019.09.17.10.48.32.405.0 ]--
r 44         Steque<String> testSteque = new Steque<>(); 
--[ 2019.09.17.10.48.32.467.0 ]--
r 44         Steque<String> testSteque = new Steque<>();
--[ 2019.09.17.10.48.36.155.0 ]--
+ 45         
--[ 2019.09.17.10.48.38.060.0 ]--
r 45         t
--[ 2019.09.17.10.48.38.160.0 ]--
r 45         te
--[ 2019.09.17.10.48.38.270.0 ]--
r 45         tes
--[ 2019.09.17.10.48.38.427.0 ]--
r 45         test
--[ 2019.09.17.10.48.39.088.0 ]--
r 45         testS
--[ 2019.09.17.10.48.39.279.0 ]--
r 45         testSt
--[ 2019.09.17.10.48.39.491.0 ]--
r 45         testStq
--[ 2019.09.17.10.48.40.009.0 ]--
r 45         testSt
--[ 2019.09.17.10.48.40.129.0 ]--
r 45         testSte
--[ 2019.09.17.10.48.40.316.0 ]--
r 45         testSteq
--[ 2019.09.17.10.48.40.379.0 ]--
r 45         testStequ
--[ 2019.09.17.10.48.40.472.0 ]--
r 45         testSteque
--[ 2019.09.17.10.48.40.907.0 ]--
r 45         testSteque.
--[ 2019.09.17.10.48.45.361.0 ]--
r 45         testSteque.e
--[ 2019.09.17.10.48.45.407.0 ]--
r 45         testSteque.en
--[ 2019.09.17.10.48.45.754.0 ]--
r 45         testSteque.enu
--[ 2019.09.17.10.48.45.941.0 ]--
r 45         testSteque.en
--[ 2019.09.17.10.48.46.101.0 ]--
r 45         testSteque.enq
--[ 2019.09.17.10.48.46.156.0 ]--
r 45         testSteque.enqu
--[ 2019.09.17.10.48.46.258.0 ]--
r 45         testSteque.enque
--[ 2019.09.17.10.48.47.488.0 ]--
r 45         testSteque.enqueue
--[ 2019.09.17.10.48.47.500.0 ]--
r 45         testSteque.enqueue()
--[ 2019.09.17.10.48.47.504.0 ]--
r 45         testSteque.enqueue();
--[ 2019.09.17.10.48.48.601.0 ]--
r 45         testSteque.enqueue("");
--[ 2019.09.17.10.48.49.030.0 ]--
r 45         testSteque.enqueue("H");
--[ 2019.09.17.10.48.49.092.0 ]--
r 45         testSteque.enqueue("He");
--[ 2019.09.17.10.48.49.152.0 ]--
r 45         testSteque.enqueue("Hel");
--[ 2019.09.17.10.48.49.796.0 ]--
r 45         testSteque.enqueue("Helo");
--[ 2019.09.17.10.48.50.214.0 ]--
r 45         testSteque.enqueue("Hel");
--[ 2019.09.17.10.48.50.367.0 ]--
r 45         testSteque.enqueue("Hell");
--[ 2019.09.17.10.48.50.492.0 ]--
r 45         testSteque.enqueue("Hello");
--[ 2019.09.17.10.48.53.172.0 ]--
r 45         testSteque.enqueue("Hello"); 
--[ 2019.09.17.10.48.53.226.0 ]--
r 45         testSteque.enqueue("Hello");
--[ 2019.09.17.10.48.56.193.0 ]--
+ 45         
--[ 2019.09.17.10.48.56.712.0 ]--
r 45         s
--[ 2019.09.17.10.48.57.684.0 ]--
r 45         
--[ 2019.09.17.10.48.57.773.0 ]--
r 45         S
--[ 2019.09.17.10.48.57.927.0 ]--
r 45         St
--[ 2019.09.17.10.48.58.103.0 ]--
r 45         Std
--[ 2019.09.17.10.48.58.652.0 ]--
r 45         StdOut
--[ 2019.09.17.10.48.59.095.0 ]--
r 45         StdOut.
--[ 2019.09.17.10.48.59.311.0 ]--
r 45         StdOut.p
--[ 2019.09.17.10.48.59.438.0 ]--
r 45         StdOut.pr
--[ 2019.09.17.10.48.59.842.0 ]--
r 45         StdOut.println
--[ 2019.09.17.10.48.59.851.0 ]--
r 45         StdOut.println()
--[ 2019.09.17.10.48.59.858.0 ]--
r 45         StdOut.println();
--[ 2019.09.17.10.49.02.411.0 ]--
r 45         StdOut.println(i);
--[ 2019.09.17.10.49.02.455.0 ]--
r 45         StdOut.println(is);
--[ 2019.09.17.10.49.03.136.0 ]--
r 45         StdOut.println(isE);
--[ 2019.09.17.10.49.03.253.0 ]--
r 45         StdOut.println(isEm);
--[ 2019.09.17.10.49.03.408.0 ]--
r 45         StdOut.println(isEmp);
--[ 2019.09.17.10.49.03.460.0 ]--
r 45         StdOut.println(isEmpt);
--[ 2019.09.17.10.49.03.591.0 ]--
r 45         StdOut.println(isEmpty);
--[ 2019.09.17.10.49.08.022.0 ]--
r 45         StdOut.println(isEmpty );
--[ 2019.09.17.10.49.08.086.0 ]--
r 45         StdOut.println(isEmpty);
--[ 2019.09.17.10.49.14.630.0 ]--
r 45         StdOut.println(tisEmpty);
--[ 2019.09.17.10.49.14.727.0 ]--
r 45         StdOut.println(teisEmpty);
--[ 2019.09.17.10.49.14.851.0 ]--
r 45         StdOut.println(tesisEmpty);
--[ 2019.09.17.10.49.14.960.0 ]--
r 45         StdOut.println(testisEmpty);
--[ 2019.09.17.10.49.15.470.0 ]--
r 45         StdOut.println(testStequeisEmpty);
--[ 2019.09.17.10.49.15.633.0 ]--
r 45         StdOut.println(testSteque.isEmpty);
--[ 2019.09.17.10.49.17.250.0 ]--
r 45         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.10.49.19.424.0 ]--
+ 47         
--[ 2019.09.17.10.49.20.399.0 ]--
r 47         S
--[ 2019.09.17.10.49.20.520.0 ]--
r 47         St
--[ 2019.09.17.10.49.21.070.0 ]--
r 47         S
--[ 2019.09.17.10.49.21.570.0 ]--
r 47         St
--[ 2019.09.17.10.49.22.578.0 ]--
r 47         Std
--[ 2019.09.17.10.49.23.085.0 ]--
r 47         StdOut
--[ 2019.09.17.10.49.23.773.0 ]--
r 47         StdOut.
--[ 2019.09.17.10.49.23.941.0 ]--
r 47         StdOut.p
--[ 2019.09.17.10.49.24.363.0 ]--
r 47         StdOut.println
--[ 2019.09.17.10.49.24.381.0 ]--
r 47         StdOut.println()
--[ 2019.09.17.10.49.24.389.0 ]--
r 47         StdOut.println();
--[ 2019.09.17.10.49.25.271.0 ]--
r 47         StdOut.println(s);
--[ 2019.09.17.10.49.25.409.0 ]--
r 47         StdOut.println(st);
--[ 2019.09.17.10.49.25.758.0 ]--
r 47         StdOut.println(s);
--[ 2019.09.17.10.49.25.839.0 ]--
r 47         StdOut.println();
--[ 2019.09.17.10.49.25.902.0 ]--
r 47         StdOut.println(t);
--[ 2019.09.17.10.49.25.971.0 ]--
r 47         StdOut.println(te);
--[ 2019.09.17.10.49.26.097.0 ]--
r 47         StdOut.println(tes);
--[ 2019.09.17.10.49.26.171.0 ]--
r 47         StdOut.println(test);
--[ 2019.09.17.10.49.26.463.0 ]--
r 47         StdOut.println(testS);
--[ 2019.09.17.10.49.26.664.0 ]--
r 47         StdOut.println(testSteque);
--[ 2019.09.17.10.49.26.983.0 ]--
r 47         StdOut.println(testSteque.);
--[ 2019.09.17.10.49.30.183.0 ]--
r 47         StdOut.println(testSteque.s);
--[ 2019.09.17.10.49.30.262.0 ]--
r 47         StdOut.println(testSteque.si);
--[ 2019.09.17.10.49.30.492.0 ]--
r 47         StdOut.println(testSteque.sie);
--[ 2019.09.17.10.49.30.729.0 ]--
r 47         StdOut.println(testSteque.si);
--[ 2019.09.17.10.49.30.764.0 ]--
r 47         StdOut.println(testSteque.siz);
--[ 2019.09.17.10.49.30.931.0 ]--
r 47         StdOut.println(testSteque.size);
--[ 2019.09.17.10.49.31.342.0 ]--
r 47         StdOut.println(testSteque.size );
--[ 2019.09.17.10.49.31.392.0 ]--
r 47         StdOut.println(testSteque.size);
--[ 2019.09.17.10.49.31.953.0 ]--
r 47         StdOut.println(testSteque.size());
--[ 2019.09.17.10.49.36.165.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.10.49.41.076.0 ]--
+ 48         
--[ 2019.09.17.10.49.41.541.0 ]--
r 48         S
--[ 2019.09.17.10.49.41.710.0 ]--
r 48         St
--[ 2019.09.17.10.49.41.886.0 ]--
r 48         Std
--[ 2019.09.17.10.49.42.571.0 ]--
r 48         StdOut
--[ 2019.09.17.10.49.42.680.0 ]--
r 48         StdOut.
--[ 2019.09.17.10.49.42.914.0 ]--
r 48         StdOut.p
--[ 2019.09.17.10.49.43.108.0 ]--
r 48         StdOut.pr
--[ 2019.09.17.10.49.43.437.0 ]--
r 48         StdOut.println
--[ 2019.09.17.10.49.43.455.0 ]--
r 48         StdOut.println()
--[ 2019.09.17.10.49.43.466.0 ]--
r 48         StdOut.println();
--[ 2019.09.17.10.49.45.447.0 ]--
r 48         StdOut.println(s);
--[ 2019.09.17.10.49.45.585.0 ]--
r 48         StdOut.println(st);
--[ 2019.09.17.10.49.45.676.0 ]--
r 48         StdOut.println(ste);
--[ 2019.09.17.10.49.46.597.0 ]--
r 48         StdOut.println(testSteque);
--[ 2019.09.17.10.49.47.795.0 ]--
r 48         StdOut.println(testSteque.);
--[ 2019.09.17.10.49.48.223.0 ]--
r 48         StdOut.println(testSteque.i);
--[ 2019.09.17.10.49.48.252.0 ]--
r 48         StdOut.println(testSteque.is);
--[ 2019.09.17.10.49.48.589.0 ]--
r 48         StdOut.println(testSteque.isE);
--[ 2019.09.17.10.49.48.779.0 ]--
r 48         StdOut.println(testSteque.isEmpty);
--[ 2019.09.17.10.49.48.794.0 ]--
r 48         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.10.49.53.090.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.10.49.59.907.0 ]--
- 45
- 45
- 45
r 45         
--[ 2019.09.17.10.50.00.119.0 ]--
- 45
--[ 2019.09.17.10.59.42.250.0 ]--
r 10     
--[ 2019.09.17.10.59.42.749.0 ]--
+ 10     
--[ 2019.09.17.10.59.43.892.0 ]--
r 11     p
--[ 2019.09.17.10.59.44.003.0 ]--
r 11     pr
--[ 2019.09.17.10.59.44.216.0 ]--
r 11     pri
--[ 2019.09.17.10.59.44.889.0 ]--
r 11     priv
--[ 2019.09.17.10.59.44.999.0 ]--
r 11     priva
--[ 2019.09.17.10.59.45.109.0 ]--
r 11     privat
--[ 2019.09.17.10.59.45.231.0 ]--
r 11     private
--[ 2019.09.17.10.59.46.341.0 ]--
r 11     privat
--[ 2019.09.17.10.59.46.422.0 ]--
r 11     priva
--[ 2019.09.17.10.59.46.518.0 ]--
r 11     priv
--[ 2019.09.17.10.59.46.657.0 ]--
r 11     pri
--[ 2019.09.17.10.59.46.742.0 ]--
r 11     pr
--[ 2019.09.17.10.59.47.055.0 ]--
r 11     p
--[ 2019.09.17.10.59.47.461.0 ]--
r 11     
--[ 2019.09.17.10.59.49.325.0 ]--
r 11     p
--[ 2019.09.17.10.59.49.914.0 ]--
r 11     pr
--[ 2019.09.17.10.59.49.946.0 ]--
r 11     pri
--[ 2019.09.17.10.59.50.083.0 ]--
r 11     priv
--[ 2019.09.17.10.59.50.186.0 ]--
r 11     priva
--[ 2019.09.17.10.59.50.288.0 ]--
r 11     privat
--[ 2019.09.17.10.59.50.363.0 ]--
r 11     private
--[ 2019.09.17.10.59.50.434.0 ]--
r 11     private 
--[ 2019.09.17.10.59.51.097.0 ]--
r 11     private c
--[ 2019.09.17.10.59.51.200.0 ]--
r 11     private cl
--[ 2019.09.17.10.59.51.251.0 ]--
r 11     private cla
--[ 2019.09.17.10.59.51.402.0 ]--
r 11     private clas
--[ 2019.09.17.10.59.51.505.0 ]--
r 11     private class
--[ 2019.09.17.10.59.53.062.0 ]--
r 11     private class 
--[ 2019.09.17.10.59.53.236.0 ]--
r 11     private class N
--[ 2019.09.17.10.59.53.332.0 ]--
r 11     private class No
--[ 2019.09.17.10.59.53.486.0 ]--
r 11     private class Node
--[ 2019.09.17.10.59.53.638.0 ]--
r 11     private class Node{}
--[ 2019.09.17.10.59.54.086.0 ]--
+ 11     private class Node{
r 12     }
--[ 2019.09.17.10.59.54.108.0 ]--
+ 12         
--[ 2019.09.17.10.59.54.218.0 ]--
+ 12         
--[ 2019.09.17.10.59.54.848.0 ]--
- 12
--[ 2019.09.17.10.59.56.680.0 ]--
r 12         I
--[ 2019.09.17.10.59.56.806.0 ]--
r 12         It
--[ 2019.09.17.10.59.56.822.0 ]--
r 12         Ite
--[ 2019.09.17.10.59.56.940.0 ]--
r 12         Item
--[ 2019.09.17.10.59.57.099.0 ]--
r 12         Item 
--[ 2019.09.17.10.59.57.512.0 ]--
r 12         Item i
--[ 2019.09.17.10.59.57.569.0 ]--
r 12         Item it
--[ 2019.09.17.10.59.57.599.0 ]--
r 12         Item ite
--[ 2019.09.17.10.59.57.701.0 ]--
r 12         Item iten
--[ 2019.09.17.10.59.58.072.0 ]--
r 12         Item ite
--[ 2019.09.17.10.59.58.203.0 ]--
r 12         Item item
--[ 2019.09.17.10.59.59.198.0 ]--
r 12         Item item;
--[ 2019.09.17.10.59.59.738.0 ]--
+ 13         
--[ 2019.09.17.11.00.00.745.0 ]--
r 10 
--[ 2019.09.17.11.00.01.976.0 ]--
r 13         N
--[ 2019.09.17.11.00.02.086.0 ]--
r 13         No
--[ 2019.09.17.11.00.02.182.0 ]--
r 13         Nod
--[ 2019.09.17.11.00.02.240.0 ]--
r 13         Node
--[ 2019.09.17.11.00.04.154.0 ]--
r 13         Node 
--[ 2019.09.17.11.00.04.193.0 ]--
r 13         Node n
--[ 2019.09.17.11.00.04.276.0 ]--
r 13         Node ne
--[ 2019.09.17.11.00.04.389.0 ]--
r 13         Node nex
--[ 2019.09.17.11.00.04.647.0 ]--
r 13         Node next
--[ 2019.09.17.11.00.04.712.0 ]--
r 13         Node next;
--[ 2019.09.17.11.00.06.241.0 ]--
r 13         Node next; 
--[ 2019.09.17.11.00.06.305.0 ]--
r 13         Node next;
--[ 2019.09.17.11.00.12.307.0 ]--
+ 7     
--[ 2019.09.17.11.00.13.007.0 ]--
r 7     p
--[ 2019.09.17.11.00.13.085.0 ]--
r 7     pr
--[ 2019.09.17.11.00.13.207.0 ]--
r 7     pri
--[ 2019.09.17.11.00.13.300.0 ]--
r 7     priv
--[ 2019.09.17.11.00.13.413.0 ]--
r 7     priva
--[ 2019.09.17.11.00.13.504.0 ]--
r 7     privat
--[ 2019.09.17.11.00.13.581.0 ]--
r 7     private
--[ 2019.09.17.11.00.13.774.0 ]--
r 7     private 
--[ 2019.09.17.11.00.13.907.0 ]--
r 7     private n
--[ 2019.09.17.11.00.13.950.0 ]--
r 7     private no
--[ 2019.09.17.11.00.13.992.0 ]--
r 7     private nod
--[ 2019.09.17.11.00.14.070.0 ]--
r 7     private node
--[ 2019.09.17.11.00.15.155.0 ]--
r 7     private 
--[ 2019.09.17.11.00.15.561.0 ]--
r 7     private N
--[ 2019.09.17.11.00.15.716.0 ]--
r 7     private No
--[ 2019.09.17.11.00.15.767.0 ]--
r 7     private Nod
--[ 2019.09.17.11.00.15.830.0 ]--
r 7     private Node
--[ 2019.09.17.11.00.16.761.0 ]--
r 7     private Node 
--[ 2019.09.17.11.00.16.921.0 ]--
r 7     private Node t
--[ 2019.09.17.11.00.16.980.0 ]--
r 7     private Node to
--[ 2019.09.17.11.00.17.152.0 ]--
r 7     private Node top
--[ 2019.09.17.11.00.17.325.0 ]--
r 7     private Node top;
--[ 2019.09.17.11.00.17.857.0 ]--
r 7     private Node top; 
--[ 2019.09.17.11.00.17.913.0 ]--
r 7     private Node top;
--[ 2019.09.17.11.00.18.373.0 ]--
+ 8     
--[ 2019.09.17.11.00.22.262.0 ]--
- 12
--[ 2019.09.17.11.00.24.366.0 ]--
r 8 
--[ 2019.09.17.11.02.32.046.0 ]--
- 8
--[ 2019.09.17.11.02.33.177.0 ]--
+ 8     
--[ 2019.09.17.11.02.33.957.0 ]--
+ 8     
--[ 2019.09.17.11.02.44.759.0 ]--
r 8     p
--[ 2019.09.17.11.02.45.565.0 ]--
r 8     pr
--[ 2019.09.17.11.02.45.667.0 ]--
r 8     pri
--[ 2019.09.17.11.02.45.927.0 ]--
r 8     priv
--[ 2019.09.17.11.02.46.084.0 ]--
r 8     priva
--[ 2019.09.17.11.02.46.161.0 ]--
r 8     privat
--[ 2019.09.17.11.02.46.230.0 ]--
r 8     private
--[ 2019.09.17.11.02.46.355.0 ]--
r 8     private 
--[ 2019.09.17.11.02.46.742.0 ]--
r 8     private N
--[ 2019.09.17.11.02.46.893.0 ]--
r 8     private No
--[ 2019.09.17.11.02.46.951.0 ]--
r 8     private Nod
--[ 2019.09.17.11.02.47.001.0 ]--
r 8     private Node
--[ 2019.09.17.11.02.47.338.0 ]--
r 8     private Node 
--[ 2019.09.17.11.02.47.593.0 ]--
r 8     private Node b
--[ 2019.09.17.11.02.47.687.0 ]--
r 8     private Node bo
--[ 2019.09.17.11.02.47.759.0 ]--
r 8     private Node bot
--[ 2019.09.17.11.02.47.861.0 ]--
r 8     private Node bott
--[ 2019.09.17.11.02.48.027.0 ]--
r 8     private Node botto
--[ 2019.09.17.11.02.48.070.0 ]--
r 8     private Node botton
--[ 2019.09.17.11.02.48.473.0 ]--
r 8     private Node bottom
--[ 2019.09.17.11.02.48.965.0 ]--
r 8     private Node bottom;
--[ 2019.09.17.11.02.49.326.0 ]--
r 8     private Node bottom; 
--[ 2019.09.17.11.02.49.376.0 ]--
r 8     private Node bottom;
--[ 2019.09.17.11.05.06.872.0 ]--
r 9 
--[ 2019.09.17.11.05.38.117.0 ]--
r 7     private Node top ;
--[ 2019.09.17.11.05.38.192.0 ]--
r 7     private Node top =;
--[ 2019.09.17.11.05.38.288.0 ]--
r 7     private Node top ==;
--[ 2019.09.17.11.05.38.328.0 ]--
r 7     private Node top == ;
--[ 2019.09.17.11.05.38.503.0 ]--
r 7     private Node top == n;
--[ 2019.09.17.11.05.38.563.0 ]--
r 7     private Node top == nu;
--[ 2019.09.17.11.05.38.782.0 ]--
r 7     private Node top == nul;
--[ 2019.09.17.11.05.38.901.0 ]--
r 7     private Node top == null;
--[ 2019.09.17.11.05.40.634.0 ]--
r 7     private Node top == null ;
--[ 2019.09.17.11.05.40.665.0 ]--
r 7     private Node top == null;
--[ 2019.09.17.11.05.42.739.0 ]--
r 7     private Node top = null;
--[ 2019.09.17.11.05.45.539.0 ]--
r 8     private Node bottom ;
--[ 2019.09.17.11.05.45.591.0 ]--
r 8     private Node bottom =;
--[ 2019.09.17.11.05.45.669.0 ]--
r 8     private Node bottom = ;
--[ 2019.09.17.11.05.45.826.0 ]--
r 8     private Node bottom = n;
--[ 2019.09.17.11.05.45.918.0 ]--
r 8     private Node bottom = nu;
--[ 2019.09.17.11.05.46.282.0 ]--
r 8     private Node bottom = nul;
--[ 2019.09.17.11.05.46.382.0 ]--
r 8     private Node bottom = null;
--[ 2019.09.17.11.06.00.536.0 ]--
r 24         return f;
--[ 2019.09.17.11.06.00.624.0 ]--
r 24         return fi;
--[ 2019.09.17.11.06.00.676.0 ]--
r 24         return fir;
--[ 2019.09.17.11.06.00.807.0 ]--
r 24         return firs;
--[ 2019.09.17.11.06.00.947.0 ]--
r 24         return first;
--[ 2019.09.17.11.06.01.030.0 ]--
r 24         return first.;
--[ 2019.09.17.11.06.04.224.0 ]--
r 24         return first;
--[ 2019.09.17.11.06.04.337.0 ]--
r 24         return first ;
--[ 2019.09.17.11.06.04.480.0 ]--
r 24         return first =;
--[ 2019.09.17.11.06.04.602.0 ]--
r 24         return first ==;
--[ 2019.09.17.11.06.04.675.0 ]--
r 24         return first == ;
--[ 2019.09.17.11.06.04.869.0 ]--
r 24         return first == n;
--[ 2019.09.17.11.06.04.951.0 ]--
r 24         return first == nu;
--[ 2019.09.17.11.06.05.786.0 ]--
r 24         return first == nul;
--[ 2019.09.17.11.06.05.881.0 ]--
r 24         return first == null;
--[ 2019.09.17.11.06.07.198.0 ]--
r 24         return first == null ;
--[ 2019.09.17.11.06.07.243.0 ]--
r 24         return first == null;
--[ 2019.09.17.11.06.08.497.0 ]--
r 24         return t == null;
--[ 2019.09.17.11.06.08.596.0 ]--
r 24         return to == null;
--[ 2019.09.17.11.06.08.622.0 ]--
r 24         return top == null;
--[ 2019.09.17.11.06.13.487.0 ]--
r 29         N
--[ 2019.09.17.11.06.13.647.0 ]--
r 29         
--[ 2019.09.17.11.06.14.384.0 ]--
r 29          
--[ 2019.09.17.11.06.14.468.0 ]--
r 29         
--[ 2019.09.17.11.06.21.173.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.06.24.564.0 ]--
+ 51         
--[ 2019.09.17.11.06.24.565.0 ]--
UpdateTree (AD): 1 0
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.06.28.424.0 ]--
r 51         S
--[ 2019.09.17.11.06.30.298.0 ]--
r 51         
--[ 2019.09.17.11.06.31.851.0 ]--
r 51         s
--[ 2019.09.17.11.06.32.654.0 ]--
r 51         
--[ 2019.09.17.11.06.34.514.0 ]--
r 51         t
--[ 2019.09.17.11.06.34.599.0 ]--
r 51         te
--[ 2019.09.17.11.06.34.705.0 ]--
r 51         tes
--[ 2019.09.17.11.06.34.836.0 ]--
r 51         test
--[ 2019.09.17.11.06.34.958.0 ]--
r 51         testSteque
--[ 2019.09.17.11.06.35.299.0 ]--
r 51         testSteque.
--[ 2019.09.17.11.06.35.710.0 ]--
r 51         testSteque.i
--[ 2019.09.17.11.06.35.814.0 ]--
r 51         testSteque.is
--[ 2019.09.17.11.06.36.518.0 ]--
r 51         testSteque.isEmpty
--[ 2019.09.17.11.06.36.536.0 ]--
r 51         testSteque.isEmpty()
--[ 2019.09.17.11.06.38.103.0 ]--
r 51         testSteque.isEmpty();
--[ 2019.09.17.11.06.39.731.0 ]--
r 29 
--[ 2019.09.17.11.06.42.219.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.06.46.015.0 ]--
r 51         S
--[ 2019.09.17.11.06.46.082.0 ]--
r 51         St
--[ 2019.09.17.11.06.46.242.0 ]--
r 51         Std
--[ 2019.09.17.11.06.46.669.0 ]--
r 51         StdOut
--[ 2019.09.17.11.06.47.044.0 ]--
r 51         StdOut.
--[ 2019.09.17.11.06.47.682.0 ]--
r 51         StdOut.println
--[ 2019.09.17.11.06.47.689.0 ]--
r 51         StdOut.println()
--[ 2019.09.17.11.06.47.694.0 ]--
r 51         StdOut.println();
--[ 2019.09.17.11.06.49.590.0 ]--
r 51         StdOut.println(t);
--[ 2019.09.17.11.06.49.646.0 ]--
r 51         StdOut.println(te);
--[ 2019.09.17.11.06.49.775.0 ]--
r 51         StdOut.println(tes);
--[ 2019.09.17.11.06.50.239.0 ]--
r 51         StdOut.println(testSteque);
--[ 2019.09.17.11.06.50.676.0 ]--
r 51         StdOut.println(testSteque.);
--[ 2019.09.17.11.06.51.424.0 ]--
r 51         StdOut.println(testSteque.u);
--[ 2019.09.17.11.06.51.449.0 ]--
r 51         StdOut.println(testSteque.us);
--[ 2019.09.17.11.06.52.034.0 ]--
r 51         StdOut.println(testSteque.us=);
--[ 2019.09.17.11.06.52.129.0 ]--
r 51         StdOut.println(testSteque.us==);
--[ 2019.09.17.11.06.52.588.0 ]--
r 51         StdOut.println(testSteque.us=);
--[ 2019.09.17.11.06.52.698.0 ]--
r 51         StdOut.println(testSteque.us);
--[ 2019.09.17.11.06.52.813.0 ]--
r 51         StdOut.println(testSteque.u);
--[ 2019.09.17.11.06.52.956.0 ]--
r 51         StdOut.println(testSteque.);
--[ 2019.09.17.11.06.53.093.0 ]--
r 51         StdOut.println(testSteque.i);
--[ 2019.09.17.11.06.53.178.0 ]--
r 51         StdOut.println(testSteque.is);
--[ 2019.09.17.11.06.53.476.0 ]--
r 51         StdOut.println(testSteque.isE);
--[ 2019.09.17.11.06.53.518.0 ]--
r 51         StdOut.println(testSteque.isEm);
--[ 2019.09.17.11.06.54.160.0 ]--
r 51         StdOut.println(testSteque.isEmpty);
--[ 2019.09.17.11.06.54.167.0 ]--
r 51         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.11.06.57.878.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.07.52.147.0 ]--
r 8     
--[ 2019.09.17.11.07.52.322.0 ]--
- 8
--[ 2019.09.17.11.07.54.224.0 ]--
r 7     private Node top, = null;
--[ 2019.09.17.11.07.54.618.0 ]--
r 7     private Node top,  = null;
--[ 2019.09.17.11.07.54.930.0 ]--
r 7     private Node top, = null;
--[ 2019.09.17.11.07.54.975.0 ]--
r 7     private Node top,b = null;
--[ 2019.09.17.11.07.55.163.0 ]--
r 7     private Node top,bo = null;
--[ 2019.09.17.11.07.55.247.0 ]--
r 7     private Node top,bot = null;
--[ 2019.09.17.11.07.55.384.0 ]--
r 7     private Node top,bott = null;
--[ 2019.09.17.11.07.55.486.0 ]--
r 7     private Node top,bottm = null;
--[ 2019.09.17.11.07.55.781.0 ]--
r 7     private Node top,bott = null;
--[ 2019.09.17.11.07.55.907.0 ]--
r 7     private Node top,botto = null;
--[ 2019.09.17.11.07.55.984.0 ]--
r 7     private Node top,bottom = null;
--[ 2019.09.17.11.07.56.320.0 ]--
r 7     private Node top,bottom  = null;
--[ 2019.09.17.11.07.56.378.0 ]--
r 7     private Node top,bottom = null;
--[ 2019.09.17.11.08.07.788.0 ]--
r 7     private Node top,bottom ;
--[ 2019.09.17.11.08.07.946.0 ]--
r 7     private Node top,bottom;
--[ 2019.09.17.11.08.16.946.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.09.37.300.0 ]--
r 6 
--[ 2019.09.17.11.09.37.696.0 ]--
- 6
--[ 2019.09.17.11.09.52.620.0 ]--
r 17         return ;
--[ 2019.09.17.11.09.57.092.0 ]--
r 17         return N;
--[ 2019.09.17.11.09.59.100.0 ]--
r 17         return ;
--[ 2019.09.17.11.10.01.732.0 ]--
r 17         return 0;
--[ 2019.09.17.11.10.03.770.0 ]--
r 17         return ;
--[ 2019.09.17.11.10.03.833.0 ]--
r 17         return -;
--[ 2019.09.17.11.10.04.344.0 ]--
r 17         return -1;
--[ 2019.09.17.11.11.48.325.0 ]--
+ 37         
--[ 2019.09.17.11.11.49.112.0 ]--
r 37         i
--[ 2019.09.17.11.11.49.210.0 ]--
r 37         if
--[ 2019.09.17.11.11.50.455.0 ]--
r 37         if()
--[ 2019.09.17.11.11.52.487.0 ]--
r 37         if(i)
--[ 2019.09.17.11.11.52.559.0 ]--
r 37         if(is)
--[ 2019.09.17.11.11.53.396.0 ]--
r 37         if(isEmpty)
--[ 2019.09.17.11.11.53.406.0 ]--
r 37         if(isEmpty())
--[ 2019.09.17.11.11.55.202.0 ]--
r 37         if(isEmpty() )
--[ 2019.09.17.11.11.55.291.0 ]--
r 37         if(isEmpty())
--[ 2019.09.17.11.11.57.557.0 ]--
r 37         if(isEmpty()){
--[ 2019.09.17.11.11.57.684.0 ]--
+ 38 
+ 39 }
--[ 2019.09.17.11.11.57.695.0 ]--
r 39         }
--[ 2019.09.17.11.11.57.711.0 ]--
r 38             
--[ 2019.09.17.11.12.00.572.0 ]--
r 38             t
--[ 2019.09.17.11.12.00.693.0 ]--
r 38             th
--[ 2019.09.17.11.12.00.803.0 ]--
r 38             thr
--[ 2019.09.17.11.12.01.223.0 ]--
r 38             thro
--[ 2019.09.17.11.12.01.303.0 ]--
r 38             throe
--[ 2019.09.17.11.12.01.751.0 ]--
r 38             thro
--[ 2019.09.17.11.12.01.829.0 ]--
r 38             throw
--[ 2019.09.17.11.12.01.967.0 ]--
r 38             throw 
--[ 2019.09.17.11.12.02.091.0 ]--
r 38             throw n
--[ 2019.09.17.11.12.02.398.0 ]--
r 38             throw ne
--[ 2019.09.17.11.12.02.501.0 ]--
r 38             throw new
--[ 2019.09.17.11.12.02.882.0 ]--
r 38             throw new 
--[ 2019.09.17.11.12.03.040.0 ]--
r 38             throw new n
--[ 2019.09.17.11.12.03.543.0 ]--
r 38             throw new 
--[ 2019.09.17.11.12.03.670.0 ]--
r 38             throw new N
--[ 2019.09.17.11.12.03.777.0 ]--
r 38             throw new No
--[ 2019.09.17.11.12.04.088.0 ]--
r 38             throw new NoS
--[ 2019.09.17.11.12.04.545.0 ]--
r 38             throw new NoSuchElementException
--[ 2019.09.17.11.12.04.581.0 ]--
r 38             throw new NoSuchElementException()
--[ 2019.09.17.11.12.05.895.0 ]--
r 38             throw new NoSuchElementException();
--[ 2019.09.17.11.12.13.343.0 ]--
+ 53         
--[ 2019.09.17.11.12.14.940.0 ]--
r 53         S
--[ 2019.09.17.11.12.15.307.0 ]--
r 53         
--[ 2019.09.17.11.12.18.873.0 ]--
r 53         t
--[ 2019.09.17.11.12.18.926.0 ]--
r 53         te
--[ 2019.09.17.11.12.19.493.0 ]--
r 53         testSteque
--[ 2019.09.17.11.12.19.722.0 ]--
r 53         testSteque.
--[ 2019.09.17.11.12.20.020.0 ]--
r 53         testSteque.p
--[ 2019.09.17.11.12.20.611.0 ]--
r 53         testSteque.po
--[ 2019.09.17.11.12.20.648.0 ]--
r 53         testSteque.pop
--[ 2019.09.17.11.12.20.978.0 ]--
r 53         testSteque.pop()
--[ 2019.09.17.11.12.21.361.0 ]--
r 53         testSteque.pop();
--[ 2019.09.17.11.12.25.362.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.12.30.278.0 ]--
r 38             throw new NoSuchElementException("");
--[ 2019.09.17.11.12.30.433.0 ]--
r 38             throw new NoSuchElementException("S");
--[ 2019.09.17.11.12.30.681.0 ]--
r 38             throw new NoSuchElementException("St");
--[ 2019.09.17.11.12.30.719.0 ]--
r 38             throw new NoSuchElementException("Sta");
--[ 2019.09.17.11.12.30.804.0 ]--
r 38             throw new NoSuchElementException("Stac");
--[ 2019.09.17.11.12.30.974.0 ]--
r 38             throw new NoSuchElementException("Stacl");
--[ 2019.09.17.11.12.31.610.0 ]--
r 38             throw new NoSuchElementException("Stac");
--[ 2019.09.17.11.12.32.338.0 ]--
r 38             throw new NoSuchElementException("Sta");
--[ 2019.09.17.11.12.32.576.0 ]--
r 38             throw new NoSuchElementException("St");
--[ 2019.09.17.11.12.33.441.0 ]--
r 38             throw new NoSuchElementException("Ste");
--[ 2019.09.17.11.12.33.639.0 ]--
r 38             throw new NoSuchElementException("Steq");
--[ 2019.09.17.11.12.33.711.0 ]--
r 38             throw new NoSuchElementException("Stequ");
--[ 2019.09.17.11.12.33.828.0 ]--
r 38             throw new NoSuchElementException("Steque");
--[ 2019.09.17.11.12.34.236.0 ]--
r 38             throw new NoSuchElementException("Steque ");
--[ 2019.09.17.11.12.34.377.0 ]--
r 38             throw new NoSuchElementException("Steque i");
--[ 2019.09.17.11.12.34.466.0 ]--
r 38             throw new NoSuchElementException("Steque is");
--[ 2019.09.17.11.12.34.766.0 ]--
r 38             throw new NoSuchElementException("Steque is ");
--[ 2019.09.17.11.12.35.004.0 ]--
r 38             throw new NoSuchElementException("Steque is e");
--[ 2019.09.17.11.12.35.111.0 ]--
r 38             throw new NoSuchElementException("Steque is em");
--[ 2019.09.17.11.12.35.263.0 ]--
r 38             throw new NoSuchElementException("Steque is emp");
--[ 2019.09.17.11.12.35.621.0 ]--
r 38             throw new NoSuchElementException("Steque is empy");
--[ 2019.09.17.11.12.35.785.0 ]--
r 38             throw new NoSuchElementException("Steque is empyu");
--[ 2019.09.17.11.12.36.500.0 ]--
r 38             throw new NoSuchElementException("Steque is empy");
--[ 2019.09.17.11.12.36.710.0 ]--
r 38             throw new NoSuchElementException("Steque is emp");
--[ 2019.09.17.11.12.37.372.0 ]--
r 38             throw new NoSuchElementException("Steque is empt");
--[ 2019.09.17.11.12.37.510.0 ]--
r 38             throw new NoSuchElementException("Steque is empty");
--[ 2019.09.17.11.12.37.771.0 ]--
r 38             throw new NoSuchElementException("Steque is empty ");
--[ 2019.09.17.11.12.37.858.0 ]--
r 38             throw new NoSuchElementException("Steque is empty");
--[ 2019.09.17.11.12.38.212.0 ]--
r 38             throw new NoSuchElementException("Steque is empty!");
--[ 2019.09.17.11.12.41.727.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.12.48.612.0 ]--
r 38             throw new NoSuchElementException("Steque is empty");
--[ 2019.09.17.11.12.52.089.0 ]--
r 38             throw new NoSuchElementException();
--[ 2019.09.17.11.12.56.642.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.13.04.704.0 ]--
- 32
--[ 2019.09.17.11.13.04.882.0 ]--
+ 32         
--[ 2019.09.17.11.13.16.427.0 ]--
r 32         N
--[ 2019.09.17.11.13.16.601.0 ]--
r 32         No
--[ 2019.09.17.11.13.16.698.0 ]--
r 32         Nod
--[ 2019.09.17.11.13.16.784.0 ]--
r 32         Node
--[ 2019.09.17.11.13.17.229.0 ]--
r 32         Node 
--[ 2019.09.17.11.13.17.281.0 ]--
r 32         Node o
--[ 2019.09.17.11.13.17.391.0 ]--
r 32         Node ol
--[ 2019.09.17.11.13.17.500.0 ]--
r 32         Node old
--[ 2019.09.17.11.13.17.671.0 ]--
r 32         Node oldf
--[ 2019.09.17.11.13.17.773.0 ]--
r 32         Node oldfi
--[ 2019.09.17.11.13.17.814.0 ]--
r 32         Node oldfir
--[ 2019.09.17.11.13.17.978.0 ]--
r 32         Node oldfirs
--[ 2019.09.17.11.13.18.045.0 ]--
r 32         Node oldfirst
--[ 2019.09.17.11.13.18.116.0 ]--
r 32         Node oldfirst 
--[ 2019.09.17.11.13.18.177.0 ]--
r 32         Node oldfirst =
--[ 2019.09.17.11.13.18.274.0 ]--
r 32         Node oldfirst = 
--[ 2019.09.17.11.13.18.420.0 ]--
r 32         Node oldfirst = f
--[ 2019.09.17.11.13.18.455.0 ]--
r 32         Node oldfirst = fi
--[ 2019.09.17.11.13.18.522.0 ]--
r 32         Node oldfirst = fir
--[ 2019.09.17.11.13.18.643.0 ]--
r 32         Node oldfirst = firs
--[ 2019.09.17.11.13.18.791.0 ]--
r 32         Node oldfirst = first
--[ 2019.09.17.11.13.19.406.0 ]--
r 32         Node oldfirst = first;
--[ 2019.09.17.11.13.19.883.0 ]--
r 32         Node oldfirst = first; 
--[ 2019.09.17.11.13.19.964.0 ]--
r 32         Node oldfirst = first;
--[ 2019.09.17.11.13.22.205.0 ]--
r 32         Node o;
--[ 2019.09.17.11.13.22.249.0 ]--
r 32         Node ol;
--[ 2019.09.17.11.13.22.307.0 ]--
r 32         Node old;
--[ 2019.09.17.11.13.22.546.0 ]--
r 32         Node oldt;
--[ 2019.09.17.11.13.22.571.0 ]--
r 32         Node oldto;
--[ 2019.09.17.11.13.22.661.0 ]--
r 32         Node oldtop;
--[ 2019.09.17.11.13.22.746.0 ]--
r 32         Node oldtop ;
--[ 2019.09.17.11.13.22.881.0 ]--
r 32         Node oldtop =;
--[ 2019.09.17.11.13.22.961.0 ]--
r 32         Node oldtop = ;
--[ 2019.09.17.11.13.23.150.0 ]--
r 32         Node oldtop = t;
--[ 2019.09.17.11.13.23.201.0 ]--
r 32         Node oldtop = to;
--[ 2019.09.17.11.13.23.347.0 ]--
r 32         Node oldtop = top;
--[ 2019.09.17.11.13.24.125.0 ]--
+ 33         
--[ 2019.09.17.11.13.29.069.0 ]--
r 33         t
--[ 2019.09.17.11.13.29.834.0 ]--
r 33         to
--[ 2019.09.17.11.13.29.864.0 ]--
r 33         top
--[ 2019.09.17.11.13.29.932.0 ]--
r 33         top 
--[ 2019.09.17.11.13.30.020.0 ]--
r 33         top =
--[ 2019.09.17.11.13.30.087.0 ]--
r 33         top = 
--[ 2019.09.17.11.13.30.244.0 ]--
r 33         top = n
--[ 2019.09.17.11.13.30.302.0 ]--
r 33         top = ne
--[ 2019.09.17.11.13.30.425.0 ]--
r 33         top = new
--[ 2019.09.17.11.13.30.547.0 ]--
r 33         top = new 
--[ 2019.09.17.11.13.30.681.0 ]--
r 33         top = new N
--[ 2019.09.17.11.13.30.778.0 ]--
r 33         top = new No
--[ 2019.09.17.11.13.30.848.0 ]--
r 33         top = new Nod
--[ 2019.09.17.11.13.30.915.0 ]--
r 33         top = new Node
--[ 2019.09.17.11.13.31.546.0 ]--
r 33         top = new Node()
--[ 2019.09.17.11.13.33.448.0 ]--
+ 34         
--[ 2019.09.17.11.13.33.453.0 ]--
r 34                 
--[ 2019.09.17.11.13.34.035.0 ]--
- 34
--[ 2019.09.17.11.13.34.429.0 ]--
r 33         top = new Node();
--[ 2019.09.17.11.13.34.688.0 ]--
+ 34         
--[ 2019.09.17.11.13.41.109.0 ]--
r 34         t
--[ 2019.09.17.11.13.41.184.0 ]--
r 34         to
--[ 2019.09.17.11.13.41.315.0 ]--
r 34         top
--[ 2019.09.17.11.13.41.490.0 ]--
r 34         top.
--[ 2019.09.17.11.13.41.676.0 ]--
r 34         top.i
--[ 2019.09.17.11.13.41.825.0 ]--
r 34         top.it
--[ 2019.09.17.11.13.41.892.0 ]--
r 34         top.ite
--[ 2019.09.17.11.13.41.978.0 ]--
r 34         top.item
--[ 2019.09.17.11.13.42.051.0 ]--
r 34         top.item 
--[ 2019.09.17.11.13.42.185.0 ]--
r 34         top.item -
--[ 2019.09.17.11.13.42.269.0 ]--
r 34         top.item - 
--[ 2019.09.17.11.13.42.639.0 ]--
r 34         top.item -
--[ 2019.09.17.11.13.42.648.0 ]--
r 34         top.item 
--[ 2019.09.17.11.13.42.766.0 ]--
r 34         top.item =
--[ 2019.09.17.11.13.42.897.0 ]--
r 34         top.item = 
--[ 2019.09.17.11.13.43.047.0 ]--
r 34         top.item = i
--[ 2019.09.17.11.13.43.079.0 ]--
r 34         top.item = it
--[ 2019.09.17.11.13.43.161.0 ]--
r 34         top.item = ite
--[ 2019.09.17.11.13.43.232.0 ]--
r 34         top.item = item
--[ 2019.09.17.11.13.44.244.0 ]--
r 34         top.item = item;
--[ 2019.09.17.11.13.44.319.0 ]--
+ 35         
--[ 2019.09.17.11.13.48.201.0 ]--
r 35         t
--[ 2019.09.17.11.13.48.294.0 ]--
r 35         to
--[ 2019.09.17.11.13.48.395.0 ]--
r 35         top
--[ 2019.09.17.11.13.48.542.0 ]--
r 35         top.
--[ 2019.09.17.11.13.50.709.0 ]--
r 35         top.n
--[ 2019.09.17.11.13.50.745.0 ]--
r 35         top.ne
--[ 2019.09.17.11.13.50.913.0 ]--
r 35         top.nex
--[ 2019.09.17.11.13.51.111.0 ]--
r 35         top.next
--[ 2019.09.17.11.13.51.178.0 ]--
r 35         top.next 
--[ 2019.09.17.11.13.51.277.0 ]--
r 35         top.next =
--[ 2019.09.17.11.13.51.364.0 ]--
r 35         top.next = 
--[ 2019.09.17.11.13.52.715.0 ]--
r 35         top.next = o
--[ 2019.09.17.11.13.52.861.0 ]--
r 35         top.next = ol
--[ 2019.09.17.11.13.52.987.0 ]--
r 35         top.next = old
--[ 2019.09.17.11.13.53.127.0 ]--
r 35         top.next = oldt
--[ 2019.09.17.11.13.53.227.0 ]--
r 35         top.next = oldto
--[ 2019.09.17.11.13.53.364.0 ]--
r 35         top.next = oldtop
--[ 2019.09.17.11.13.53.724.0 ]--
r 35         top.next = oldtop;
--[ 2019.09.17.11.14.00.891.0 ]--
+ 57         
--[ 2019.09.17.11.14.07.073.0 ]--
r 56         
--[ 2019.09.17.11.14.07.529.0 ]--
r 56         t
--[ 2019.09.17.11.14.07.620.0 ]--
r 56         te
--[ 2019.09.17.11.14.08.116.0 ]--
r 56         testSteque
--[ 2019.09.17.11.14.08.819.0 ]--
r 56         testSteque.
--[ 2019.09.17.11.14.09.237.0 ]--
r 56         testSteque. 
--[ 2019.09.17.11.14.09.270.0 ]--
r 56         testSteque.
--[ 2019.09.17.11.14.09.707.0 ]--
r 56         testSteque.p
--[ 2019.09.17.11.14.11.762.0 ]--
r 56         testSteque.push
--[ 2019.09.17.11.14.11.775.0 ]--
r 56         testSteque.push()
--[ 2019.09.17.11.14.11.781.0 ]--
r 56         testSteque.push();
--[ 2019.09.17.11.14.12.098.0 ]--
r 56         testSteque.push("");
--[ 2019.09.17.11.14.12.586.0 ]--
r 56         testSteque.push("H");
--[ 2019.09.17.11.14.12.781.0 ]--
r 56         testSteque.push("He");
--[ 2019.09.17.11.14.12.881.0 ]--
r 56         testSteque.push("Hel");
--[ 2019.09.17.11.14.13.030.0 ]--
r 56         testSteque.push("Hell");
--[ 2019.09.17.11.14.13.134.0 ]--
r 56         testSteque.push("Hello");
--[ 2019.09.17.11.14.15.347.0 ]--
+ 57         
--[ 2019.09.17.11.14.16.131.0 ]--
r 57         t
--[ 2019.09.17.11.14.16.156.0 ]--
r 57         te
--[ 2019.09.17.11.14.16.357.0 ]--
r 57         tes
--[ 2019.09.17.11.14.16.513.0 ]--
r 57         test
--[ 2019.09.17.11.14.17.072.0 ]--
r 57         tes
--[ 2019.09.17.11.14.17.142.0 ]--
r 57         te
--[ 2019.09.17.11.14.17.248.0 ]--
r 57         t
--[ 2019.09.17.11.14.17.381.0 ]--
r 57         
--[ 2019.09.17.11.14.17.705.0 ]--
- 57
--[ 2019.09.17.11.14.22.513.0 ]--
r 57         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.11.14.25.747.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.14.28.421.0 ]--
r 56         testSteque.push("Hello"); 
--[ 2019.09.17.11.14.28.422.0 ]--
UpdateTree (AD): 1 0
+ /out/production/P02_DataTypes/Steque$1.class

--[ 2019.09.17.11.14.28.441.0 ]--
r 56         testSteque.push("Hello");
--[ 2019.09.17.11.14.28.620.0 ]--
+ 57         
--[ 2019.09.17.11.14.29.680.0 ]--
- 57
--[ 2019.09.17.11.14.32.734.0 ]--
+ 58         
--[ 2019.09.17.11.14.33.738.0 ]--
r 58         p
--[ 2019.09.17.11.14.33.896.0 ]--
r 58         pr
--[ 2019.09.17.11.14.33.925.0 ]--
r 58         pri
--[ 2019.09.17.11.14.34.054.0 ]--
r 58         prin
--[ 2019.09.17.11.14.34.125.0 ]--
r 58         print
--[ 2019.09.17.11.14.34.502.0 ]--
r 58         print 
--[ 2019.09.17.11.14.34.533.0 ]--
r 58         print
--[ 2019.09.17.11.14.34.766.0 ]--
r 58         prin
--[ 2019.09.17.11.14.34.912.0 ]--
r 58         pri
--[ 2019.09.17.11.14.34.999.0 ]--
r 58         pr
--[ 2019.09.17.11.14.35.336.0 ]--
r 58         p
--[ 2019.09.17.11.14.35.578.0 ]--
r 58         
--[ 2019.09.17.11.14.35.736.0 ]--
r 58         S
--[ 2019.09.17.11.14.35.900.0 ]--
r 58         St
--[ 2019.09.17.11.14.36.035.0 ]--
r 58         Std
--[ 2019.09.17.11.14.36.193.0 ]--
r 58         StdOut
--[ 2019.09.17.11.14.36.820.0 ]--
r 58         StdOut.
--[ 2019.09.17.11.14.37.008.0 ]--
r 58         StdOut.p
--[ 2019.09.17.11.14.37.273.0 ]--
r 58         StdOut.println
--[ 2019.09.17.11.14.37.278.0 ]--
r 58         StdOut.println()
--[ 2019.09.17.11.14.37.282.0 ]--
r 58         StdOut.println();
--[ 2019.09.17.11.14.38.451.0 ]--
r 58         StdOut.println(t);
--[ 2019.09.17.11.14.38.539.0 ]--
r 58         StdOut.println(te);
--[ 2019.09.17.11.14.38.682.0 ]--
r 58         StdOut.println(tes);
--[ 2019.09.17.11.14.38.788.0 ]--
r 58         StdOut.println(test);
--[ 2019.09.17.11.14.39.268.0 ]--
r 58         StdOut.println(testSteque);
--[ 2019.09.17.11.14.45.219.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.14.52.151.0 ]--
- 57
r 57         
--[ 2019.09.17.11.14.54.276.0 ]--
r 57         y
--[ 2019.09.17.11.14.54.320.0 ]--
r 57         ye
--[ 2019.09.17.11.14.54.453.0 ]--
r 57         yes
--[ 2019.09.17.11.14.54.656.0 ]--
r 57         yest
--[ 2019.09.17.11.14.54.848.0 ]--
r 57         yes
--[ 2019.09.17.11.14.54.967.0 ]--
r 57         ye
--[ 2019.09.17.11.14.55.139.0 ]--
r 57         y
--[ 2019.09.17.11.14.55.390.0 ]--
r 57         yt
--[ 2019.09.17.11.14.55.408.0 ]--
r 57         yte
--[ 2019.09.17.11.14.55.562.0 ]--
r 57         yt
--[ 2019.09.17.11.14.55.648.0 ]--
r 57         y
--[ 2019.09.17.11.14.55.814.0 ]--
r 57         
--[ 2019.09.17.11.14.55.827.0 ]--
r 57         t
--[ 2019.09.17.11.14.55.895.0 ]--
r 57         te
--[ 2019.09.17.11.14.56.249.0 ]--
r 57         tet
--[ 2019.09.17.11.14.56.682.0 ]--
r 57         te
--[ 2019.09.17.11.14.57.062.0 ]--
r 57         testSteque
--[ 2019.09.17.11.14.57.470.0 ]--
r 57         testSteque/
--[ 2019.09.17.11.14.57.993.0 ]--
r 57         testSteque
--[ 2019.09.17.11.14.58.175.0 ]--
r 57         testSteque.
--[ 2019.09.17.11.14.58.465.0 ]--
r 57         testSteque.p
--[ 2019.09.17.11.14.58.621.0 ]--
r 57         testSteque.po
--[ 2019.09.17.11.14.58.692.0 ]--
r 57         testSteque.pop
--[ 2019.09.17.11.14.58.941.0 ]--
r 57         testSteque.pop()
--[ 2019.09.17.11.15.02.827.0 ]--
UpdateTree (AD): 0 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class

--[ 2019.09.17.11.15.02.828.0 ]--
CompilationStatus (AEW): 0 1 0
[Ljava.lang.String;@2dca6542
--[ 2019.09.17.11.15.02.935.0 ]--
r 57         testSteque.pop();
--[ 2019.09.17.11.15.02.937.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.15.02.993.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.15.07.063.0 ]--
UpdateTree (AD): 3 0
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.15.07.063.1 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.16.34.078.0 ]--
+ 43         
--[ 2019.09.17.11.16.34.664.0 ]--
r 43         i
--[ 2019.09.17.11.16.34.716.0 ]--
r 43         it
--[ 2019.09.17.11.16.34.784.0 ]--
r 43         ite
--[ 2019.09.17.11.16.34.835.0 ]--
r 43         item
--[ 2019.09.17.11.16.35.109.0 ]--
r 43         item 
--[ 2019.09.17.11.16.35.200.0 ]--
r 43         item
--[ 2019.09.17.11.16.46.056.0 ]--
r 43         ite
--[ 2019.09.17.11.16.46.182.0 ]--
r 43         it
--[ 2019.09.17.11.16.46.286.0 ]--
r 43         i
--[ 2019.09.17.11.16.46.411.0 ]--
r 43         
--[ 2019.09.17.11.16.46.616.0 ]--
r 43         I
--[ 2019.09.17.11.16.46.795.0 ]--
r 43         It
--[ 2019.09.17.11.16.46.839.0 ]--
r 43         Ite
--[ 2019.09.17.11.16.47.527.0 ]--
r 43         Item
--[ 2019.09.17.11.16.47.667.0 ]--
r 43         Item 
--[ 2019.09.17.11.16.48.983.0 ]--
r 43         Item i
--[ 2019.09.17.11.16.49.054.0 ]--
r 43         Item it
--[ 2019.09.17.11.16.49.100.0 ]--
r 43         Item ite
--[ 2019.09.17.11.16.49.184.0 ]--
r 43         Item item
--[ 2019.09.17.11.16.49.237.0 ]--
r 43         Item item 
--[ 2019.09.17.11.16.49.367.0 ]--
r 43         Item item =
--[ 2019.09.17.11.16.49.442.0 ]--
r 43         Item item = 
--[ 2019.09.17.11.16.52.624.0 ]--
r 43         Item item = t
--[ 2019.09.17.11.16.52.669.0 ]--
r 43         Item item = to
--[ 2019.09.17.11.16.52.869.0 ]--
r 43         Item item = top
--[ 2019.09.17.11.16.53.870.0 ]--
r 43         Item item = top.
--[ 2019.09.17.11.16.54.077.0 ]--
r 43         Item item = top.i
--[ 2019.09.17.11.16.54.164.0 ]--
r 43         Item item = top.it
--[ 2019.09.17.11.16.54.217.0 ]--
r 43         Item item = top.ite
--[ 2019.09.17.11.16.54.277.0 ]--
r 43         Item item = top.item
--[ 2019.09.17.11.16.54.682.0 ]--
r 43         Item item = top.item 
--[ 2019.09.17.11.16.54.739.0 ]--
r 43         Item item = top.item
--[ 2019.09.17.11.16.56.427.0 ]--
+ 44         
--[ 2019.09.17.11.16.56.438.0 ]--
r 44                 
--[ 2019.09.17.11.16.57.260.0 ]--
- 44
--[ 2019.09.17.11.16.57.305.0 ]--
r 43         Item item = top.ite
--[ 2019.09.17.11.16.58.067.0 ]--
r 43         Item item = top.item
--[ 2019.09.17.11.16.58.258.0 ]--
r 43         Item item = top.item;
--[ 2019.09.17.11.16.58.453.0 ]--
+ 44         
--[ 2019.09.17.11.17.00.164.0 ]--
r 44         t
--[ 2019.09.17.11.17.00.262.0 ]--
r 44         to
--[ 2019.09.17.11.17.00.313.0 ]--
r 44         top
--[ 2019.09.17.11.17.00.399.0 ]--
r 44         top 
--[ 2019.09.17.11.17.00.554.0 ]--
r 44         top =
--[ 2019.09.17.11.17.00.706.0 ]--
r 44         top = 
--[ 2019.09.17.11.17.01.035.0 ]--
r 44         top = n
--[ 2019.09.17.11.17.01.311.0 ]--
r 44         top = 
--[ 2019.09.17.11.17.01.434.0 ]--
r 44         top = t
--[ 2019.09.17.11.17.01.504.0 ]--
r 44         top = to
--[ 2019.09.17.11.17.01.539.0 ]--
r 44         top = top
--[ 2019.09.17.11.17.01.702.0 ]--
r 44         top = top.
--[ 2019.09.17.11.17.02.069.0 ]--
r 44         top = top.n
--[ 2019.09.17.11.17.02.133.0 ]--
r 44         top = top.ne
--[ 2019.09.17.11.17.02.608.0 ]--
r 44         top = top.nex
--[ 2019.09.17.11.17.02.917.0 ]--
r 44         top = top.next
--[ 2019.09.17.11.17.08.414.0 ]--
r 44         top = top.next;
--[ 2019.09.17.11.17.10.311.0 ]--
r 45         return nul;
--[ 2019.09.17.11.17.10.375.0 ]--
r 45         return nu;
--[ 2019.09.17.11.17.10.484.0 ]--
r 45         return n;
--[ 2019.09.17.11.17.10.642.0 ]--
r 45         return ;
--[ 2019.09.17.11.17.10.821.0 ]--
r 45         return i;
--[ 2019.09.17.11.17.10.937.0 ]--
r 45         return it;
--[ 2019.09.17.11.17.10.963.0 ]--
r 45         return ite;
--[ 2019.09.17.11.17.11.019.0 ]--
r 45         return item;
--[ 2019.09.17.11.17.16.718.0 ]--
+ 60         
--[ 2019.09.17.11.17.18.876.0 ]--
r 60         S
--[ 2019.09.17.11.17.19.036.0 ]--
r 60         St
--[ 2019.09.17.11.17.19.193.0 ]--
r 60         Std
--[ 2019.09.17.11.17.19.741.0 ]--
r 60         StdOut
--[ 2019.09.17.11.17.20.124.0 ]--
r 60         StdOut.
--[ 2019.09.17.11.17.20.771.0 ]--
r 60         StdOut.p
--[ 2019.09.17.11.17.28.631.0 ]--
r 60         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.11.17.32.554.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.19.21.310.0 ]--
+ 60         
--[ 2019.09.17.11.19.23.622.0 ]--
- 60
--[ 2019.09.17.11.19.27.648.0 ]--
+ 59         
--[ 2019.09.17.11.19.28.069.0 ]--
r 59         S
--[ 2019.09.17.11.19.29.565.0 ]--
r 59         
--[ 2019.09.17.11.19.30.091.0 ]--
r 59         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.11.19.35.069.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.19.41.702.0 ]--
r 59         
--[ 2019.09.17.11.19.41.839.0 ]--
- 59
--[ 2019.09.17.11.19.46.314.0 ]--
r 57         
--[ 2019.09.17.11.19.46.588.0 ]--
- 57
--[ 2019.09.17.11.19.50.151.0 ]--
r 59         
--[ 2019.09.17.11.19.50.389.0 ]--
- 59
--[ 2019.09.17.11.19.53.342.0 ]--
r 57         testSteque.push("Hello"); 
--[ 2019.09.17.11.19.53.373.0 ]--
r 57         testSteque.push("Hello");
--[ 2019.09.17.11.19.53.600.0 ]--
+ 58         
--[ 2019.09.17.11.19.54.761.0 ]--
r 58         t
--[ 2019.09.17.11.19.54.823.0 ]--
r 58         te
--[ 2019.09.17.11.19.54.968.0 ]--
r 58         tes
--[ 2019.09.17.11.19.55.381.0 ]--
r 58         testSteque
--[ 2019.09.17.11.19.55.976.0 ]--
r 58         testSteque.
--[ 2019.09.17.11.19.56.263.0 ]--
r 58         testSteque.p
--[ 2019.09.17.11.19.56.809.0 ]--
r 58         testSteque.push
--[ 2019.09.17.11.19.56.826.0 ]--
r 58         testSteque.push()
--[ 2019.09.17.11.19.56.837.0 ]--
r 58         testSteque.push();
--[ 2019.09.17.11.19.57.981.0 ]--
r 58         testSteque.push("");
--[ 2019.09.17.11.19.58.787.0 ]--
r 58         testSteque.push("T");
--[ 2019.09.17.11.19.58.924.0 ]--
r 58         testSteque.push("Th");
--[ 2019.09.17.11.19.58.968.0 ]--
r 58         testSteque.push("The");
--[ 2019.09.17.11.19.59.027.0 ]--
r 58         testSteque.push("Ther");
--[ 2019.09.17.11.19.59.162.0 ]--
r 58         testSteque.push("There");
--[ 2019.09.17.11.19.59.370.0 ]--
r 58         testSteque.push("There ");
--[ 2019.09.17.11.19.59.474.0 ]--
r 58         testSteque.push("There");
--[ 2019.09.17.11.20.01.812.0 ]--
+ 60         
--[ 2019.09.17.11.20.03.230.0 ]--
r 60         s
--[ 2019.09.17.11.20.03.582.0 ]--
r 60         
--[ 2019.09.17.11.20.04.462.0 ]--
r 60         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.11.20.08.127.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.20.13.296.0 ]--
r 60         
--[ 2019.09.17.11.20.13.592.0 ]--
- 60
--[ 2019.09.17.11.20.40.728.0 ]--
+ 7     
--[ 2019.09.17.11.20.41.390.0 ]--
r 7     p
--[ 2019.09.17.11.20.41.474.0 ]--
r 7     pr
--[ 2019.09.17.11.20.41.598.0 ]--
r 7     pri
--[ 2019.09.17.11.20.41.911.0 ]--
r 7     priv
--[ 2019.09.17.11.20.42.021.0 ]--
r 7     priva
--[ 2019.09.17.11.20.42.091.0 ]--
r 7     privat
--[ 2019.09.17.11.20.42.162.0 ]--
r 7     private
--[ 2019.09.17.11.20.42.187.0 ]--
r 7     private 
--[ 2019.09.17.11.20.42.322.0 ]--
r 7     private i
--[ 2019.09.17.11.20.42.342.0 ]--
r 7     private in
--[ 2019.09.17.11.20.42.412.0 ]--
r 7     private int
--[ 2019.09.17.11.20.42.443.0 ]--
r 7     private int 
--[ 2019.09.17.11.20.44.245.0 ]--
r 7     private int  
--[ 2019.09.17.11.20.44.333.0 ]--
r 7     private int 
--[ 2019.09.17.11.20.44.650.0 ]--
r 7     private int N
--[ 2019.09.17.11.20.45.056.0 ]--
r 7     private int N;
--[ 2019.09.17.11.20.45.758.0 ]--
r 7     private int N; 
--[ 2019.09.17.11.20.45.845.0 ]--
r 7     private int N;
--[ 2019.09.17.11.20.48.237.0 ]--
r 18         return -;
--[ 2019.09.17.11.20.48.367.0 ]--
r 18         return ;
--[ 2019.09.17.11.20.48.538.0 ]--
r 18         return N;
--[ 2019.09.17.11.20.53.246.0 ]--
+ 58         
--[ 2019.09.17.11.21.00.314.0 ]--
r 58         S
--[ 2019.09.17.11.21.00.472.0 ]--
r 58         St
--[ 2019.09.17.11.21.00.627.0 ]--
r 58         Std
--[ 2019.09.17.11.21.01.096.0 ]--
r 58         StdOut
--[ 2019.09.17.11.21.01.501.0 ]--
r 58         StdOut.
--[ 2019.09.17.11.21.01.985.0 ]--
r 58         StdOut.println
--[ 2019.09.17.11.21.02.007.0 ]--
r 58         StdOut.println()
--[ 2019.09.17.11.21.02.013.0 ]--
r 58         StdOut.println();
--[ 2019.09.17.11.21.02.546.0 ]--
r 58         StdOut.println(s);
--[ 2019.09.17.11.21.02.655.0 ]--
r 58         StdOut.println(si);
--[ 2019.09.17.11.21.02.717.0 ]--
r 58         StdOut.println(siz);
--[ 2019.09.17.11.21.03.078.0 ]--
r 58         StdOut.println(si);
--[ 2019.09.17.11.21.03.160.0 ]--
r 58         StdOut.println(s);
--[ 2019.09.17.11.21.03.268.0 ]--
r 58         StdOut.println();
--[ 2019.09.17.11.21.03.696.0 ]--
r 58         StdOut.println(t);
--[ 2019.09.17.11.21.03.749.0 ]--
r 58         StdOut.println(te);
--[ 2019.09.17.11.21.03.914.0 ]--
r 58         StdOut.println(tes);
--[ 2019.09.17.11.21.04.039.0 ]--
r 58         StdOut.println(test);
--[ 2019.09.17.11.21.04.197.0 ]--
r 58         StdOut.println(testSteque);
--[ 2019.09.17.11.21.04.598.0 ]--
r 58         StdOut.println(testSteque.);
--[ 2019.09.17.11.21.04.962.0 ]--
r 58         StdOut.println(testSteque.s);
--[ 2019.09.17.11.21.05.026.0 ]--
r 58         StdOut.println(testSteque.si);
--[ 2019.09.17.11.21.05.062.0 ]--
r 58         StdOut.println(testSteque.siz);
--[ 2019.09.17.11.21.05.239.0 ]--
r 58         StdOut.println(testSteque.size);
--[ 2019.09.17.11.21.05.403.0 ]--
r 58         StdOut.println(testSteque.size());
--[ 2019.09.17.11.21.06.479.0 ]--
r 58         StdOut.println(testSteque.size() );
--[ 2019.09.17.11.21.06.508.0 ]--
r 58         StdOut.println(testSteque.size());
--[ 2019.09.17.11.21.12.960.0 ]--
r 7     private int N ;
--[ 2019.09.17.11.21.13.099.0 ]--
r 7     private int N =;
--[ 2019.09.17.11.21.13.133.0 ]--
r 7     private int N = ;
--[ 2019.09.17.11.21.13.222.0 ]--
r 7     private int N = 0;
--[ 2019.09.17.11.21.16.673.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.21.23.972.0 ]--
+ 60         
--[ 2019.09.17.11.21.24.187.0 ]--
r 60         StdOut.println(testSteque.size());
--[ 2019.09.17.11.21.24.853.0 ]--
+ 62         
--[ 2019.09.17.11.21.25.027.0 ]--
r 62         StdOut.println(testSteque.size());
--[ 2019.09.17.11.22.18.846.0 ]--
- 10
--[ 2019.09.17.11.22.20.156.0 ]--
+ 10         
--[ 2019.09.17.11.22.25.588.0 ]--
+ 37         
--[ 2019.09.17.11.22.26.298.0 ]--
r 37         N
--[ 2019.09.17.11.22.26.383.0 ]--
r 37         N+
--[ 2019.09.17.11.22.26.511.0 ]--
r 37         N++
--[ 2019.09.17.11.22.26.993.0 ]--
r 37         N++;
--[ 2019.09.17.11.22.30.076.0 ]--
+ 48         
--[ 2019.09.17.11.22.30.229.0 ]--
r 48         n
--[ 2019.09.17.11.22.30.782.0 ]--
r 48         
--[ 2019.09.17.11.22.31.052.0 ]--
r 48         N
--[ 2019.09.17.11.22.31.207.0 ]--
r 48         N-
--[ 2019.09.17.11.22.31.271.0 ]--
r 48         N--
--[ 2019.09.17.11.22.31.585.0 ]--
r 48         N-- 
--[ 2019.09.17.11.22.31.648.0 ]--
r 48         N--
--[ 2019.09.17.11.22.32.155.0 ]--
r 48         N--;
--[ 2019.09.17.11.22.35.328.0 ]--
r 10 
--[ 2019.09.17.11.22.36.705.0 ]--
UpdateTree (AD): 0 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class

--[ 2019.09.17.11.22.36.705.1 ]--
CompilationStatus (AEW): 0 2 0
[Ljava.lang.String;@202c3dfd
--[ 2019.09.17.11.22.41.911.0 ]--
r 48         
--[ 2019.09.17.11.22.41.912.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.41.921.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.41.931.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.41.937.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.42.399.0 ]--
+ 46         
--[ 2019.09.17.11.22.42.399.1 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.42.402.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.42.970.0 ]--
- 46
--[ 2019.09.17.11.22.42.970.1 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.42.972.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.43.373.0 ]--
+ 47         
--[ 2019.09.17.11.22.43.374.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.43.377.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.43.756.0 ]--
r 47         N--;
--[ 2019.09.17.11.22.43.756.1 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.43.758.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.43.759.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.43.761.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.45.490.0 ]--
r 49 
--[ 2019.09.17.11.22.45.490.1 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.45.495.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.47.018.0 ]--
UpdateTree (AD): 3 0
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.17.11.22.47.018.1 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.22.56.240.0 ]--
+ 67         
--[ 2019.09.17.11.22.56.489.0 ]--
r 67         N--;
--[ 2019.09.17.11.22.57.013.0 ]--
r 67         
--[ 2019.09.17.11.22.58.148.0 ]--
r 67         t
--[ 2019.09.17.11.22.58.203.0 ]--
r 67         te
--[ 2019.09.17.11.22.58.373.0 ]--
r 67         tes
--[ 2019.09.17.11.22.58.511.0 ]--
r 67         test
--[ 2019.09.17.11.22.58.609.0 ]--
r 67         tes
--[ 2019.09.17.11.22.58.708.0 ]--
r 67         te
--[ 2019.09.17.11.22.58.818.0 ]--
r 67         t
--[ 2019.09.17.11.22.58.914.0 ]--
r 67         
--[ 2019.09.17.11.23.02.291.0 ]--
r 67         StdOut.println(testSteque.size());
--[ 2019.09.17.11.23.05.151.0 ]--
r 67         StdOut.println(testSteque.i());
--[ 2019.09.17.11.23.05.277.0 ]--
r 67         StdOut.println(testSteque.is());
--[ 2019.09.17.11.23.05.784.0 ]--
r 67         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.11.23.09.341.0 ]--
+ 67         
--[ 2019.09.17.11.23.10.270.0 ]--
r 67         StdOut.println(testSteque.size());
--[ 2019.09.17.11.23.14.255.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.23.17.540.0 ]--
r 67         StdOut.println(testSteque.isEmpty());
r 68         StdOut.println(testSteque.size());
--[ 2019.09.17.11.23.17.563.0 ]--
r 66         StdOut.println(testSteque.isEmpty());
r 67         testSteque.pop();
--[ 2019.09.17.11.23.17.670.0 ]--
r 65         StdOut.println(testSteque.isEmpty());
r 66         StdOut.println(testSteque.size());
--[ 2019.09.17.11.23.17.811.0 ]--
r 64         StdOut.println(testSteque.isEmpty());
r 65         testSteque.push("There");
--[ 2019.09.17.11.23.18.070.0 ]--
r 64         testSteque.push("There");
r 65         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.11.23.18.238.0 ]--
r 65         StdOut.println(testSteque.size());
r 66         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.11.23.18.347.0 ]--
r 66         testSteque.pop();
r 67         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.11.23.18.925.0 ]--
r 67         StdOut.println(testSteque.size());
r 68         StdOut.println(testSteque.isEmpty());
--[ 2019.09.17.11.23.21.338.0 ]--
- 67
- 67
--[ 2019.09.17.11.23.24.965.0 ]--
r 65         
--[ 2019.09.17.11.23.25.197.0 ]--
- 65
--[ 2019.09.17.11.23.28.915.0 ]--
r 63 
--[ 2019.09.17.11.23.29.518.0 ]--
- 63
--[ 2019.09.17.11.23.32.796.0 ]--
r 61 
--[ 2019.09.17.11.23.33.136.0 ]--
- 61
--[ 2019.09.17.11.25.14.330.0 ]--
UpdateTree (AD): 1 0
+ /.idea/dictionaries/ccollier.xml

--[ 2019.09.17.11.25.26.736.0 ]--
r 7     private int N = ;
--[ 2019.09.17.11.25.26.791.0 ]--
r 7     private int N = 1;
--[ 2019.09.17.11.25.31.618.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.26.37.744.0 ]--
- 10
--[ 2019.09.17.11.26.40.047.0 ]--
+ 10         
--[ 2019.09.17.11.28.31.026.0 ]--
+ 61         
--[ 2019.09.17.11.28.32.531.0 ]--
r 61         f
--[ 2019.09.17.11.28.32.617.0 ]--
r 61         fo
--[ 2019.09.17.11.28.32.693.0 ]--
r 61         for
--[ 2019.09.17.11.28.32.953.0 ]--
r 61         fo
--[ 2019.09.17.11.28.33.069.0 ]--
r 61         f
--[ 2019.09.17.11.28.33.490.0 ]--
r 61         
--[ 2019.09.17.11.28.33.651.0 ]--
- 61
--[ 2019.09.17.11.28.35.012.0 ]--
+ 63         
--[ 2019.09.17.11.28.35.403.0 ]--
r 63         f
--[ 2019.09.17.11.28.35.485.0 ]--
r 63         fo
--[ 2019.09.17.11.28.35.558.0 ]--
r 63         for
--[ 2019.09.17.11.28.35.946.0 ]--
r 63         for()
--[ 2019.09.17.11.28.36.391.0 ]--
r 63         for(i)
--[ 2019.09.17.11.28.36.968.0 ]--
r 63         for(in)
--[ 2019.09.17.11.28.37.074.0 ]--
r 63         for(int)
--[ 2019.09.17.11.28.37.136.0 ]--
r 63         for(int )
--[ 2019.09.17.11.28.37.325.0 ]--
r 63         for(int i)
--[ 2019.09.17.11.28.37.392.0 ]--
r 63         for(int i )
--[ 2019.09.17.11.28.37.990.0 ]--
r 63         for(int i =)
--[ 2019.09.17.11.28.38.109.0 ]--
r 63         for(int i = )
--[ 2019.09.17.11.28.39.332.0 ]--
r 63         for(int i = S)
--[ 2019.09.17.11.28.40.249.0 ]--
r 63         for(int i = St)
--[ 2019.09.17.11.28.40.330.0 ]--
r 63         for(int i = Stq)
--[ 2019.09.17.11.28.41.758.0 ]--
r 63         for(int i = St)
--[ 2019.09.17.11.28.42.101.0 ]--
r 63         for(int i = )
--[ 2019.09.17.11.28.49.708.0 ]--
r 63         for(int i = N)
--[ 2019.09.17.11.28.55.005.0 ]--
r 63         for(int i = )
--[ 2019.09.17.11.28.55.758.0 ]--
r 63         for(int i = 0)
--[ 2019.09.17.11.28.56.993.0 ]--
r 63         for(int i = 0;)
--[ 2019.09.17.11.28.57.087.0 ]--
r 63         for(int i = 0; )
--[ 2019.09.17.11.28.57.848.0 ]--
r 63         for(int i = 0; i)
--[ 2019.09.17.11.28.57.937.0 ]--
r 63         for(int i = 0; i )
--[ 2019.09.17.11.28.58.078.0 ]--
r 63         for(int i = 0; i <)
--[ 2019.09.17.11.28.58.195.0 ]--
r 63         for(int i = 0; i < )
--[ 2019.09.17.11.28.58.679.0 ]--
r 63         for(int i = 0; i < N)
--[ 2019.09.17.11.28.59.165.0 ]--
r 63         for(int i = 0; i < N;)
--[ 2019.09.17.11.28.59.410.0 ]--
r 63         for(int i = 0; i < N; )
--[ 2019.09.17.11.30.03.017.0 ]--
r 63         
--[ 2019.09.17.11.30.03.208.0 ]--
- 63
--[ 2019.09.17.11.30.28.942.0 ]--
+ 63         
--[ 2019.09.17.11.30.29.982.0 ]--
+ 63         
--[ 2019.09.17.11.30.30.688.0 ]--
- 63
--[ 2019.09.17.11.30.32.262.0 ]--
r 63         f
--[ 2019.09.17.11.30.32.349.0 ]--
r 63         fo
--[ 2019.09.17.11.30.32.403.0 ]--
r 63         for
--[ 2019.09.17.11.30.33.135.0 ]--
r 63         for()
--[ 2019.09.17.11.30.33.945.0 ]--
r 63         for(i)
--[ 2019.09.17.11.30.34.048.0 ]--
r 63         for(i )
--[ 2019.09.17.11.30.34.150.0 ]--
r 63         for(i =)
--[ 2019.09.17.11.30.34.213.0 ]--
r 63         for(i = )
--[ 2019.09.17.11.30.34.359.0 ]--
r 63         for(i = 0)
--[ 2019.09.17.11.30.34.534.0 ]--
r 63         for(i = 0;)
--[ 2019.09.17.11.30.38.654.0 ]--
r 63         for(in = 0;)
--[ 2019.09.17.11.30.38.754.0 ]--
r 63         for(int = 0;)
--[ 2019.09.17.11.30.38.796.0 ]--
r 63         for(int  = 0;)
--[ 2019.09.17.11.30.38.900.0 ]--
r 63         for(int I = 0;)
--[ 2019.09.17.11.30.39.313.0 ]--
r 63         for(int  = 0;)
--[ 2019.09.17.11.30.39.965.0 ]--
r 63         for(int i = 0;)
--[ 2019.09.17.11.30.41.158.0 ]--
r 63         for(int i = 0; )
--[ 2019.09.17.11.30.41.593.0 ]--
r 63         for(int i = 0; i)
--[ 2019.09.17.11.30.41.678.0 ]--
r 63         for(int i = 0; i )
--[ 2019.09.17.11.30.41.805.0 ]--
r 63         for(int i = 0; i <)
--[ 2019.09.17.11.30.41.974.0 ]--
r 63         for(int i = 0; i < )
--[ 2019.09.17.11.30.42.282.0 ]--
r 63         for(int i = 0; i < N)
--[ 2019.09.17.11.30.43.159.0 ]--
r 63         for(int i = 0; i < N;)
--[ 2019.09.17.11.30.43.854.0 ]--
r 63         for(int i = 0; i < N; )
--[ 2019.09.17.11.30.44.410.0 ]--
r 63         for(int i = 0; i < N;  )
--[ 2019.09.17.11.30.44.494.0 ]--
r 63         for(int i = 0; i < N; )
--[ 2019.09.17.11.30.44.607.0 ]--
r 63         for(int i = 0; i < N;)
--[ 2019.09.17.11.30.44.732.0 ]--
r 63         for(int i = 0; i < N)
--[ 2019.09.17.11.30.44.834.0 ]--
r 63         for(int i = 0; i < )
--[ 2019.09.17.11.30.49.051.0 ]--
r 7 int N = 1;
--[ 2019.09.17.11.30.49.564.0 ]--
r 7     int N = 1;
--[ 2019.09.17.11.30.52.702.0 ]--
r 63         for(int i = 0; i <  )
--[ 2019.09.17.11.30.52.842.0 ]--
r 63         for(int i = 0; i < N )
--[ 2019.09.17.11.30.54.163.0 ]--
r 63         for(int i = 0; i < N)
--[ 2019.09.17.11.30.54.350.0 ]--
r 63         for(int i = 0; i < N;)
--[ 2019.09.17.11.30.55.041.0 ]--
r 63         for(int i = 0; i < N; )
--[ 2019.09.17.11.30.55.511.0 ]--
r 63         for(int i = 0; i < N;)
--[ 2019.09.17.11.30.58.695.0 ]--
r 7     pint N = 1;
--[ 2019.09.17.11.30.58.777.0 ]--
r 7     print N = 1;
--[ 2019.09.17.11.30.58.888.0 ]--
r 7     priint N = 1;
--[ 2019.09.17.11.30.58.996.0 ]--
r 7     privint N = 1;
--[ 2019.09.17.11.30.59.115.0 ]--
r 7     privaint N = 1;
--[ 2019.09.17.11.30.59.210.0 ]--
r 7     privatint N = 1;
--[ 2019.09.17.11.30.59.292.0 ]--
r 7     privateint N = 1;
--[ 2019.09.17.11.30.59.327.0 ]--
r 7     private int N = 1;
--[ 2019.09.17.11.31.09.089.0 ]--
r 63         for(int i = 0; i < ;)
--[ 2019.09.17.11.31.09.152.0 ]--
r 63         for(int i = 0; i < 2;)
--[ 2019.09.17.11.31.11.503.0 ]--
r 63         for(int i = 0; i < ;)
--[ 2019.09.17.11.31.11.688.0 ]--
r 63         for(int i = 0; i < S;)
--[ 2019.09.17.11.31.11.946.0 ]--
r 63         for(int i = 0; i < St;)
--[ 2019.09.17.11.31.12.476.0 ]--
r 63         for(int i = 0; i < Ste;)
--[ 2019.09.17.11.31.12.706.0 ]--
r 63         for(int i = 0; i < Steq;)
--[ 2019.09.17.11.31.12.810.0 ]--
r 63         for(int i = 0; i < Stequ;)
--[ 2019.09.17.11.31.12.924.0 ]--
r 63         for(int i = 0; i < Steque;)
--[ 2019.09.17.11.31.14.452.0 ]--
r 63         for(int i = 0; i < Steque.;)
--[ 2019.09.17.11.31.16.278.0 ]--
r 63         for(int i = 0; i < Steque;)
--[ 2019.09.17.11.31.16.876.0 ]--
r 63         for(int i = 0; i < Stequ;)
--[ 2019.09.17.11.31.16.979.0 ]--
r 63         for(int i = 0; i < Steq;)
--[ 2019.09.17.11.31.17.082.0 ]--
r 63         for(int i = 0; i < Ste;)
--[ 2019.09.17.11.31.17.198.0 ]--
r 63         for(int i = 0; i < St;)
--[ 2019.09.17.11.31.17.333.0 ]--
r 63         for(int i = 0; i < S;)
--[ 2019.09.17.11.31.17.631.0 ]--
r 63         for(int i = 0; i < St;)
--[ 2019.09.17.11.31.17.638.0 ]--
r 63         for(int i = 0; i < Ste;)
--[ 2019.09.17.11.31.17.745.0 ]--
r 63         for(int i = 0; i < St;)
--[ 2019.09.17.11.31.17.832.0 ]--
r 63         for(int i = 0; i < S;)
--[ 2019.09.17.11.31.17.940.0 ]--
r 63         for(int i = 0; i < ;)
--[ 2019.09.17.11.31.18.057.0 ]--
r 63         for(int i = 0; i < t;)
--[ 2019.09.17.11.31.18.129.0 ]--
r 63         for(int i = 0; i < te;)
--[ 2019.09.17.11.31.18.271.0 ]--
r 63         for(int i = 0; i < tes;)
--[ 2019.09.17.11.31.18.381.0 ]--
r 63         for(int i = 0; i < test;)
--[ 2019.09.17.11.31.18.679.0 ]--
r 63         for(int i = 0; i < testSteque;)
--[ 2019.09.17.11.31.18.785.0 ]--
r 63         for(int i = 0; i < testSteque.;)
--[ 2019.09.17.11.31.19.026.0 ]--
r 63         for(int i = 0; i < testSteque.s;)
--[ 2019.09.17.11.31.19.144.0 ]--
r 63         for(int i = 0; i < testSteque.si;)
--[ 2019.09.17.11.31.19.200.0 ]--
r 63         for(int i = 0; i < testSteque.siz;)
--[ 2019.09.17.11.31.19.392.0 ]--
r 63         for(int i = 0; i < testSteque.size;)
--[ 2019.09.17.11.31.19.586.0 ]--
r 63         for(int i = 0; i < testSteque.size();)
--[ 2019.09.17.11.31.20.021.0 ]--
r 63         for(int i = 0; i < testSteque.size() ;)
--[ 2019.09.17.11.31.20.074.0 ]--
r 63         for(int i = 0; i < testSteque.size();)
--[ 2019.09.17.11.31.21.608.0 ]--
r 63         for(int i = 0; i < testSteque.size(); )
--[ 2019.09.17.11.31.23.003.0 ]--
r 63         for(int i = 0; i < testSteque.size(); i)
--[ 2019.09.17.11.31.23.133.0 ]--
r 63         for(int i = 0; i < testSteque.size(); i+)
--[ 2019.09.17.11.31.23.248.0 ]--
r 63         for(int i = 0; i < testSteque.size(); i++)
--[ 2019.09.17.11.31.24.197.0 ]--
r 63         for(int i = 0; i < testSteque.size(); i++){
--[ 2019.09.17.11.31.24.583.0 ]--
+ 64 
+ 65 }
--[ 2019.09.17.11.31.24.589.0 ]--
r 65         }
--[ 2019.09.17.11.31.24.608.0 ]--
r 64             
--[ 2019.09.17.11.31.31.866.0 ]--
r 64             s
--[ 2019.09.17.11.31.32.066.0 ]--
r 64             sy
--[ 2019.09.17.11.31.32.630.0 ]--
r 64             s
--[ 2019.09.17.11.31.32.716.0 ]--
r 64             
--[ 2019.09.17.11.31.37.826.0 ]--
- 63
- 63
r 63         
--[ 2019.09.17.11.31.38.499.0 ]--
- 63
--[ 2019.09.17.11.31.39.497.0 ]--
+ 63         
--[ 2019.09.17.11.31.41.357.0 ]--
r 63         t
--[ 2019.09.17.11.31.41.393.0 ]--
r 63         te
--[ 2019.09.17.11.31.41.584.0 ]--
r 63         tes
--[ 2019.09.17.11.31.41.693.0 ]--
r 63         test
--[ 2019.09.17.11.31.42.024.0 ]--
r 63         testSteque
--[ 2019.09.17.11.31.42.160.0 ]--
r 63         testSteque.
--[ 2019.09.17.11.31.42.642.0 ]--
r 63         testSteque.p
--[ 2019.09.17.11.31.42.734.0 ]--
r 63         testSteque.pr
--[ 2019.09.17.11.31.42.851.0 ]--
r 63         testSteque.pri
--[ 2019.09.17.11.31.43.037.0 ]--
r 63         testSteque.pr
--[ 2019.09.17.11.31.43.161.0 ]--
r 63         testSteque.p
--[ 2019.09.17.11.31.43.450.0 ]--
r 63         testSteque.
--[ 2019.09.17.11.31.43.842.0 ]--
r 63         testSteque
--[ 2019.09.17.11.31.43.858.0 ]--
r 63         testStequ
--[ 2019.09.17.11.31.43.964.0 ]--
r 63         testSteq
--[ 2019.09.17.11.31.44.068.0 ]--
r 63         testSte
--[ 2019.09.17.11.31.44.196.0 ]--
r 63         testSt
--[ 2019.09.17.11.31.44.294.0 ]--
r 63         testS
--[ 2019.09.17.11.31.44.406.0 ]--
r 63         test
--[ 2019.09.17.11.31.44.547.0 ]--
r 63         tes
--[ 2019.09.17.11.31.44.648.0 ]--
r 63         te
--[ 2019.09.17.11.31.44.765.0 ]--
r 63         t
--[ 2019.09.17.11.31.44.902.0 ]--
r 63         
--[ 2019.09.17.11.31.45.116.0 ]--
r 63         S
--[ 2019.09.17.11.31.45.260.0 ]--
r 63         St
--[ 2019.09.17.11.31.45.426.0 ]--
r 63         Std
--[ 2019.09.17.11.31.45.992.0 ]--
r 63         StdOut
--[ 2019.09.17.11.31.46.142.0 ]--
r 63         StdOut/
--[ 2019.09.17.11.31.46.434.0 ]--
r 63         StdOut/p
--[ 2019.09.17.11.31.46.665.0 ]--
r 63         StdOut/
--[ 2019.09.17.11.31.46.784.0 ]--
r 63         StdOut
--[ 2019.09.17.11.31.46.915.0 ]--
r 63         StdOut.
--[ 2019.09.17.11.31.47.030.0 ]--
r 63         StdOut.p
--[ 2019.09.17.11.31.47.303.0 ]--
r 63         StdOut.println
--[ 2019.09.17.11.31.47.321.0 ]--
r 63         StdOut.println()
--[ 2019.09.17.11.31.47.334.0 ]--
r 63         StdOut.println();
--[ 2019.09.17.11.31.49.406.0 ]--
r 63         StdOut.println( );
--[ 2019.09.17.11.31.49.436.0 ]--
r 63         StdOut.println();
--[ 2019.09.17.11.32.25.773.0 ]--
r 63         StdOut.println(s);
--[ 2019.09.17.11.32.26.239.0 ]--
r 63         StdOut.println();
--[ 2019.09.17.11.32.29.910.0 ]--
r 10 
--[ 2019.09.17.11.33.03.949.0 ]--
r 63         StdOut.println(t);
--[ 2019.09.17.11.33.04.022.0 ]--
r 63         StdOut.println(te);
--[ 2019.09.17.11.33.04.163.0 ]--
r 63         StdOut.println(tes);
--[ 2019.09.17.11.33.04.412.0 ]--
r 63         StdOut.println(testSteque);
--[ 2019.09.17.11.33.04.520.0 ]--
r 63         StdOut.println(testSteque.);
--[ 2019.09.17.11.33.04.784.0 ]--
r 63         StdOut.println(testSteque.i);
--[ 2019.09.17.11.33.04.982.0 ]--
r 63         StdOut.println(testSteque.it);
--[ 2019.09.17.11.33.05.010.0 ]--
r 63         StdOut.println(testSteque.ite);
--[ 2019.09.17.11.33.05.203.0 ]--
r 63         StdOut.println(testSteque.item);
--[ 2019.09.17.11.33.05.890.0 ]--
r 63         StdOut.println(testSteque.item );
--[ 2019.09.17.11.33.05.937.0 ]--
r 63         StdOut.println(testSteque.item);
--[ 2019.09.17.11.33.08.429.0 ]--
r 63         
--[ 2019.09.17.11.33.08.661.0 ]--
- 63
--[ 2019.09.17.11.34.53.464.0 ]--
+ 37         
--[ 2019.09.17.11.34.54.432.0 ]--
r 37         S
--[ 2019.09.17.11.34.54.527.0 ]--
r 37         ST
--[ 2019.09.17.11.34.54.697.0 ]--
r 37         STd
--[ 2019.09.17.11.34.54.769.0 ]--
r 37         STd.
--[ 2019.09.17.11.34.55.126.0 ]--
r 37         STd
--[ 2019.09.17.11.34.55.357.0 ]--
r 37         ST
--[ 2019.09.17.11.34.55.451.0 ]--
r 37         S
--[ 2019.09.17.11.34.55.622.0 ]--
r 37         St
--[ 2019.09.17.11.34.55.807.0 ]--
r 37         Std
--[ 2019.09.17.11.34.55.896.0 ]--
r 37         Std.
--[ 2019.09.17.11.34.56.606.0 ]--
r 37         Std
--[ 2019.09.17.11.34.57.875.0 ]--
r 37         StdO
--[ 2019.09.17.11.34.58.063.0 ]--
r 37         StdO.
--[ 2019.09.17.11.34.59.034.0 ]--
r 37         StdO
--[ 2019.09.17.11.35.00.074.0 ]--
r 37         StdOu
--[ 2019.09.17.11.35.00.553.0 ]--
r 37         StdOut
--[ 2019.09.17.11.35.00.653.0 ]--
r 37         StdOut.
--[ 2019.09.17.11.35.00.837.0 ]--
r 37         StdOut.p
--[ 2019.09.17.11.35.00.970.0 ]--
r 37         StdOut.pr
--[ 2019.09.17.11.35.01.056.0 ]--
r 37         StdOut.pri
--[ 2019.09.17.11.35.01.171.0 ]--
r 37         StdOut.prin
--[ 2019.09.17.11.35.01.460.0 ]--
r 37         StdOut.println
--[ 2019.09.17.11.35.01.465.0 ]--
r 37         StdOut.println()
--[ 2019.09.17.11.35.01.469.0 ]--
r 37         StdOut.println();
--[ 2019.09.17.11.35.02.619.0 ]--
r 37         StdOut.println(i);
--[ 2019.09.17.11.35.02.734.0 ]--
r 37         StdOut.println(it);
--[ 2019.09.17.11.35.02.796.0 ]--
r 37         StdOut.println(ite);
--[ 2019.09.17.11.35.02.876.0 ]--
r 37         StdOut.println(item);
--[ 2019.09.17.11.35.03.161.0 ]--
r 37         StdOut.println(ite);
--[ 2019.09.17.11.35.03.331.0 ]--
r 37         StdOut.println(it);
--[ 2019.09.17.11.35.03.386.0 ]--
r 37         StdOut.println(i);
--[ 2019.09.17.11.35.03.783.0 ]--
r 37         StdOut.println();
--[ 2019.09.17.11.35.05.087.0 ]--
r 37         StdOut.println(t);
--[ 2019.09.17.11.35.05.118.0 ]--
r 37         StdOut.println(to);
--[ 2019.09.17.11.35.05.253.0 ]--
r 37         StdOut.println(top);
--[ 2019.09.17.11.35.05.381.0 ]--
r 37         StdOut.println(top.);
--[ 2019.09.17.11.35.05.571.0 ]--
r 37         StdOut.println(top.i);
--[ 2019.09.17.11.35.05.751.0 ]--
r 37         StdOut.println(top.id);
--[ 2019.09.17.11.35.05.791.0 ]--
r 37         StdOut.println(top.ide);
--[ 2019.09.17.11.35.05.913.0 ]--
r 37         StdOut.println(top.idem);
--[ 2019.09.17.11.35.07.069.0 ]--
r 37         StdOut.println(top.ide);
--[ 2019.09.17.11.35.07.141.0 ]--
r 37         StdOut.println(top.id);
--[ 2019.09.17.11.35.07.273.0 ]--
r 37         StdOut.println(top.i);
--[ 2019.09.17.11.35.07.306.0 ]--
r 37         StdOut.println(top.it);
--[ 2019.09.17.11.35.07.361.0 ]--
r 37         StdOut.println(top.ite);
--[ 2019.09.17.11.35.07.413.0 ]--
r 37         StdOut.println(top.item);
--[ 2019.09.17.11.35.11.679.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.35.17.251.0 ]--
r 64         testSteque.pop(); 
--[ 2019.09.17.11.35.17.293.0 ]--
r 64         testSteque.pop();
--[ 2019.09.17.11.35.25.240.0 ]--
r 47         top = top.next; 
--[ 2019.09.17.11.35.25.266.0 ]--
r 47         top = top.next;
--[ 2019.09.17.11.35.25.461.0 ]--
+ 48         
--[ 2019.09.17.11.35.26.698.0 ]--
r 48         S
--[ 2019.09.17.11.35.27.075.0 ]--
r 48         St
--[ 2019.09.17.11.35.27.243.0 ]--
r 48         Std
--[ 2019.09.17.11.35.27.757.0 ]--
r 48         StdOut
--[ 2019.09.17.11.35.27.899.0 ]--
r 48         StdOut.
--[ 2019.09.17.11.35.28.093.0 ]--
r 48         StdOut.p
--[ 2019.09.17.11.35.28.200.0 ]--
r 48         StdOut.pr
--[ 2019.09.17.11.35.28.286.0 ]--
r 48         StdOut.pri
--[ 2019.09.17.11.35.28.355.0 ]--
r 48         StdOut.prin
--[ 2019.09.17.11.35.28.546.0 ]--
r 48         StdOut.println
--[ 2019.09.17.11.35.28.550.0 ]--
r 48         StdOut.println()
--[ 2019.09.17.11.35.28.552.0 ]--
r 48         StdOut.println();
--[ 2019.09.17.11.35.29.129.0 ]--
r 48         StdOut.println("");
--[ 2019.09.17.11.35.29.655.0 ]--
r 48         StdOut.println("R");
--[ 2019.09.17.11.35.29.823.0 ]--
r 48         StdOut.println("Re");
--[ 2019.09.17.11.35.29.910.0 ]--
r 48         StdOut.println("Rem");
--[ 2019.09.17.11.35.29.970.0 ]--
r 48         StdOut.println("Remo");
--[ 2019.09.17.11.35.30.149.0 ]--
r 48         StdOut.println("Remoi");
--[ 2019.09.17.11.35.30.371.0 ]--
r 48         StdOut.println("Remo");
--[ 2019.09.17.11.35.30.482.0 ]--
r 48         StdOut.println("Remov");
--[ 2019.09.17.11.35.30.534.0 ]--
r 48         StdOut.println("Removi");
--[ 2019.09.17.11.35.30.589.0 ]--
r 48         StdOut.println("Removin");
--[ 2019.09.17.11.35.30.654.0 ]--
r 48         StdOut.println("Removing");
--[ 2019.09.17.11.35.30.727.0 ]--
r 48         StdOut.println("Removing ");
--[ 2019.09.17.11.35.30.905.0 ]--
r 48         StdOut.println("Removing I");
--[ 2019.09.17.11.35.31.032.0 ]--
r 48         StdOut.println("Removing It");
--[ 2019.09.17.11.35.31.101.0 ]--
r 48         StdOut.println("Removing Ite");
--[ 2019.09.17.11.35.31.149.0 ]--
r 48         StdOut.println("Removing Item");
--[ 2019.09.17.11.35.31.321.0 ]--
r 48         StdOut.println("Removing Item:");
--[ 2019.09.17.11.35.31.404.0 ]--
r 48         StdOut.println("Removing Item: ");
--[ 2019.09.17.11.35.32.630.0 ]--
r 48         StdOut.println("Removing Item: " );
--[ 2019.09.17.11.35.34.044.0 ]--
r 48         StdOut.println("Removing Item: " +);
--[ 2019.09.17.11.35.34.144.0 ]--
r 48         StdOut.println("Removing Item: " + );
--[ 2019.09.17.11.35.36.003.0 ]--
r 48         StdOut.println("Removing Item: " + t);
--[ 2019.09.17.11.35.36.045.0 ]--
r 48         StdOut.println("Removing Item: " + to);
--[ 2019.09.17.11.35.36.226.0 ]--
r 48         StdOut.println("Removing Item: " + top);
--[ 2019.09.17.11.35.36.708.0 ]--
r 48         StdOut.println("Removing Item: " + top.);
--[ 2019.09.17.11.35.37.804.0 ]--
r 48         StdOut.println("Removing Item: " + top.i);
--[ 2019.09.17.11.35.37.853.0 ]--
r 48         StdOut.println("Removing Item: " + top.it);
--[ 2019.09.17.11.35.37.892.0 ]--
r 48         StdOut.println("Removing Item: " + top.ite);
--[ 2019.09.17.11.35.38.004.0 ]--
r 48         StdOut.println("Removing Item: " + top.item);
--[ 2019.09.17.11.35.42.104.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.35.54.597.0 ]--
r 48         
--[ 2019.09.17.11.35.54.816.0 ]--
- 48
--[ 2019.09.17.11.35.55.393.0 ]--
r 47         top = top.next; 
--[ 2019.09.17.11.35.55.443.0 ]--
r 47         top = top.next;
--[ 2019.09.17.11.36.00.663.0 ]--
r 37 
--[ 2019.09.17.11.36.01.067.0 ]--
- 37
--[ 2019.09.17.11.39.12.815.0 ]--
r 27     public void enqueue(Item item) { 
--[ 2019.09.17.11.39.12.882.0 ]--
r 27     public void enqueue(Item item) {
--[ 2019.09.17.11.39.14.965.0 ]--
+ 28         
--[ 2019.09.17.11.39.15.570.0 ]--
r 28         N
--[ 2019.09.17.11.39.15.739.0 ]--
r 28         No
--[ 2019.09.17.11.39.15.786.0 ]--
r 28         Nod
--[ 2019.09.17.11.39.15.840.0 ]--
r 28         Node
--[ 2019.09.17.11.39.15.916.0 ]--
r 28         Node 
--[ 2019.09.17.11.39.15.973.0 ]--
r 28         Node o
--[ 2019.09.17.11.39.16.116.0 ]--
r 28         Node ol
--[ 2019.09.17.11.39.16.201.0 ]--
r 28         Node old
--[ 2019.09.17.11.39.16.622.0 ]--
r 28         Node oldl
--[ 2019.09.17.11.39.16.690.0 ]--
r 28         Node oldla
--[ 2019.09.17.11.39.16.809.0 ]--
r 28         Node oldlas
--[ 2019.09.17.11.39.17.032.0 ]--
r 28         Node oldlast
--[ 2019.09.17.11.39.17.080.0 ]--
r 28         Node oldlast 
--[ 2019.09.17.11.39.17.177.0 ]--
r 28         Node oldlast =
--[ 2019.09.17.11.39.17.252.0 ]--
r 28         Node oldlast = 
--[ 2019.09.17.11.39.17.766.0 ]--
r 28         Node oldlast = l
--[ 2019.09.17.11.39.17.848.0 ]--
r 28         Node oldlast = la
--[ 2019.09.17.11.39.17.904.0 ]--
r 28         Node oldlast = las
--[ 2019.09.17.11.39.18.049.0 ]--
r 28         Node oldlast = last
--[ 2019.09.17.11.39.22.236.0 ]--
r 28         Node o = last
--[ 2019.09.17.11.39.22.348.0 ]--
r 28         Node ob = last
--[ 2019.09.17.11.39.22.731.0 ]--
r 28         Node  = last
--[ 2019.09.17.11.39.23.208.0 ]--
r 28         Node o = last
--[ 2019.09.17.11.39.23.346.0 ]--
r 28         Node ol = last
--[ 2019.09.17.11.39.23.392.0 ]--
r 28         Node old = last
--[ 2019.09.17.11.39.23.736.0 ]--
r 28         Node oldb = last
--[ 2019.09.17.11.39.24.172.0 ]--
r 28         Node old = last
--[ 2019.09.17.11.39.25.673.0 ]--
r 28         Node oldb = last
--[ 2019.09.17.11.39.25.837.0 ]--
r 28         Node oldbo = last
--[ 2019.09.17.11.39.26.365.0 ]--
r 28         Node oldb = last
--[ 2019.09.17.11.39.26.476.0 ]--
r 28         Node old = last
--[ 2019.09.17.11.39.26.654.0 ]--
r 28         Node oldB = last
--[ 2019.09.17.11.39.27.007.0 ]--
r 28         Node oldBo = last
--[ 2019.09.17.11.39.27.250.0 ]--
r 28         Node oldB = last
--[ 2019.09.17.11.39.27.339.0 ]--
r 28         Node old = last
--[ 2019.09.17.11.39.27.442.0 ]--
r 28         Node oldb = last
--[ 2019.09.17.11.39.27.542.0 ]--
r 28         Node oldbo = last
--[ 2019.09.17.11.39.27.690.0 ]--
r 28         Node oldbot = last
--[ 2019.09.17.11.39.27.831.0 ]--
r 28         Node oldbott = last
--[ 2019.09.17.11.39.27.902.0 ]--
r 28         Node oldbotto = last
--[ 2019.09.17.11.39.27.955.0 ]--
r 28         Node oldbottom = last
--[ 2019.09.17.11.39.29.177.0 ]--
r 28         Node oldbottom = b
--[ 2019.09.17.11.39.29.302.0 ]--
r 28         Node oldbottom = bo
--[ 2019.09.17.11.39.29.369.0 ]--
r 28         Node oldbottom = bot
--[ 2019.09.17.11.39.29.482.0 ]--
r 28         Node oldbottom = bott
--[ 2019.09.17.11.39.29.565.0 ]--
r 28         Node oldbottom = botto
--[ 2019.09.17.11.39.29.596.0 ]--
r 28         Node oldbottom = bottom
--[ 2019.09.17.11.39.29.737.0 ]--
r 28         Node oldbottom = bottom;
--[ 2019.09.17.11.39.30.406.0 ]--
+ 29         
--[ 2019.09.17.11.39.33.194.0 ]--
r 29         b
--[ 2019.09.17.11.39.33.281.0 ]--
r 29         bo
--[ 2019.09.17.11.39.33.470.0 ]--
r 29         bot
--[ 2019.09.17.11.39.33.553.0 ]--
r 29         bott
--[ 2019.09.17.11.39.33.799.0 ]--
r 29         botto
--[ 2019.09.17.11.39.33.852.0 ]--
r 29         bottom
--[ 2019.09.17.11.39.33.961.0 ]--
r 29         bottom 
--[ 2019.09.17.11.39.34.065.0 ]--
r 29         bottom =
--[ 2019.09.17.11.39.34.148.0 ]--
r 29         bottom = 
--[ 2019.09.17.11.39.34.261.0 ]--
r 29         bottom = n
--[ 2019.09.17.11.39.34.376.0 ]--
r 29         bottom = ne
--[ 2019.09.17.11.39.34.521.0 ]--
r 29         bottom = new
--[ 2019.09.17.11.39.34.622.0 ]--
r 29         bottom = new 
--[ 2019.09.17.11.39.35.929.0 ]--
r 29         bottom = new N
--[ 2019.09.17.11.39.36.086.0 ]--
r 29         bottom = new No
--[ 2019.09.17.11.39.36.146.0 ]--
r 29         bottom = new Nod
--[ 2019.09.17.11.39.36.198.0 ]--
r 29         bottom = new Node
--[ 2019.09.17.11.39.36.390.0 ]--
r 29         bottom = new Node()
--[ 2019.09.17.11.39.36.618.0 ]--
r 29         bottom = new Node();
--[ 2019.09.17.11.39.36.808.0 ]--
+ 30         
--[ 2019.09.17.11.39.40.600.0 ]--
r 30         b
--[ 2019.09.17.11.39.40.679.0 ]--
r 30         bo
--[ 2019.09.17.11.39.40.760.0 ]--
r 30         bot
--[ 2019.09.17.11.39.40.904.0 ]--
r 30         bott
--[ 2019.09.17.11.39.40.966.0 ]--
r 30         botto
--[ 2019.09.17.11.39.41.012.0 ]--
r 30         bottom
--[ 2019.09.17.11.39.41.219.0 ]--
r 30         bottom.
--[ 2019.09.17.11.39.43.535.0 ]--
r 30         bottom.i
--[ 2019.09.17.11.39.43.614.0 ]--
r 30         bottom.it
--[ 2019.09.17.11.39.43.651.0 ]--
r 30         bottom.ite
--[ 2019.09.17.11.39.43.710.0 ]--
r 30         bottom.item
--[ 2019.09.17.11.39.43.810.0 ]--
r 30         bottom.item 
--[ 2019.09.17.11.39.43.938.0 ]--
r 30         bottom.item =
--[ 2019.09.17.11.39.43.989.0 ]--
r 30         bottom.item = 
--[ 2019.09.17.11.39.46.012.0 ]--
r 30         bottom.item = i
--[ 2019.09.17.11.39.46.095.0 ]--
r 30         bottom.item = it
--[ 2019.09.17.11.39.46.130.0 ]--
r 30         bottom.item = ite
--[ 2019.09.17.11.39.46.202.0 ]--
r 30         bottom.item = item
--[ 2019.09.17.11.39.46.543.0 ]--
r 30         bottom.item = item;
--[ 2019.09.17.11.39.46.637.0 ]--
+ 31         
--[ 2019.09.17.11.39.49.852.0 ]--
r 31         b
--[ 2019.09.17.11.39.49.909.0 ]--
r 31         bo
--[ 2019.09.17.11.39.50.022.0 ]--
r 31         bot
--[ 2019.09.17.11.39.50.174.0 ]--
r 31         bott
--[ 2019.09.17.11.39.50.258.0 ]--
r 31         botto
--[ 2019.09.17.11.39.50.519.0 ]--
r 31         bottom
--[ 2019.09.17.11.39.50.785.0 ]--
r 31         bottom.
--[ 2019.09.17.11.39.50.989.0 ]--
r 31         bottom.n
--[ 2019.09.17.11.39.51.021.0 ]--
r 31         bottom.ne
--[ 2019.09.17.11.39.51.163.0 ]--
r 31         bottom.nex
--[ 2019.09.17.11.39.51.354.0 ]--
r 31         bottom.next
--[ 2019.09.17.11.39.51.408.0 ]--
r 31         bottom.next 
--[ 2019.09.17.11.39.51.545.0 ]--
r 31         bottom.next =
--[ 2019.09.17.11.39.51.597.0 ]--
r 31         bottom.next = 
--[ 2019.09.17.11.39.57.408.0 ]--
r 31         bottom.next = n
--[ 2019.09.17.11.39.57.444.0 ]--
r 31         bottom.next = nu
--[ 2019.09.17.11.39.57.624.0 ]--
r 31         bottom.next = nul
--[ 2019.09.17.11.39.57.770.0 ]--
r 31         bottom.next = null
--[ 2019.09.17.11.39.57.917.0 ]--
r 31         bottom.next = null;
--[ 2019.09.17.11.39.58.213.0 ]--
+ 32         
--[ 2019.09.17.11.39.59.637.0 ]--
r 32         i
--[ 2019.09.17.11.39.59.861.0 ]--
r 32         if
--[ 2019.09.17.11.39.59.999.0 ]--
r 32         if()
--[ 2019.09.17.11.40.00.580.0 ]--
r 32         if(I)
--[ 2019.09.17.11.40.00.732.0 ]--
r 32         if(Is)
--[ 2019.09.17.11.40.01.365.0 ]--
r 32         if(I)
--[ 2019.09.17.11.40.01.459.0 ]--
r 32         if()
--[ 2019.09.17.11.40.01.788.0 ]--
r 32         if(i)
--[ 2019.09.17.11.40.01.852.0 ]--
r 32         if(is)
--[ 2019.09.17.11.40.02.152.0 ]--
r 32         if(isE)
--[ 2019.09.17.11.40.02.235.0 ]--
r 32         if(isEm)
--[ 2019.09.17.11.40.02.724.0 ]--
r 32         if(isEmpty)
--[ 2019.09.17.11.40.02.734.0 ]--
r 32         if(isEmpty())
--[ 2019.09.17.11.40.07.541.0 ]--
r 32         if(isEmpty()) 
--[ 2019.09.17.11.40.07.606.0 ]--
r 32         if(isEmpty()) f
--[ 2019.09.17.11.40.07.669.0 ]--
r 32         if(isEmpty()) fi
--[ 2019.09.17.11.40.07.717.0 ]--
r 32         if(isEmpty()) fir
--[ 2019.09.17.11.40.07.871.0 ]--
r 32         if(isEmpty()) firs
--[ 2019.09.17.11.40.07.968.0 ]--
r 32         if(isEmpty()) first
--[ 2019.09.17.11.40.08.059.0 ]--
r 32         if(isEmpty()) first 
--[ 2019.09.17.11.40.08.427.0 ]--
r 32         if(isEmpty()) first
--[ 2019.09.17.11.40.08.542.0 ]--
r 32         if(isEmpty()) firs
--[ 2019.09.17.11.40.08.642.0 ]--
r 32         if(isEmpty()) fir
--[ 2019.09.17.11.40.08.795.0 ]--
r 32         if(isEmpty()) fi
--[ 2019.09.17.11.40.08.871.0 ]--
r 32         if(isEmpty()) f
--[ 2019.09.17.11.40.08.999.0 ]--
r 32         if(isEmpty()) 
--[ 2019.09.17.11.40.09.176.0 ]--
r 32         if(isEmpty()) b
--[ 2019.09.17.11.40.09.293.0 ]--
r 32         if(isEmpty()) bo
--[ 2019.09.17.11.40.09.442.0 ]--
r 32         if(isEmpty()) bot
--[ 2019.09.17.11.40.09.543.0 ]--
r 32         if(isEmpty()) bott
--[ 2019.09.17.11.40.09.614.0 ]--
r 32         if(isEmpty()) botto
--[ 2019.09.17.11.40.09.675.0 ]--
r 32         if(isEmpty()) bottom
--[ 2019.09.17.11.40.09.791.0 ]--
r 32         if(isEmpty()) bottom 
--[ 2019.09.17.11.40.09.897.0 ]--
r 32         if(isEmpty()) bottom =
--[ 2019.09.17.11.40.09.994.0 ]--
r 32         if(isEmpty()) bottom = 
--[ 2019.09.17.11.40.10.389.0 ]--
r 32         if(isEmpty()) bottom 
--[ 2019.09.17.11.40.10.523.0 ]--
r 32         if(isEmpty()) 
--[ 2019.09.17.11.40.10.741.0 ]--
r 32         if(isEmpty())
--[ 2019.09.17.11.40.11.125.0 ]--
r 32         if(isEmpty()) 
--[ 2019.09.17.11.40.11.207.0 ]--
r 32         if(isEmpty()) t
--[ 2019.09.17.11.40.11.293.0 ]--
r 32         if(isEmpty()) to
--[ 2019.09.17.11.40.11.436.0 ]--
r 32         if(isEmpty()) top
--[ 2019.09.17.11.40.11.532.0 ]--
r 32         if(isEmpty()) top 
--[ 2019.09.17.11.40.11.595.0 ]--
r 32         if(isEmpty()) top =
--[ 2019.09.17.11.40.11.699.0 ]--
r 32         if(isEmpty()) top ==
--[ 2019.09.17.11.40.11.838.0 ]--
r 32         if(isEmpty()) top == 
--[ 2019.09.17.11.40.12.107.0 ]--
r 32         if(isEmpty()) top ==
--[ 2019.09.17.11.40.12.217.0 ]--
r 32         if(isEmpty()) top =
--[ 2019.09.17.11.40.12.303.0 ]--
r 32         if(isEmpty()) top = 
--[ 2019.09.17.11.40.12.506.0 ]--
r 32         if(isEmpty()) top = b
--[ 2019.09.17.11.40.12.636.0 ]--
r 32         if(isEmpty()) top = bo
--[ 2019.09.17.11.40.12.706.0 ]--
r 32         if(isEmpty()) top = bot
--[ 2019.09.17.11.40.12.856.0 ]--
r 32         if(isEmpty()) top = bott
--[ 2019.09.17.11.40.12.938.0 ]--
r 32         if(isEmpty()) top = botto
--[ 2019.09.17.11.40.12.978.0 ]--
r 32         if(isEmpty()) top = bottom
--[ 2019.09.17.11.40.14.611.0 ]--
r 32         if(isEmpty()) top = bottom;
--[ 2019.09.17.11.40.14.822.0 ]--
+ 33         
--[ 2019.09.17.11.40.15.111.0 ]--
r 33         e
--[ 2019.09.17.11.40.15.183.0 ]--
r 33         e;
--[ 2019.09.17.11.40.15.385.0 ]--
r 33         e;s
--[ 2019.09.17.11.40.15.665.0 ]--
r 33         e;
--[ 2019.09.17.11.40.15.772.0 ]--
r 33         e
--[ 2019.09.17.11.40.15.926.0 ]--
r 33         el
--[ 2019.09.17.11.40.15.994.0 ]--
r 33         els
--[ 2019.09.17.11.40.16.125.0 ]--
r 33         else
--[ 2019.09.17.11.40.17.580.0 ]--
r 33         else 
--[ 2019.09.17.11.40.17.726.0 ]--
r 33         else o
--[ 2019.09.17.11.40.18.212.0 ]--
r 33         else ol
--[ 2019.09.17.11.40.18.489.0 ]--
r 33         else old
--[ 2019.09.17.11.40.18.897.0 ]--
r 33         else oldb
--[ 2019.09.17.11.40.18.961.0 ]--
r 33         else oldbo
--[ 2019.09.17.11.40.19.029.0 ]--
r 33         else oldbot
--[ 2019.09.17.11.40.19.174.0 ]--
r 33         else oldbott
--[ 2019.09.17.11.40.19.226.0 ]--
r 33         else oldbotto
--[ 2019.09.17.11.40.19.289.0 ]--
r 33         else oldbottom
--[ 2019.09.17.11.40.19.382.0 ]--
r 33         else oldbottom 
--[ 2019.09.17.11.40.19.469.0 ]--
r 33         else oldbottom =
--[ 2019.09.17.11.40.21.116.0 ]--
r 33         else oldbottom 
--[ 2019.09.17.11.40.21.229.0 ]--
r 33         else oldbottom
--[ 2019.09.17.11.40.21.480.0 ]--
r 33         else oldbottom.
--[ 2019.09.17.11.40.21.758.0 ]--
r 33         else oldbottom.n
--[ 2019.09.17.11.40.21.785.0 ]--
r 33         else oldbottom.ne
--[ 2019.09.17.11.40.21.924.0 ]--
r 33         else oldbottom.nex
--[ 2019.09.17.11.40.22.106.0 ]--
r 33         else oldbottom.next
--[ 2019.09.17.11.40.22.158.0 ]--
r 33         else oldbottom.next 
--[ 2019.09.17.11.40.22.240.0 ]--
r 33         else oldbottom.next =
--[ 2019.09.17.11.40.22.307.0 ]--
r 33         else oldbottom.next = 
--[ 2019.09.17.11.40.22.449.0 ]--
r 33         else oldbottom.next = l
--[ 2019.09.17.11.40.22.510.0 ]--
r 33         else oldbottom.next = la
--[ 2019.09.17.11.40.22.557.0 ]--
r 33         else oldbottom.next = las
--[ 2019.09.17.11.40.22.701.0 ]--
r 33         else oldbottom.next = last
--[ 2019.09.17.11.40.23.200.0 ]--
r 33         else oldbottom.next = last;
--[ 2019.09.17.11.40.25.968.0 ]--
r 33         else oldbottom.next = b;
--[ 2019.09.17.11.40.26.072.0 ]--
r 33         else oldbottom.next = bo;
--[ 2019.09.17.11.40.26.360.0 ]--
r 33         else oldbottom.next = bot;
--[ 2019.09.17.11.40.26.463.0 ]--
r 33         else oldbottom.next = bott;
--[ 2019.09.17.11.40.26.561.0 ]--
r 33         else oldbottom.next = bottm;
--[ 2019.09.17.11.40.26.831.0 ]--
r 33         else oldbottom.next = bott;
--[ 2019.09.17.11.40.26.983.0 ]--
r 33         else oldbottom.next = botto;
--[ 2019.09.17.11.40.27.056.0 ]--
r 33         else oldbottom.next = bottom;
--[ 2019.09.17.11.40.27.144.0 ]--
r 33         else oldbottom.next = bottom ;
--[ 2019.09.17.11.40.27.230.0 ]--
r 33         else oldbottom.next = bottom;
--[ 2019.09.17.11.40.33.895.0 ]--
+ 69         
--[ 2019.09.17.11.40.36.594.0 ]--
r 69          
--[ 2019.09.17.11.40.36.643.0 ]--
r 69         
--[ 2019.09.17.11.40.36.796.0 ]--
r 69         t
--[ 2019.09.17.11.40.36.867.0 ]--
r 69         te
--[ 2019.09.17.11.40.37.067.0 ]--
r 69         tes
--[ 2019.09.17.11.40.37.200.0 ]--
r 69         test
--[ 2019.09.17.11.40.37.503.0 ]--
r 69         testSteque
--[ 2019.09.17.11.40.37.906.0 ]--
r 69         testSteque.
--[ 2019.09.17.11.40.38.323.0 ]--
r 69         testSteque.e
--[ 2019.09.17.11.40.38.410.0 ]--
r 69         testSteque.en
--[ 2019.09.17.11.40.38.890.0 ]--
r 69         testSteque.enqueue
--[ 2019.09.17.11.40.38.905.0 ]--
r 69         testSteque.enqueue()
--[ 2019.09.17.11.40.38.918.0 ]--
r 69         testSteque.enqueue();
--[ 2019.09.17.11.40.39.773.0 ]--
r 69         testSteque.enqueue("");
--[ 2019.09.17.11.40.39.943.0 ]--
r 69         testSteque.enqueue("A");
--[ 2019.09.17.11.40.40.217.0 ]--
r 69         testSteque.enqueue("Ah");
--[ 2019.09.17.11.40.40.740.0 ]--
r 69         testSteque.enqueue("Ah ");
--[ 2019.09.17.11.40.40.827.0 ]--
r 69         testSteque.enqueue("Ah");
--[ 2019.09.17.11.40.47.472.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.41.07.811.0 ]--
- 32
r 32         if
--[ 2019.09.17.11.41.07.913.0 ]--
r 32         i
--[ 2019.09.17.11.41.08.200.0 ]--
r 32         
--[ 2019.09.17.11.41.08.497.0 ]--
- 32
--[ 2019.09.17.11.41.09.032.0 ]--
+ 32         
--[ 2019.09.17.11.41.09.970.0 ]--
r 32         i
--[ 2019.09.17.11.41.10.013.0 ]--
r 32         if
--[ 2019.09.17.11.41.10.607.0 ]--
r 32         if()
--[ 2019.09.17.11.41.10.871.0 ]--
r 32         if(i)
--[ 2019.09.17.11.41.10.946.0 ]--
r 32         if(is)
--[ 2019.09.17.11.41.11.431.0 ]--
r 32         if(isEmpty)
--[ 2019.09.17.11.41.11.443.0 ]--
r 32         if(isEmpty())
--[ 2019.09.17.11.41.12.403.0 ]--
r 32         if(isEmpty()){
--[ 2019.09.17.11.41.12.557.0 ]--
+ 33 
+ 34 }
--[ 2019.09.17.11.41.12.564.0 ]--
r 34         }
--[ 2019.09.17.11.41.12.580.0 ]--
r 33             
--[ 2019.09.17.11.41.14.849.0 ]--
r 33             f
--[ 2019.09.17.11.41.14.916.0 ]--
r 33             fi
--[ 2019.09.17.11.41.14.999.0 ]--
r 33             fir
--[ 2019.09.17.11.41.15.161.0 ]--
r 33             firs
--[ 2019.09.17.11.41.15.393.0 ]--
r 33             fir
--[ 2019.09.17.11.41.15.490.0 ]--
r 33             fi
--[ 2019.09.17.11.41.15.611.0 ]--
r 33             f
--[ 2019.09.17.11.41.15.717.0 ]--
r 33             
--[ 2019.09.17.11.41.15.848.0 ]--
r 33             b
--[ 2019.09.17.11.41.15.931.0 ]--
r 33             bo
--[ 2019.09.17.11.41.16.029.0 ]--
r 33             bot
--[ 2019.09.17.11.41.16.170.0 ]--
r 33             bott
--[ 2019.09.17.11.41.16.348.0 ]--
r 33             botto
--[ 2019.09.17.11.41.16.414.0 ]--
r 33             bottom
--[ 2019.09.17.11.41.16.627.0 ]--
r 33             bottom 
--[ 2019.09.17.11.41.16.797.0 ]--
r 33             bottom =
--[ 2019.09.17.11.41.16.957.0 ]--
r 33             bottom = 
--[ 2019.09.17.11.41.18.743.0 ]--
r 33             bottom = t
--[ 2019.09.17.11.41.18.824.0 ]--
r 33             bottom = to
--[ 2019.09.17.11.41.19.041.0 ]--
r 33             bottom = top
--[ 2019.09.17.11.41.21.184.0 ]--
r 33             bottom = 
--[ 2019.09.17.11.41.21.586.0 ]--
r 33             bottom 
--[ 2019.09.17.11.41.21.954.0 ]--
r 33             
--[ 2019.09.17.11.41.22.136.0 ]--
r 33             t
--[ 2019.09.17.11.41.22.206.0 ]--
r 33             to
--[ 2019.09.17.11.41.22.365.0 ]--
r 33             top
--[ 2019.09.17.11.41.22.430.0 ]--
r 33             top 
--[ 2019.09.17.11.41.22.533.0 ]--
r 33             top =
--[ 2019.09.17.11.41.22.630.0 ]--
r 33             top = 
--[ 2019.09.17.11.41.22.898.0 ]--
r 33             top = b
--[ 2019.09.17.11.41.23.002.0 ]--
r 33             top = bo
--[ 2019.09.17.11.41.23.108.0 ]--
r 33             top = bot
--[ 2019.09.17.11.41.23.188.0 ]--
r 33             top = bott
--[ 2019.09.17.11.41.23.262.0 ]--
r 33             top = botto
--[ 2019.09.17.11.41.23.295.0 ]--
r 33             top = bottom
--[ 2019.09.17.11.41.23.445.0 ]--
r 33             top = bottom;
--[ 2019.09.17.11.41.24.412.0 ]--
+ 35         
--[ 2019.09.17.11.41.24.578.0 ]--
r 35         e
--[ 2019.09.17.11.41.24.651.0 ]--
r 35         el
--[ 2019.09.17.11.41.24.748.0 ]--
r 35         els
--[ 2019.09.17.11.41.24.849.0 ]--
r 35         else
--[ 2019.09.17.11.41.24.969.0 ]--
r 35         else{
--[ 2019.09.17.11.41.25.151.0 ]--
+ 36 
+ 37 }
--[ 2019.09.17.11.41.25.167.0 ]--
r 37         }
--[ 2019.09.17.11.41.25.187.0 ]--
r 36             
--[ 2019.09.17.11.41.27.466.0 ]--
r 36             o
--[ 2019.09.17.11.41.28.115.0 ]--
r 36             ol
--[ 2019.09.17.11.41.28.159.0 ]--
r 36             old
--[ 2019.09.17.11.41.28.357.0 ]--
r 36             oldb
--[ 2019.09.17.11.41.28.412.0 ]--
r 36             oldbo
--[ 2019.09.17.11.41.28.493.0 ]--
r 36             oldbot
--[ 2019.09.17.11.41.28.638.0 ]--
r 36             oldbott
--[ 2019.09.17.11.41.28.691.0 ]--
r 36             oldbotto
--[ 2019.09.17.11.41.28.731.0 ]--
r 36             oldbottom
--[ 2019.09.17.11.41.28.860.0 ]--
r 36             oldbottom 
--[ 2019.09.17.11.41.28.933.0 ]--
r 36             oldbottom =
--[ 2019.09.17.11.41.29.149.0 ]--
r 36             oldbottom = 
--[ 2019.09.17.11.41.29.511.0 ]--
r 36             oldbottom = b
--[ 2019.09.17.11.41.29.587.0 ]--
r 36             oldbottom = bo
--[ 2019.09.17.11.41.29.647.0 ]--
r 36             oldbottom = bot
--[ 2019.09.17.11.41.29.767.0 ]--
r 36             oldbottom = bott
--[ 2019.09.17.11.41.29.858.0 ]--
r 36             oldbottom = botto
--[ 2019.09.17.11.41.29.895.0 ]--
r 36             oldbottom = bottom
--[ 2019.09.17.11.41.30.048.0 ]--
r 36             oldbottom = bottom''
--[ 2019.09.17.11.41.32.202.0 ]--
r 36             oldbottom = bottom'
--[ 2019.09.17.11.41.32.268.0 ]--
r 36             oldbottom = bottom
--[ 2019.09.17.11.41.32.414.0 ]--
r 36             oldbottom = bottoml
--[ 2019.09.17.11.41.33.192.0 ]--
r 36             oldbottom = bottom
--[ 2019.09.17.11.41.33.311.0 ]--
r 36             oldbottom = bottom;
--[ 2019.09.17.11.41.36.321.0 ]--
r 36             oldbottom. = bottom;
--[ 2019.09.17.11.41.36.542.0 ]--
r 36             oldbottom.n = bottom;
--[ 2019.09.17.11.41.36.595.0 ]--
r 36             oldbottom.ne = bottom;
--[ 2019.09.17.11.41.36.888.0 ]--
r 36             oldbottom.nex = bottom;
--[ 2019.09.17.11.41.37.072.0 ]--
r 36             oldbottom.next = bottom;
--[ 2019.09.17.11.41.37.894.0 ]--
r 36             oldbottom.next  = bottom;
--[ 2019.09.17.11.41.37.969.0 ]--
r 36             oldbottom.next = bottom;
--[ 2019.09.17.11.41.45.037.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.41.49.144.0 ]--
r 73         
--[ 2019.09.17.11.41.49.304.0 ]--
- 73
--[ 2019.09.17.11.41.52.812.0 ]--
+ 71         
--[ 2019.09.17.11.41.53.171.0 ]--
r 71         t
--[ 2019.09.17.11.41.53.191.0 ]--
r 71         te
--[ 2019.09.17.11.41.53.294.0 ]--
r 71         tes
--[ 2019.09.17.11.41.53.425.0 ]--
r 71         test
--[ 2019.09.17.11.41.53.586.0 ]--
r 71         testS
--[ 2019.09.17.11.41.53.847.0 ]--
r 71         testSt
--[ 2019.09.17.11.41.53.929.0 ]--
r 71         testSteque
--[ 2019.09.17.11.41.54.689.0 ]--
r 71         testSteque.
--[ 2019.09.17.11.41.55.397.0 ]--
r 71         testSteque.e
--[ 2019.09.17.11.41.55.492.0 ]--
r 71         testSteque.en
--[ 2019.09.17.11.41.55.860.0 ]--
r 71         testSteque.enqueue
--[ 2019.09.17.11.41.55.868.0 ]--
r 71         testSteque.enqueue()
--[ 2019.09.17.11.41.55.873.0 ]--
r 71         testSteque.enqueue();
--[ 2019.09.17.11.41.56.322.0 ]--
r 71         testSteque.enqueue("");
--[ 2019.09.17.11.41.56.909.0 ]--
r 71         testSteque.enqueue("A");
--[ 2019.09.17.11.41.57.147.0 ]--
r 71         testSteque.enqueue("Ah");
--[ 2019.09.17.11.41.57.817.0 ]--
r 71         testSteque.enqueue("A");
--[ 2019.09.17.11.41.57.913.0 ]--
r 71         testSteque.enqueue("");
--[ 2019.09.17.11.41.58.473.0 ]--
r 71         testSteque.enqueue("Y");
--[ 2019.09.17.11.41.58.629.0 ]--
r 71         testSteque.enqueue("Ye");
--[ 2019.09.17.11.41.58.760.0 ]--
r 71         testSteque.enqueue("Yee");
--[ 2019.09.17.11.41.58.869.0 ]--
r 71         testSteque.enqueue("Yeet");
--[ 2019.09.17.11.42.02.677.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.42.15.083.0 ]--
+ 74         
--[ 2019.09.17.11.42.15.808.0 ]--
r 74         t
--[ 2019.09.17.11.42.15.875.0 ]--
r 74         te
--[ 2019.09.17.11.42.15.975.0 ]--
r 74         tes
--[ 2019.09.17.11.42.16.098.0 ]--
r 74         test
--[ 2019.09.17.11.42.16.190.0 ]--
r 74         testSteque
--[ 2019.09.17.11.42.16.621.0 ]--
r 74         testSteque.
--[ 2019.09.17.11.42.17.259.0 ]--
r 74         testSteque.enqueue
--[ 2019.09.17.11.42.17.288.0 ]--
r 74         testSteque.enqueue()
--[ 2019.09.17.11.42.17.300.0 ]--
r 74         testSteque.enqueue();
--[ 2019.09.17.11.42.18.096.0 ]--
r 74         testSteque.enqueue("");
--[ 2019.09.17.11.42.18.437.0 ]--
r 74         testSteque.enqueue("A");
--[ 2019.09.17.11.42.18.679.0 ]--
r 74         testSteque.enqueue("");
--[ 2019.09.17.11.42.18.803.0 ]--
r 74         testSteque.enqueue("F");
--[ 2019.09.17.11.42.22.060.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.17.11.42.24.626.0 ]--
r 75         testSteque.pop(); 
--[ 2019.09.17.11.42.24.672.0 ]--
r 75         testSteque.pop();
--[ 2019.09.17.11.42.32.427.0 ]--
r 74 
--[ 2019.09.17.11.42.33.182.0 ]--
- 74
--[ 2019.09.17.11.42.38.865.0 ]--
r 71 
--[ 2019.09.17.11.42.39.184.0 ]--
- 71
--[ 2019.09.17.12.13.10.470.0 ]--
DisposeComponent
--[ 2019.09.20.12.55.52.433.0 ]--
NewLogger: P02_DataTypes
Version: 1.3
--[ 2019.09.20.12.55.52.671.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$1.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/dictionaries/ccollier.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2019.09.20.12.55.52.672.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2019.09.20.12.55.52.673.0 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    private Node top,bottom;
    private int N = 1;

    public Steque() {

    }
    private class Node{
        Item item;
        Node next;
    }
    // returns the number of items stored
    public int size() {
        return N;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return top == null;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {
        Node oldbottom = bottom;
        bottom = new Node();
        bottom.item = item;
        bottom.next = null;
        if(isEmpty()){
            top = bottom;
        }
        else{
            oldbottom.next = bottom;
        }

    }

    // pushes item to top of steque
    public void push(Item item) {
        Node oldtop = top;
        top = new Node();
        top.item = item;
        top.next = oldtop;
        N++;
    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        if(isEmpty()){
            throw new NoSuchElementException();
        }
        Item item = top.item;
        top = top.next;
        N--;
        return item;

    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {
        Steque<String> testSteque = new Steque<>();
        testSteque.push("Hello");
        testSteque.push("There");
        testSteque.pop();
    }
}

--[ 2019.09.20.12.55.52.674.0 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2019.09.20.12.55.52.675.0 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2019.09.20.12.55.52.676.0 ]--
InitFile: /.cos265


--[ 2019.09.20.18.32.14.110.0 ]--
:/src/Steque.java
r 29         bottom = new Node();    
--[ 2019.09.20.18.32.30.012.0 ]--
r 29         bottom = new Node();
--[ 2019.09.20.18.32.30.347.0 ]--
DisposeComponent
--[ 2019.09.24.10.01.05.806.0 ]--
NewLogger: P02_DataTypes
Version: 1.3
--[ 2019.09.24.10.01.06.125.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$1.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/dictionaries/ccollier.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2019.09.24.10.01.06.126.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2019.09.24.10.01.06.126.1 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    private Node top,bottom;
    private int N = 1;

    public Steque() {

    }
    private class Node{
        Item item;
        Node next;
    }
    // returns the number of items stored
    public int size() {
        return N;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return top == null;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {
        Node oldbottom = bottom;
        bottom = new Node();
        bottom.item = item;
        bottom.next = null;
        if(isEmpty()){
            top = bottom;
        }
        else{
            oldbottom.next = bottom;
        }

    }

    // pushes item to top of steque
    public void push(Item item) {
        Node oldtop = top;
        top = new Node();
        top.item = item;
        top.next = oldtop;
        N++;
    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        if(isEmpty()){
            throw new NoSuchElementException();
        }
        Item item = top.item;
        top = top.next;
        N--;
        return item;

    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {
        Steque<String> testSteque = new Steque<>();
        testSteque.push("Hello");
        testSteque.push("There");
        testSteque.pop();
    }
}

--[ 2019.09.24.10.01.06.126.2 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2019.09.24.10.01.06.126.3 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2019.09.24.10.01.06.126.4 ]--
InitFile: /.cos265


--[ 2019.09.24.10.04.54.486.0 ]--
DisposeComponent
--[ 2019.09.24.10.57.28.244.0 ]--
NewLogger: P02_DataTypes
Version: 1.3
--[ 2019.09.24.10.57.28.245.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$1.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/dictionaries/ccollier.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2019.09.24.10.57.28.245.1 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2019.09.24.10.57.28.245.2 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    private Node top,bottom;
    private int N = 1;

    public Steque() {

    }
    private class Node{
        Item item;
        Node next;
    }
    // returns the number of items stored
    public int size() {
        return N;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return top == null;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {
        Node oldbottom = bottom;
        bottom = new Node();
        bottom.item = item;
        bottom.next = null;
        if(isEmpty()){
            top = bottom;
        }
        else{
            oldbottom.next = bottom;
        }

    }

    // pushes item to top of steque
    public void push(Item item) {
        Node oldtop = top;
        top = new Node();
        top.item = item;
        top.next = oldtop;
        N++;
    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        if(isEmpty()){
            throw new NoSuchElementException();
        }
        Item item = top.item;
        top = top.next;
        N--;
        return item;

    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {
        Steque<String> testSteque = new Steque<>();
        testSteque.push("Hello");
        testSteque.push("There");
        testSteque.pop();
    }
}

--[ 2019.09.24.10.57.28.245.3 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2019.09.24.10.57.28.245.4 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2019.09.24.10.57.28.245.5 ]--
InitFile: /.cos265


--[ 2019.09.24.11.02.25.043.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.24.11.02.32.135.0 ]--
:/src/Steque.java
r 65         return n;
--[ 2019.09.24.11.02.32.305.0 ]--
r 65         return new;
--[ 2019.09.24.11.02.32.551.0 ]--
r 65         return new ;
--[ 2019.09.24.11.02.32.568.0 ]--
r 65         return new L;
--[ 2019.09.24.11.02.32.660.0 ]--
r 65         return new Li;
--[ 2019.09.24.11.02.32.702.0 ]--
r 65         return new Lis;
--[ 2019.09.24.11.02.32.807.0 ]--
r 65         return new List;
--[ 2019.09.24.11.02.33.059.0 ]--
r 65         return new ListI;
--[ 2019.09.24.11.02.33.208.0 ]--
r 65         return new ListIt;
--[ 2019.09.24.11.02.33.335.0 ]--
r 65         return new ListIte;
--[ 2019.09.24.11.02.33.388.0 ]--
r 65         return new ListIter;
--[ 2019.09.24.11.02.33.595.0 ]--
r 65         return new ListItera;
--[ 2019.09.24.11.02.33.710.0 ]--
r 65         return new ListIterat;
--[ 2019.09.24.11.02.33.885.0 ]--
r 65         return new ListIterato;
--[ 2019.09.24.11.02.33.959.0 ]--
r 65         return new ListIterator;
--[ 2019.09.24.11.02.34.191.0 ]--
r 65         return new ListIterator();
--[ 2019.09.24.11.02.36.979.0 ]--
r 65         return new ListIterator() ;
--[ 2019.09.24.11.02.37.020.0 ]--
r 65         return new ListIterator();
--[ 2019.09.24.11.02.38.382.0 ]--
+ 67     
--[ 2019.09.24.11.02.38.598.0 ]--
+ 67     
--[ 2019.09.24.11.02.39.240.0 ]--
r 68     p
--[ 2019.09.24.11.02.39.309.0 ]--
r 68     pr
--[ 2019.09.24.11.02.39.414.0 ]--
r 68     pri
--[ 2019.09.24.11.02.39.446.0 ]--
r 68     priv
--[ 2019.09.24.11.02.39.699.0 ]--
r 68     privat
--[ 2019.09.24.11.02.39.719.0 ]--
r 68     private
--[ 2019.09.24.11.02.39.881.0 ]--
r 68     private 
--[ 2019.09.24.11.02.39.952.0 ]--
r 68     private c
--[ 2019.09.24.11.02.39.980.0 ]--
r 68     private cl
--[ 2019.09.24.11.02.40.059.0 ]--
r 68     private cla
--[ 2019.09.24.11.02.40.173.0 ]--
r 68     private clas
--[ 2019.09.24.11.02.40.428.0 ]--
r 68     private class
--[ 2019.09.24.11.02.40.503.0 ]--
r 68     private class 
--[ 2019.09.24.11.02.40.949.0 ]--
r 67 
--[ 2019.09.24.11.02.44.698.0 ]--
r 68     private class L
--[ 2019.09.24.11.02.44.853.0 ]--
r 68     private class Li
--[ 2019.09.24.11.02.44.929.0 ]--
r 68     private class Lis
--[ 2019.09.24.11.02.45.039.0 ]--
r 68     private class List
--[ 2019.09.24.11.02.45.424.0 ]--
r 68     private class ListI
--[ 2019.09.24.11.02.45.459.0 ]--
r 68     private class ListIt
--[ 2019.09.24.11.02.45.557.0 ]--
r 68     private class ListIte
--[ 2019.09.24.11.02.45.645.0 ]--
r 68     private class ListIter
--[ 2019.09.24.11.02.45.832.0 ]--
r 68     private class ListItera
--[ 2019.09.24.11.02.45.869.0 ]--
r 68     private class ListIterat
--[ 2019.09.24.11.02.45.984.0 ]--
r 68     private class ListIterato
--[ 2019.09.24.11.02.46.614.0 ]--
r 68     private class ListIterator
--[ 2019.09.24.11.02.46.752.0 ]--
r 68     private class ListIterator 
--[ 2019.09.24.11.02.46.928.0 ]--
r 68     private class ListIterator i
--[ 2019.09.24.11.02.47.015.0 ]--
r 68     private class ListIterator im
--[ 2019.09.24.11.02.47.160.0 ]--
r 68     private class ListIterator imp
--[ 2019.09.24.11.02.47.276.0 ]--
r 68     private class ListIterator impl
--[ 2019.09.24.11.02.47.931.0 ]--
r 68     private class ListIterator implements
--[ 2019.09.24.11.02.47.951.0 ]--
r 68     private class ListIterator implements 
--[ 2019.09.24.11.02.50.162.0 ]--
r 68     private class ListIterator implements I
--[ 2019.09.24.11.02.50.337.0 ]--
r 68     private class ListIterator implements It
--[ 2019.09.24.11.02.50.413.0 ]--
r 68     private class ListIterator implements Ite
--[ 2019.09.24.11.02.50.513.0 ]--
r 68     private class ListIterator implements Iter
--[ 2019.09.24.11.02.50.738.0 ]--
r 68     private class ListIterator implements Itera
--[ 2019.09.24.11.02.50.865.0 ]--
r 68     private class ListIterator implements Iterat
--[ 2019.09.24.11.02.50.984.0 ]--
r 68     private class ListIterator implements Iterato
--[ 2019.09.24.11.02.51.081.0 ]--
r 68     private class ListIterator implements Iterator
--[ 2019.09.24.11.02.51.514.0 ]--
r 68     private class ListIterator implements Iterator<>
--[ 2019.09.24.11.02.52.033.0 ]--
r 68     private class ListIterator implements Iterator<I>
--[ 2019.09.24.11.02.52.152.0 ]--
r 68     private class ListIterator implements Iterator<It>
--[ 2019.09.24.11.02.52.183.0 ]--
r 68     private class ListIterator implements Iterator<Ite>
--[ 2019.09.24.11.02.52.272.0 ]--
r 68     private class ListIterator implements Iterator<Item>
--[ 2019.09.24.11.02.55.860.0 ]--
r 68     private class ListIterator implements Iterator<Item>{}
--[ 2019.09.24.11.02.56.198.0 ]--
+ 68     private class ListIterator implements Iterator<Item>{
r 69     }
--[ 2019.09.24.11.02.56.222.0 ]--
+ 69         
--[ 2019.09.24.11.03.12.787.0 ]--
r 69         p
--[ 2019.09.24.11.03.13.020.0 ]--
r 69         pr
--[ 2019.09.24.11.03.13.085.0 ]--
r 69         pri
--[ 2019.09.24.11.03.13.219.0 ]--
r 69         priv
--[ 2019.09.24.11.03.13.379.0 ]--
r 69         priva
--[ 2019.09.24.11.03.13.487.0 ]--
r 69         privat
--[ 2019.09.24.11.03.13.573.0 ]--
r 69         private
--[ 2019.09.24.11.03.13.639.0 ]--
r 69         private 
--[ 2019.09.24.11.03.15.504.0 ]--
r 69         private M
--[ 2019.09.24.11.03.15.627.0 ]--
r 69         private Mo
--[ 2019.09.24.11.03.15.735.0 ]--
r 69         private Mod
--[ 2019.09.24.11.03.15.821.0 ]--
r 69         private Mode
--[ 2019.09.24.11.03.16.003.0 ]--
r 69         private Mod
--[ 2019.09.24.11.03.16.122.0 ]--
r 69         private Mo
--[ 2019.09.24.11.03.16.227.0 ]--
r 69         private M
--[ 2019.09.24.11.03.16.505.0 ]--
r 69         private MN
--[ 2019.09.24.11.03.16.702.0 ]--
r 69         private M
--[ 2019.09.24.11.03.16.791.0 ]--
r 69         private 
--[ 2019.09.24.11.03.17.015.0 ]--
r 69         private N
--[ 2019.09.24.11.03.17.090.0 ]--
r 69         private No
--[ 2019.09.24.11.03.17.196.0 ]--
r 69         private Nod
--[ 2019.09.24.11.03.17.270.0 ]--
r 69         private Node
--[ 2019.09.24.11.03.17.458.0 ]--
r 69         private Node<>
--[ 2019.09.24.11.03.17.923.0 ]--
r 69         private Node<I>
--[ 2019.09.24.11.03.18.139.0 ]--
r 69         private Node<It>
--[ 2019.09.24.11.03.18.386.0 ]--
r 69         private Node<Item>
--[ 2019.09.24.11.03.23.741.0 ]--
r 69         private Node<Item> 
--[ 2019.09.24.11.03.23.792.0 ]--
r 69         private Node<Item> c
--[ 2019.09.24.11.03.23.885.0 ]--
r 69         private Node<Item> cu
--[ 2019.09.24.11.03.23.968.0 ]--
r 69         private Node<Item> cur
--[ 2019.09.24.11.03.24.106.0 ]--
r 69         private Node<Item> curr
--[ 2019.09.24.11.03.24.154.0 ]--
r 69         private Node<Item> curre
--[ 2019.09.24.11.03.24.217.0 ]--
r 69         private Node<Item> curren
--[ 2019.09.24.11.03.24.327.0 ]--
r 69         private Node<Item> current
--[ 2019.09.24.11.03.24.672.0 ]--
r 69         private Node<Item> current=
--[ 2019.09.24.11.03.25.066.0 ]--
r 69         private Node<Item> current=f
--[ 2019.09.24.11.03.25.139.0 ]--
r 69         private Node<Item> current=fi
--[ 2019.09.24.11.03.25.187.0 ]--
r 69         private Node<Item> current=fir
--[ 2019.09.24.11.03.25.344.0 ]--
r 69         private Node<Item> current=firs
--[ 2019.09.24.11.03.25.426.0 ]--
r 69         private Node<Item> current=first
--[ 2019.09.24.11.03.25.805.0 ]--
r 69         private Node<Item> current=first;
--[ 2019.09.24.11.03.27.380.0 ]--
r 69         private Node<Item> current=first; 
--[ 2019.09.24.11.03.27.483.0 ]--
r 69         private Node<Item> current=first;
--[ 2019.09.24.11.03.35.956.0 ]--
- 68
- 68
r 68     
--[ 2019.09.24.11.03.36.004.0 ]--
- 67
--[ 2019.09.24.11.03.36.117.0 ]--
- 67
--[ 2019.09.24.11.03.39.186.0 ]--
+ 66     }
+ 67 
+ 68     private class ListIterator implements Iterator<Item>{
+ 69         private Node<Item> current=first;
--[ 2019.09.24.11.03.39.466.0 ]--
r 69         private Node<Item> current=first; 
--[ 2019.09.24.11.03.39.728.0 ]--
r 69         private Node<Item>
--[ 2019.09.24.11.03.39.863.0 ]--
r 69         private 
--[ 2019.09.24.11.03.40.000.0 ]--
r 69         private MN
--[ 2019.09.24.11.03.40.139.0 ]--
r 69         private M
--[ 2019.09.24.11.03.40.244.0 ]--
r 69         private Mode
--[ 2019.09.24.11.03.40.387.0 ]--
r 69         private 
--[ 2019.09.24.11.03.40.538.0 ]--
r 69         
--[ 2019.09.24.11.03.40.648.0 ]--
- 68
- 68
r 68     private class ListIterator implements Iterator<Item>{}
--[ 2019.09.24.11.03.40.755.0 ]--
r 68     private class ListIterator implements Iterator<Item>
--[ 2019.09.24.11.03.40.920.0 ]--
r 68     private class ListIterator implements 
--[ 2019.09.24.11.03.41.023.0 ]--
r 68     private class ListIterator impl
--[ 2019.09.24.11.03.41.164.0 ]--
r 68     private class 
--[ 2019.09.24.11.03.41.334.0 ]--
r 67     
r 68     
--[ 2019.09.24.11.03.41.445.0 ]--
- 67
--[ 2019.09.24.11.03.41.595.0 ]--
- 67
--[ 2019.09.24.11.03.41.885.0 ]--
r 65         return new ListIterator() ;
--[ 2019.09.24.11.03.42.089.0 ]--
r 65         return new ListIterator();
--[ 2019.09.24.11.03.42.206.0 ]--
r 65         return null;
--[ 2019.09.24.11.03.44.071.0 ]--
+ 66     }private class ListIterator implements Iterator<Item>{
+ 67         private Node<Item> current=first;
--[ 2019.09.24.11.03.44.888.0 ]--
- 66
- 66
--[ 2019.09.24.11.03.46.388.0 ]--
r 65         return null; 
--[ 2019.09.24.11.03.48.780.0 ]--
+ 67 private class ListIterator implements Iterator<Item>{
+ 68         private Node<Item> current=first;
r 69     }
--[ 2019.09.24.11.03.49.682.0 ]--
- 67
- 67
r 67 
--[ 2019.09.24.11.03.52.799.0 ]--
+ 60     }private class ListIterator implements Iterator<Item>{
+ 61         private Node<Item> current=first;
--[ 2019.09.24.11.03.53.806.0 ]--
- 60
- 60
--[ 2019.09.24.11.04.11.808.0 ]--
r 65         return null;
--[ 2019.09.24.11.05.22.086.0 ]--
+ 67     
--[ 2019.09.24.11.05.22.154.0 ]--
+ 67     
--[ 2019.09.24.11.05.23.218.0 ]--
r 68     p
--[ 2019.09.24.11.05.23.293.0 ]--
r 68     pr
--[ 2019.09.24.11.05.23.371.0 ]--
r 68     pri
--[ 2019.09.24.11.05.23.499.0 ]--
r 68     priv
--[ 2019.09.24.11.05.23.573.0 ]--
r 68     priva
--[ 2019.09.24.11.05.23.725.0 ]--
r 68     privat
--[ 2019.09.24.11.05.23.827.0 ]--
r 68     private
--[ 2019.09.24.11.05.23.913.0 ]--
r 68     private 
--[ 2019.09.24.11.05.24.012.0 ]--
r 68     private c
--[ 2019.09.24.11.05.24.067.0 ]--
r 68     private cl
--[ 2019.09.24.11.05.24.155.0 ]--
r 68     private cla
--[ 2019.09.24.11.05.24.453.0 ]--
r 68     private clas
--[ 2019.09.24.11.05.24.537.0 ]--
r 68     private class
--[ 2019.09.24.11.05.24.711.0 ]--
r 68     private class 
--[ 2019.09.24.11.05.25.167.0 ]--
r 67 
--[ 2019.09.24.11.05.32.128.0 ]--
r 68     private class L
--[ 2019.09.24.11.05.32.355.0 ]--
r 68     private class Ls
--[ 2019.09.24.11.05.32.686.0 ]--
r 68     private class L
--[ 2019.09.24.11.05.32.883.0 ]--
r 68     private class Li
--[ 2019.09.24.11.05.32.976.0 ]--
r 68     private class Lis
--[ 2019.09.24.11.05.33.016.0 ]--
r 68     private class List
--[ 2019.09.24.11.05.33.263.0 ]--
r 68     private class ListI
--[ 2019.09.24.11.05.33.541.0 ]--
r 68     private class ListIt
--[ 2019.09.24.11.05.33.899.0 ]--
r 68     private class ListIte
--[ 2019.09.24.11.05.33.976.0 ]--
r 68     private class ListIter
--[ 2019.09.24.11.05.34.144.0 ]--
r 68     private class ListItera
--[ 2019.09.24.11.05.34.293.0 ]--
r 68     private class ListIterat
--[ 2019.09.24.11.05.34.371.0 ]--
r 68     private class ListIterato
--[ 2019.09.24.11.05.34.448.0 ]--
r 68     private class ListIterator
--[ 2019.09.24.11.05.34.964.0 ]--
r 68     private class ListIterator 
--[ 2019.09.24.11.05.35.335.0 ]--
r 68     private class ListIterator i
--[ 2019.09.24.11.05.35.914.0 ]--
r 68     private class ListIterator implements
--[ 2019.09.24.11.05.35.946.0 ]--
r 68     private class ListIterator implements 
--[ 2019.09.24.11.05.38.144.0 ]--
r 68     private class ListIterator implements I
--[ 2019.09.24.11.05.38.263.0 ]--
r 68     private class ListIterator implements It
--[ 2019.09.24.11.05.38.378.0 ]--
r 68     private class ListIterator implements Ite
--[ 2019.09.24.11.05.39.032.0 ]--
r 68     private class ListIterator implements Iter
--[ 2019.09.24.11.05.39.171.0 ]--
r 68     private class ListIterator implements Itera
--[ 2019.09.24.11.05.39.302.0 ]--
r 68     private class ListIterator implements Iterat
--[ 2019.09.24.11.05.39.400.0 ]--
r 68     private class ListIterator implements Iterato
--[ 2019.09.24.11.05.39.479.0 ]--
r 68     private class ListIterator implements Iterator
--[ 2019.09.24.11.05.39.651.0 ]--
r 68     private class ListIterator implements Iterator<>
--[ 2019.09.24.11.05.39.917.0 ]--
r 68     private class ListIterator implements Iterator<I>
--[ 2019.09.24.11.05.40.102.0 ]--
r 68     private class ListIterator implements Iterator<It>
--[ 2019.09.24.11.05.40.161.0 ]--
r 68     private class ListIterator implements Iterator<Ite>
--[ 2019.09.24.11.05.40.238.0 ]--
r 68     private class ListIterator implements Iterator<Item>
--[ 2019.09.24.11.05.41.408.0 ]--
r 68     private class ListIterator implements Iterator<Item>{}
--[ 2019.09.24.11.05.41.733.0 ]--
+ 68     private class ListIterator implements Iterator<Item>{
r 69     }
--[ 2019.09.24.11.05.41.757.0 ]--
+ 69         
--[ 2019.09.24.11.05.50.827.0 ]--
r 69         p
--[ 2019.09.24.11.05.50.875.0 ]--
r 69         pr
--[ 2019.09.24.11.05.51.009.0 ]--
r 69         pri
--[ 2019.09.24.11.05.51.099.0 ]--
r 69         priv
--[ 2019.09.24.11.05.51.341.0 ]--
r 69         priva
--[ 2019.09.24.11.05.51.374.0 ]--
r 69         privat
--[ 2019.09.24.11.05.51.444.0 ]--
r 69         private
--[ 2019.09.24.11.05.51.630.0 ]--
r 69         private 
--[ 2019.09.24.11.05.55.031.0 ]--
r 69         private N
--[ 2019.09.24.11.05.55.154.0 ]--
r 69         private No
--[ 2019.09.24.11.05.55.208.0 ]--
r 69         private Nod
--[ 2019.09.24.11.05.55.269.0 ]--
r 69         private Node
--[ 2019.09.24.11.05.55.437.0 ]--
r 69         private Node<>
--[ 2019.09.24.11.05.55.599.0 ]--
r 69         private Node<I>
--[ 2019.09.24.11.05.55.785.0 ]--
r 69         private Node<It>
--[ 2019.09.24.11.05.55.860.0 ]--
r 69         private Node<Ite>
--[ 2019.09.24.11.05.55.952.0 ]--
r 69         private Node<Item>
--[ 2019.09.24.11.05.57.705.0 ]--
r 69         private Node<Item> 
--[ 2019.09.24.11.05.57.788.0 ]--
r 69         private Node<Item> c
--[ 2019.09.24.11.05.57.913.0 ]--
r 69         private Node<Item> cu
--[ 2019.09.24.11.05.57.986.0 ]--
r 69         private Node<Item> cur
--[ 2019.09.24.11.05.58.121.0 ]--
r 69         private Node<Item> curr
--[ 2019.09.24.11.05.58.206.0 ]--
r 69         private Node<Item> curre
--[ 2019.09.24.11.05.58.256.0 ]--
r 69         private Node<Item> curren
--[ 2019.09.24.11.05.58.388.0 ]--
r 69         private Node<Item> current
--[ 2019.09.24.11.05.58.427.0 ]--
r 69         private Node<Item> current 
--[ 2019.09.24.11.05.58.484.0 ]--
r 69         private Node<Item> current =
--[ 2019.09.24.11.05.58.568.0 ]--
r 69         private Node<Item> current = 
--[ 2019.09.24.11.05.58.686.0 ]--
r 69         private Node<Item> current = f
--[ 2019.09.24.11.05.58.775.0 ]--
r 69         private Node<Item> current = fi
--[ 2019.09.24.11.05.58.823.0 ]--
r 69         private Node<Item> current = fir
--[ 2019.09.24.11.05.59.066.0 ]--
r 69         private Node<Item> current = fi
--[ 2019.09.24.11.05.59.176.0 ]--
r 69         private Node<Item> current = f
--[ 2019.09.24.11.05.59.290.0 ]--
r 69         private Node<Item> current = 
--[ 2019.09.24.11.05.59.989.0 ]--
r 69         private Node<Item> current = t
--[ 2019.09.24.11.06.00.084.0 ]--
r 69         private Node<Item> current = to
--[ 2019.09.24.11.06.00.197.0 ]--
r 69         private Node<Item> current = top
--[ 2019.09.24.11.06.00.840.0 ]--
r 69         private Node<Item> current = top 
--[ 2019.09.24.11.06.00.900.0 ]--
r 69         private Node<Item> current = top
--[ 2019.09.24.11.06.00.962.0 ]--
r 69         private Node<Item> current = top;
--[ 2019.09.24.11.06.01.757.0 ]--
+ 70         
--[ 2019.09.24.11.06.02.309.0 ]--
r 70          
--[ 2019.09.24.11.06.02.390.0 ]--
r 70         
--[ 2019.09.24.11.06.03.847.0 ]--
+ 70         
--[ 2019.09.24.11.06.04.200.0 ]--
r 71         p
--[ 2019.09.24.11.06.04.219.0 ]--
r 71         pu
--[ 2019.09.24.11.06.04.352.0 ]--
r 71         pub
--[ 2019.09.24.11.06.04.441.0 ]--
r 71         publ
--[ 2019.09.24.11.06.04.576.0 ]--
r 71         publi
--[ 2019.09.24.11.06.04.659.0 ]--
r 71         public
--[ 2019.09.24.11.06.04.743.0 ]--
r 71         public 
--[ 2019.09.24.11.06.04.835.0 ]--
r 71         public b
--[ 2019.09.24.11.06.04.891.0 ]--
r 71         public bo
--[ 2019.09.24.11.06.05.024.0 ]--
r 71         public boo
--[ 2019.09.24.11.06.05.174.0 ]--
r 71         public bool
--[ 2019.09.24.11.06.05.713.0 ]--
r 71         public boolean
--[ 2019.09.24.11.06.06.192.0 ]--
r 70 
--[ 2019.09.24.11.06.07.008.0 ]--
r 71         public boolean 
--[ 2019.09.24.11.06.07.152.0 ]--
r 71         public boolean h
--[ 2019.09.24.11.06.07.229.0 ]--
r 71         public boolean ha
--[ 2019.09.24.11.06.07.372.0 ]--
r 71         public boolean has
--[ 2019.09.24.11.06.07.532.0 ]--
r 71         public boolean hasN
--[ 2019.09.24.11.06.07.614.0 ]--
r 71         public boolean hasNe
--[ 2019.09.24.11.06.07.841.0 ]--
r 71         public boolean hasNex
--[ 2019.09.24.11.06.08.001.0 ]--
r 71         public boolean hasNext
--[ 2019.09.24.11.06.08.332.0 ]--
r 71         public boolean hasNext()
--[ 2019.09.24.11.06.09.918.0 ]--
r 71         public boolean hasNext() 
--[ 2019.09.24.11.06.10.490.0 ]--
r 71         public boolean hasNext() {}
--[ 2019.09.24.11.06.10.783.0 ]--
r 71         public boolean hasNext() {e}
--[ 2019.09.24.11.06.11.072.0 ]--
r 71         public boolean hasNext() {}
--[ 2019.09.24.11.06.11.188.0 ]--
r 71         public boolean hasNext() {r}
--[ 2019.09.24.11.06.11.199.0 ]--
r 71         public boolean hasNext() {re}
--[ 2019.09.24.11.06.11.327.0 ]--
r 71         public boolean hasNext() {ret}
--[ 2019.09.24.11.06.11.405.0 ]--
r 71         public boolean hasNext() {retu}
--[ 2019.09.24.11.06.11.477.0 ]--
r 71         public boolean hasNext() {retur}
--[ 2019.09.24.11.06.11.567.0 ]--
r 71         public boolean hasNext() {return}
--[ 2019.09.24.11.06.12.099.0 ]--
r 71         public boolean hasNext() {return }
--[ 2019.09.24.11.06.13.456.0 ]--
r 71         public boolean hasNext() {return c}
--[ 2019.09.24.11.06.13.588.0 ]--
r 71         public boolean hasNext() {return cu}
--[ 2019.09.24.11.06.14.190.0 ]--
r 71         public boolean hasNext() {return cur}
--[ 2019.09.24.11.06.14.303.0 ]--
r 71         public boolean hasNext() {return curr}
--[ 2019.09.24.11.06.14.349.0 ]--
r 71         public boolean hasNext() {return curre}
--[ 2019.09.24.11.06.14.417.0 ]--
r 71         public boolean hasNext() {return curren}
--[ 2019.09.24.11.06.14.528.0 ]--
r 71         public boolean hasNext() {return current}
--[ 2019.09.24.11.06.15.585.0 ]--
r 71         public boolean hasNext() {return current }
--[ 2019.09.24.11.06.15.853.0 ]--
r 71         public boolean hasNext() {return current !}
--[ 2019.09.24.11.06.16.008.0 ]--
r 71         public boolean hasNext() {return current !=}
--[ 2019.09.24.11.06.16.310.0 ]--
r 71         public boolean hasNext() {return current != }
--[ 2019.09.24.11.06.16.449.0 ]--
r 71         public boolean hasNext() {return current != n}
--[ 2019.09.24.11.06.16.466.0 ]--
r 71         public boolean hasNext() {return current != nu}
--[ 2019.09.24.11.06.16.651.0 ]--
r 71         public boolean hasNext() {return current != nul}
--[ 2019.09.24.11.06.16.762.0 ]--
r 71         public boolean hasNext() {return current != null}
--[ 2019.09.24.11.06.29.737.0 ]--
+ 72         
--[ 2019.09.24.11.06.30.613.0 ]--
+ 72         
--[ 2019.09.24.11.06.31.171.0 ]--
r 72 
--[ 2019.09.24.11.06.32.397.0 ]--
r 73         p
--[ 2019.09.24.11.06.32.555.0 ]--
r 73         pu
--[ 2019.09.24.11.06.32.852.0 ]--
r 73         pub
--[ 2019.09.24.11.06.32.974.0 ]--
r 73         publ
--[ 2019.09.24.11.06.33.104.0 ]--
r 73         publi
--[ 2019.09.24.11.06.33.205.0 ]--
r 73         public
--[ 2019.09.24.11.06.34.984.0 ]--
r 73         public 
--[ 2019.09.24.11.06.35.129.0 ]--
r 73         public I
--[ 2019.09.24.11.06.35.244.0 ]--
r 73         public It
--[ 2019.09.24.11.06.35.315.0 ]--
r 73         public Ite
--[ 2019.09.24.11.06.35.360.0 ]--
r 73         public Item
--[ 2019.09.24.11.06.35.497.0 ]--
r 73         public Item 
--[ 2019.09.24.11.06.35.561.0 ]--
r 73         public Item n
--[ 2019.09.24.11.06.35.609.0 ]--
r 73         public Item ne
--[ 2019.09.24.11.06.35.770.0 ]--
r 73         public Item nex
--[ 2019.09.24.11.06.35.932.0 ]--
r 73         public Item next
--[ 2019.09.24.11.06.36.037.0 ]--
r 73         public Item next()
--[ 2019.09.24.11.06.36.383.0 ]--
r 73         public Item next(){}
--[ 2019.09.24.11.06.36.946.0 ]--
r 73         public Item next(){ }
--[ 2019.09.24.11.06.37.024.0 ]--
r 73         public Item next(){}
--[ 2019.09.24.11.06.37.383.0 ]--
+ 73         public Item next(){
r 74         }
--[ 2019.09.24.11.06.37.413.0 ]--
+ 74             
--[ 2019.09.24.11.06.46.246.0 ]--
r 74             I
--[ 2019.09.24.11.06.46.333.0 ]--
r 74             It
--[ 2019.09.24.11.06.46.432.0 ]--
r 74             Ite
--[ 2019.09.24.11.06.46.454.0 ]--
r 74             Item
--[ 2019.09.24.11.06.47.746.0 ]--
r 74             Item 
--[ 2019.09.24.11.06.47.856.0 ]--
r 74             Item i
--[ 2019.09.24.11.06.47.929.0 ]--
r 74             Item it
--[ 2019.09.24.11.06.48.002.0 ]--
r 74             Item ite
--[ 2019.09.24.11.06.48.050.0 ]--
r 74             Item item
--[ 2019.09.24.11.06.48.179.0 ]--
r 74             Item item 
--[ 2019.09.24.11.06.48.281.0 ]--
r 74             Item item  
--[ 2019.09.24.11.06.48.652.0 ]--
r 74             Item item 
--[ 2019.09.24.11.06.48.979.0 ]--
r 74             Item item =
--[ 2019.09.24.11.06.49.394.0 ]--
r 74             Item item = 
--[ 2019.09.24.11.06.49.685.0 ]--
r 74             Item item = c
--[ 2019.09.24.11.06.49.765.0 ]--
r 74             Item item = cu
--[ 2019.09.24.11.06.49.848.0 ]--
r 74             Item item = cur
--[ 2019.09.24.11.06.49.961.0 ]--
r 74             Item item = curr
--[ 2019.09.24.11.06.50.039.0 ]--
r 74             Item item = curre
--[ 2019.09.24.11.06.50.089.0 ]--
r 74             Item item = curren
--[ 2019.09.24.11.06.50.172.0 ]--
r 74             Item item = current
--[ 2019.09.24.11.06.50.477.0 ]--
r 74             Item item = current.
--[ 2019.09.24.11.06.51.609.0 ]--
r 74             Item item = current.i
--[ 2019.09.24.11.06.51.695.0 ]--
r 74             Item item = current.it
--[ 2019.09.24.11.06.51.774.0 ]--
r 74             Item item = current.ite
--[ 2019.09.24.11.06.51.832.0 ]--
r 74             Item item = current.item
--[ 2019.09.24.11.06.52.026.0 ]--
r 74             Item item = current.item;
--[ 2019.09.24.11.06.52.322.0 ]--
+ 75             
--[ 2019.09.24.11.06.54.983.0 ]--
r 75             c
--[ 2019.09.24.11.06.55.082.0 ]--
r 75             cu
--[ 2019.09.24.11.06.55.178.0 ]--
r 75             cur
--[ 2019.09.24.11.06.55.297.0 ]--
r 75             curr
--[ 2019.09.24.11.06.55.342.0 ]--
r 75             curre
--[ 2019.09.24.11.06.55.410.0 ]--
r 75             curren
--[ 2019.09.24.11.06.55.484.0 ]--
r 75             current
--[ 2019.09.24.11.06.55.694.0 ]--
r 75             current-
--[ 2019.09.24.11.06.55.724.0 ]--
r 75             current- 
--[ 2019.09.24.11.06.56.156.0 ]--
r 75             current-
--[ 2019.09.24.11.06.56.264.0 ]--
r 75             current
--[ 2019.09.24.11.06.56.383.0 ]--
r 75             current 
--[ 2019.09.24.11.06.56.532.0 ]--
r 75             current  
--[ 2019.09.24.11.06.56.827.0 ]--
r 75             current 
--[ 2019.09.24.11.06.57.007.0 ]--
r 75             current =
--[ 2019.09.24.11.06.57.058.0 ]--
r 75             current = 
--[ 2019.09.24.11.06.57.114.0 ]--
r 75             current = c
--[ 2019.09.24.11.06.57.225.0 ]--
r 75             current = cu
--[ 2019.09.24.11.06.57.300.0 ]--
r 75             current = cur
--[ 2019.09.24.11.06.57.412.0 ]--
r 75             current = curr
--[ 2019.09.24.11.06.57.479.0 ]--
r 75             current = curre
--[ 2019.09.24.11.06.57.527.0 ]--
r 75             current = curren
--[ 2019.09.24.11.06.57.615.0 ]--
r 75             current = current
--[ 2019.09.24.11.06.57.710.0 ]--
r 75             current = current.
--[ 2019.09.24.11.06.57.791.0 ]--
r 75             current = current.t
--[ 2019.09.24.11.06.57.837.0 ]--
r 75             current = current.te
--[ 2019.09.24.11.06.58.153.0 ]--
r 75             current = current.t
--[ 2019.09.24.11.06.58.210.0 ]--
r 75             current = current.
--[ 2019.09.24.11.06.58.328.0 ]--
r 75             current = current.n
--[ 2019.09.24.11.06.58.359.0 ]--
r 75             current = current.ne
--[ 2019.09.24.11.06.58.482.0 ]--
r 75             current = current.nex
--[ 2019.09.24.11.06.58.696.0 ]--
r 75             current = current.next
--[ 2019.09.24.11.06.59.241.0 ]--
r 75             current = current.next;
--[ 2019.09.24.11.06.59.365.0 ]--
+ 76             
--[ 2019.09.24.11.07.00.809.0 ]--
r 76             r
--[ 2019.09.24.11.07.00.849.0 ]--
r 76             re
--[ 2019.09.24.11.07.00.963.0 ]--
r 76             ret
--[ 2019.09.24.11.07.01.030.0 ]--
r 76             retu
--[ 2019.09.24.11.07.01.105.0 ]--
r 76             retur
--[ 2019.09.24.11.07.01.148.0 ]--
r 76             return
--[ 2019.09.24.11.07.01.244.0 ]--
r 76             return 
--[ 2019.09.24.11.07.01.291.0 ]--
r 76             return i
--[ 2019.09.24.11.07.01.371.0 ]--
r 76             return it
--[ 2019.09.24.11.07.01.453.0 ]--
r 76             return ite
--[ 2019.09.24.11.07.01.476.0 ]--
r 76             return item
--[ 2019.09.24.11.07.01.938.0 ]--
r 76             return item;
--[ 2019.09.24.11.07.20.573.0 ]--
r 65         return r;
--[ 2019.09.24.11.07.20.604.0 ]--
r 65         return re;
--[ 2019.09.24.11.07.20.905.0 ]--
r 65         return r;
--[ 2019.09.24.11.07.21.006.0 ]--
r 65         return ;
--[ 2019.09.24.11.07.21.335.0 ]--
r 65         return n;
--[ 2019.09.24.11.07.21.358.0 ]--
r 65         return ne;
--[ 2019.09.24.11.07.21.480.0 ]--
r 65         return new;
--[ 2019.09.24.11.07.21.595.0 ]--
r 65         return new ;
--[ 2019.09.24.11.07.21.800.0 ]--
r 65         return new L;
--[ 2019.09.24.11.07.22.018.0 ]--
r 65         return new Li;
--[ 2019.09.24.11.07.22.113.0 ]--
r 65         return new Lis;
--[ 2019.09.24.11.07.22.207.0 ]--
r 65         return new List;
--[ 2019.09.24.11.07.22.448.0 ]--
r 65         return new ListI;
--[ 2019.09.24.11.07.22.555.0 ]--
r 65         return new ListIt;
--[ 2019.09.24.11.07.22.671.0 ]--
r 65         return new ListIte;
--[ 2019.09.24.11.07.23.469.0 ]--
r 65         return new ListIter;
--[ 2019.09.24.11.07.23.626.0 ]--
r 65         return new ListItera;
--[ 2019.09.24.11.07.23.768.0 ]--
r 65         return new ListIterat;
--[ 2019.09.24.11.07.24.199.0 ]--
r 65         return new ListItera;
--[ 2019.09.24.11.07.24.546.0 ]--
r 65         return new ListIterat;
--[ 2019.09.24.11.07.24.608.0 ]--
r 65         return new ListIterato;
--[ 2019.09.24.11.07.24.673.0 ]--
r 65         return new ListIterator;
--[ 2019.09.24.11.07.24.858.0 ]--
r 65         return new ListIterator();
--[ 2019.09.24.11.07.26.473.0 ]--
r 65         return new ListIterator() ;
--[ 2019.09.24.11.07.26.505.0 ]--
r 65         return new ListIterator();
--[ 2019.09.24.11.07.37.150.0 ]--
UpdateTree (AD): 0 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class

--[ 2019.09.24.11.07.37.150.1 ]--
CompilationStatus (AEW): 0 1 0
[Ljava.lang.String;@25fb6e6
--[ 2019.09.24.11.07.43.727.0 ]--
r 71         public boolean hasNext() {return current != null;}
--[ 2019.09.24.11.07.43.728.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.24.11.07.43.797.0 ]--
UpdateTree (AD): 3 3
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class

--[ 2019.09.24.11.07.57.030.0 ]--
CompilationStatus (AEW): 0 1 0
[Ljava.lang.String;@3945706
--[ 2019.09.24.11.08.41.814.0 ]--
r 69         private Node<Item current = top;
--[ 2019.09.24.11.08.41.954.0 ]--
r 69         private Node<Ite current = top;
--[ 2019.09.24.11.08.42.232.0 ]--
r 69         private Node<It current = top;
--[ 2019.09.24.11.08.42.304.0 ]--
r 69         private Node<I current = top;
--[ 2019.09.24.11.08.42.400.0 ]--
r 69         private Node< current = top;
--[ 2019.09.24.11.08.42.515.0 ]--
r 69         private Node current = top;
--[ 2019.09.24.11.08.44.531.0 ]--
r 69         private Node  current = top;
--[ 2019.09.24.11.08.44.593.0 ]--
r 69         private Node current = top;
--[ 2019.09.24.11.08.48.171.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.24.11.09.20.070.0 ]--
r 84         testSteque.push("There"); 
--[ 2019.09.24.11.09.20.071.0 ]--
UpdateTree (AD): 4 0
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$ListIterator.class

--[ 2019.09.24.11.09.20.121.0 ]--
r 84         testSteque.push("There");
--[ 2019.09.24.11.09.23.890.0 ]--
+ 83         
--[ 2019.09.24.11.09.26.665.0 ]--
r 83         r
--[ 2019.09.24.11.09.26.696.0 ]--
r 83         re
--[ 2019.09.24.11.09.26.953.0 ]--
r 83         reu
--[ 2019.09.24.11.09.27.421.0 ]--
r 83         re
--[ 2019.09.24.11.09.27.557.0 ]--
r 83         r
--[ 2019.09.24.11.09.27.680.0 ]--
r 83         
--[ 2019.09.24.11.09.28.640.0 ]--
r 83          
--[ 2019.09.24.11.09.28.693.0 ]--
r 83         
--[ 2019.09.24.11.09.29.582.0 ]--
r 83         L
--[ 2019.09.24.11.09.29.747.0 ]--
r 83         Li
--[ 2019.09.24.11.09.29.865.0 ]--
r 83         Lis
--[ 2019.09.24.11.09.30.029.0 ]--
r 83         List
--[ 2019.09.24.11.09.30.735.0 ]--
r 83         ListI
--[ 2019.09.24.11.09.31.553.0 ]--
r 83         ListIterator
--[ 2019.09.24.11.09.31.672.0 ]--
r 83         ListIterator.
--[ 2019.09.24.11.09.33.854.0 ]--
r 83         ListIterator
--[ 2019.09.24.11.09.34.062.0 ]--
r 83         
--[ 2019.09.24.11.09.36.369.0 ]--
r 83          
--[ 2019.09.24.11.09.36.452.0 ]--
r 83         
--[ 2019.09.24.11.09.36.642.0 ]--
r 83         t
--[ 2019.09.24.11.09.36.732.0 ]--
r 83         te
--[ 2019.09.24.11.09.36.865.0 ]--
r 83         tes
--[ 2019.09.24.11.09.37.007.0 ]--
r 83         test
--[ 2019.09.24.11.09.37.478.0 ]--
r 83         testSteque
--[ 2019.09.24.11.09.37.606.0 ]--
r 83         testSteque.
--[ 2019.09.24.11.09.37.981.0 ]--
r 83         testSteque.n
--[ 2019.09.24.11.09.38.075.0 ]--
r 83         testSteque.ne
--[ 2019.09.24.11.09.38.936.0 ]--
r 83         testSteque.n
--[ 2019.09.24.11.09.39.129.0 ]--
r 83         testSteque.
--[ 2019.09.24.11.09.39.323.0 ]--
r 83         testSteque
--[ 2019.09.24.11.09.39.612.0 ]--
r 83         
--[ 2019.09.24.11.10.01.001.0 ]--
r 83         I
--[ 2019.09.24.11.10.01.162.0 ]--
r 83         It
--[ 2019.09.24.11.10.01.206.0 ]--
r 83         Ite
--[ 2019.09.24.11.10.01.368.0 ]--
r 83         Iter
--[ 2019.09.24.11.10.01.653.0 ]--
r 83         Itera
--[ 2019.09.24.11.10.03.271.0 ]--
r 83         Iterator
--[ 2019.09.24.11.10.03.784.0 ]--
r 83         Iterator 
--[ 2019.09.24.11.10.03.870.0 ]--
r 83         Iterator
--[ 2019.09.24.11.10.04.389.0 ]--
r 83         Iterator<>
--[ 2019.09.24.11.10.04.631.0 ]--
r 83         Iterator<s>
--[ 2019.09.24.11.10.04.901.0 ]--
r 83         Iterator<>
--[ 2019.09.24.11.10.05.025.0 ]--
r 83         Iterator<S>
--[ 2019.09.24.11.10.05.188.0 ]--
r 83         Iterator<St>
--[ 2019.09.24.11.10.05.342.0 ]--
r 83         Iterator<Str>
--[ 2019.09.24.11.10.05.422.0 ]--
r 83         Iterator<Stri>
--[ 2019.09.24.11.10.05.460.0 ]--
r 83         Iterator<Strin>
--[ 2019.09.24.11.10.05.542.0 ]--
r 83         Iterator<String>
--[ 2019.09.24.11.10.06.187.0 ]--
r 83         Iterator<String>/
--[ 2019.09.24.11.10.06.620.0 ]--
r 83         Iterator<String>
--[ 2019.09.24.11.10.06.760.0 ]--
r 83         Iterator<String>.
--[ 2019.09.24.11.10.07.195.0 ]--
r 83         Iterator<String>.n
--[ 2019.09.24.11.10.07.687.0 ]--
r 83         Iterator<String>.
--[ 2019.09.24.11.10.07.818.0 ]--
r 83         Iterator<String>
--[ 2019.09.24.11.10.08.213.0 ]--
r 83         Iterator<String
--[ 2019.09.24.11.10.08.515.0 ]--
r 83         Iterator<
--[ 2019.09.24.11.10.08.711.0 ]--
r 83         Iterator
--[ 2019.09.24.11.10.09.107.0 ]--
r 83         
--[ 2019.09.24.11.10.10.080.0 ]--
r 83 
--[ 2019.09.24.11.10.11.152.0 ]--
- 83
--[ 2019.09.24.11.10.29.806.0 ]--
r 82         Steque<String> testSteque = new Steque<>(); 
--[ 2019.09.24.11.10.29.823.0 ]--
r 82         Steque<String> testSteque = new Steque<>();
--[ 2019.09.24.11.10.30.051.0 ]--
+ 83         
--[ 2019.09.24.11.10.30.905.0 ]--
r 83         i
--[ 2019.09.24.11.10.31.004.0 ]--
r 83         it
--[ 2019.09.24.11.10.31.539.0 ]--
r 83         ite
--[ 2019.09.24.11.10.32.174.0 ]--
r 83         it
--[ 2019.09.24.11.10.32.283.0 ]--
r 83         i
--[ 2019.09.24.11.10.32.400.0 ]--
r 83         
--[ 2019.09.24.11.10.32.615.0 ]--
r 83         i
--[ 2019.09.24.11.10.32.848.0 ]--
r 83         it
--[ 2019.09.24.11.10.33.387.0 ]--
r 83         i
--[ 2019.09.24.11.10.33.511.0 ]--
r 83         
--[ 2019.09.24.11.10.37.163.0 ]--
r 83         L
--[ 2019.09.24.11.10.37.495.0 ]--
r 83         Li
--[ 2019.09.24.11.10.37.612.0 ]--
r 83         Lis
--[ 2019.09.24.11.10.37.855.0 ]--
r 83         List
--[ 2019.09.24.11.10.38.057.0 ]--
r 83         ListI
--[ 2019.09.24.11.10.38.159.0 ]--
r 83         ListIt
--[ 2019.09.24.11.10.38.245.0 ]--
r 83         ListIte
--[ 2019.09.24.11.10.38.330.0 ]--
r 83         ListIter
--[ 2019.09.24.11.10.38.457.0 ]--
r 83         ListItera
--[ 2019.09.24.11.10.38.583.0 ]--
r 83         ListIterat
--[ 2019.09.24.11.10.38.711.0 ]--
r 83         ListIterato
--[ 2019.09.24.11.10.38.777.0 ]--
r 83         ListIterator
--[ 2019.09.24.11.10.38.951.0 ]--
r 83         ListIterator 
--[ 2019.09.24.11.10.40.638.0 ]--
r 83         ListIterator i
--[ 2019.09.24.11.10.40.742.0 ]--
r 83         ListIterator it
--[ 2019.09.24.11.10.40.808.0 ]--
r 83         ListIterator ite
--[ 2019.09.24.11.10.40.889.0 ]--
r 83         ListIterator iter
--[ 2019.09.24.11.10.41.006.0 ]--
r 83         ListIterator itera
--[ 2019.09.24.11.10.41.098.0 ]--
r 83         ListIterator iterat
--[ 2019.09.24.11.10.41.218.0 ]--
r 83         ListIterator iterato
--[ 2019.09.24.11.10.41.296.0 ]--
r 83         ListIterator iterator
--[ 2019.09.24.11.10.41.416.0 ]--
r 83         ListIterator iterator 
--[ 2019.09.24.11.10.41.526.0 ]--
r 83         ListIterator iterator =
--[ 2019.09.24.11.10.41.659.0 ]--
r 83         ListIterator iterator = 
--[ 2019.09.24.11.10.41.943.0 ]--
r 83         ListIterator iterator =     
--[ 2019.09.24.11.10.42.541.0 ]--
r 83         ListIterator iterator =    
--[ 2019.09.24.11.10.42.946.0 ]--
r 83         ListIterator iterator =   
--[ 2019.09.24.11.10.43.108.0 ]--
r 83         ListIterator iterator =  
--[ 2019.09.24.11.10.43.360.0 ]--
r 83         ListIterator iterator = 
--[ 2019.09.24.11.10.43.629.0 ]--
r 83         ListIterator iterator =
--[ 2019.09.24.11.10.43.887.0 ]--
r 83         ListIterator iterator = 
--[ 2019.09.24.11.10.44.004.0 ]--
r 83         ListIterator iterator = n
--[ 2019.09.24.11.10.44.082.0 ]--
r 83         ListIterator iterator = ne
--[ 2019.09.24.11.10.44.230.0 ]--
r 83         ListIterator iterator = new
--[ 2019.09.24.11.10.44.355.0 ]--
r 83         ListIterator iterator = new 
--[ 2019.09.24.11.10.47.126.0 ]--
r 83         ListIterator iterator = new
--[ 2019.09.24.11.10.47.240.0 ]--
r 83         ListIterator iterator = ne
--[ 2019.09.24.11.10.47.361.0 ]--
r 83         ListIterator iterator = n
--[ 2019.09.24.11.10.47.560.0 ]--
r 83         ListIterator iterator = 
--[ 2019.09.24.11.10.49.228.0 ]--
r 83         ListIterator iterator = t
--[ 2019.09.24.11.10.49.333.0 ]--
r 83         ListIterator iterator = te
--[ 2019.09.24.11.10.49.425.0 ]--
r 83         ListIterator iterator = tes
--[ 2019.09.24.11.10.49.520.0 ]--
r 83         ListIterator iterator = test
--[ 2019.09.24.11.10.49.827.0 ]--
r 83         ListIterator iterator = testS
--[ 2019.09.24.11.10.50.174.0 ]--
r 83         ListIterator iterator = testSteque
--[ 2019.09.24.11.10.50.321.0 ]--
r 83         ListIterator iterator = testSteque.
--[ 2019.09.24.11.10.54.566.0 ]--
r 83         ListIterator iterator = testSteque.l
--[ 2019.09.24.11.10.54.733.0 ]--
r 83         ListIterator iterator = testSteque.li
--[ 2019.09.24.11.10.54.816.0 ]--
r 83         ListIterator iterator = testSteque.lis
--[ 2019.09.24.11.10.54.922.0 ]--
r 83         ListIterator iterator = testSteque.list
--[ 2019.09.24.11.10.55.424.0 ]--
r 83         ListIterator iterator = testSteque.listI
--[ 2019.09.24.11.10.55.559.0 ]--
r 83         ListIterator iterator = testSteque.listIt
--[ 2019.09.24.11.10.55.644.0 ]--
r 83         ListIterator iterator = testSteque.listIte
--[ 2019.09.24.11.10.56.118.0 ]--
r 83         ListIterator iterator = testSteque.listIter
--[ 2019.09.24.11.10.56.257.0 ]--
r 83         ListIterator iterator = testSteque.listItera
--[ 2019.09.24.11.10.56.356.0 ]--
r 83         ListIterator iterator = testSteque.listIterat
--[ 2019.09.24.11.10.56.510.0 ]--
r 83         ListIterator iterator = testSteque.listIterato
--[ 2019.09.24.11.10.56.544.0 ]--
r 83         ListIterator iterator = testSteque.listIterator
--[ 2019.09.24.11.10.56.772.0 ]--
r 83         ListIterator iterator = testSteque.listIterator 
--[ 2019.09.24.11.10.56.889.0 ]--
r 83         ListIterator iterator = testSteque.listIterator
--[ 2019.09.24.11.10.56.966.0 ]--
r 83         ListIterator iterator = testSteque.listIterator;
--[ 2019.09.24.11.10.57.353.0 ]--
r 83         ListIterator iterator = testSteque.listIterator
--[ 2019.09.24.11.10.57.483.0 ]--
r 83         ListIterator iterator = testSteque.listIterator()
--[ 2019.09.24.11.10.57.807.0 ]--
r 83         ListIterator iterator = testSteque.listIterator();
--[ 2019.09.24.11.10.58.527.0 ]--
r 83         ListIterator iterator = testSteque.listIterator(); 
--[ 2019.09.24.11.10.58.575.0 ]--
r 83         ListIterator iterator = testSteque.listIterator();
--[ 2019.09.24.11.11.01.192.0 ]--
r 83         
--[ 2019.09.24.11.11.23.788.0 ]--
- 83
--[ 2019.09.24.11.11.28.265.0 ]--
r 81     public static void main(String[] args) throws NoSuchElementException { 
--[ 2019.09.24.11.11.28.286.0 ]--
r 81     public static void main(String[] args) throws NoSuchElementException {
--[ 2019.09.24.11.11.28.407.0 ]--
+ 82         
--[ 2019.09.24.11.11.28.764.0 ]--
r 82         L
--[ 2019.09.24.11.11.28.987.0 ]--
r 82         Li
--[ 2019.09.24.11.11.29.089.0 ]--
r 82         Lis
--[ 2019.09.24.11.11.29.199.0 ]--
r 82         List
--[ 2019.09.24.11.11.29.577.0 ]--
r 82         ListI
--[ 2019.09.24.11.11.29.809.0 ]--
r 82         ListIt
--[ 2019.09.24.11.11.30.375.0 ]--
r 82         ListIterator
--[ 2019.09.24.11.11.36.865.0 ]--
r 82         
--[ 2019.09.24.11.11.37.298.0 ]--
- 82
--[ 2019.09.24.11.11.38.686.0 ]--
+ 83         
--[ 2019.09.24.11.11.39.245.0 ]--
r 83         L
--[ 2019.09.24.11.11.39.348.0 ]--
r 83         Li
--[ 2019.09.24.11.11.39.430.0 ]--
r 83         Lis
--[ 2019.09.24.11.11.39.522.0 ]--
r 83         List
--[ 2019.09.24.11.11.39.700.0 ]--
r 83         ListI
--[ 2019.09.24.11.11.40.147.0 ]--
r 83         ListIterator
--[ 2019.09.24.11.11.40.548.0 ]--
r 83         ListIterator.
--[ 2019.09.24.11.11.41.534.0 ]--
r 83         ListIterator
--[ 2019.09.24.11.11.44.217.0 ]--
r 83         ListIterator()
--[ 2019.09.24.11.11.44.947.0 ]--
r 83         ListIterator() 
--[ 2019.09.24.11.11.45.909.0 ]--
r 83         ListIterator()
--[ 2019.09.24.11.11.46.001.0 ]--
r 83         ListIterator(
--[ 2019.09.24.11.11.46.118.0 ]--
r 83         ListIterator
--[ 2019.09.24.11.11.46.422.0 ]--
r 83         ListIterator 
--[ 2019.09.24.11.11.46.548.0 ]--
r 83         ListIterator i
--[ 2019.09.24.11.11.46.765.0 ]--
r 83         ListIterator it
--[ 2019.09.24.11.11.46.881.0 ]--
r 83         ListIterator ite
--[ 2019.09.24.11.11.47.002.0 ]--
r 83         ListIterator iter
--[ 2019.09.24.11.11.47.370.0 ]--
r 83         ListIterator itera
--[ 2019.09.24.11.11.47.536.0 ]--
r 83         ListIterator iterat
--[ 2019.09.24.11.11.47.625.0 ]--
r 83         ListIterator iterato
--[ 2019.09.24.11.11.47.709.0 ]--
r 83         ListIterator iterator
--[ 2019.09.24.11.11.47.969.0 ]--
r 83         ListIterator iterator 
--[ 2019.09.24.11.11.48.461.0 ]--
r 83         ListIterator iterator =
--[ 2019.09.24.11.11.51.768.0 ]--
r 83         ListIterator iterator = 
--[ 2019.09.24.11.12.01.073.0 ]--
r 83         ListIterator iterator 
--[ 2019.09.24.11.12.01.195.0 ]--
r 83         ListIterator 
--[ 2019.09.24.11.12.01.290.0 ]--
r 83         
--[ 2019.09.24.11.12.01.989.0 ]--
r 83         i
--[ 2019.09.24.11.12.02.065.0 ]--
r 83         it
--[ 2019.09.24.11.12.02.122.0 ]--
r 83         ite
--[ 2019.09.24.11.12.02.231.0 ]--
r 83         iter
--[ 2019.09.24.11.12.02.361.0 ]--
r 83         itera
--[ 2019.09.24.11.12.02.447.0 ]--
r 83         iterat
--[ 2019.09.24.11.12.02.565.0 ]--
r 83         iterato
--[ 2019.09.24.11.12.02.638.0 ]--
r 83         iterator
--[ 2019.09.24.11.12.02.690.0 ]--
r 83         iterator 
--[ 2019.09.24.11.12.02.793.0 ]--
r 83         iterator =
--[ 2019.09.24.11.12.02.870.0 ]--
r 83         iterator = 
--[ 2019.09.24.11.12.03.491.0 ]--
r 83         iterator =  
--[ 2019.09.24.11.12.03.571.0 ]--
r 83         iterator = 
--[ 2019.09.24.11.12.03.938.0 ]--
r 83         iterator 
--[ 2019.09.24.11.12.03.965.0 ]--
r 83         
--[ 2019.09.24.11.12.04.392.0 ]--
r 83         l
--[ 2019.09.24.11.12.04.523.0 ]--
r 83         li
--[ 2019.09.24.11.12.04.558.0 ]--
r 83         lis
--[ 2019.09.24.11.12.04.646.0 ]--
r 83         list
--[ 2019.09.24.11.12.04.944.0 ]--
r 83         lis
--[ 2019.09.24.11.12.05.030.0 ]--
r 83         li
--[ 2019.09.24.11.12.05.141.0 ]--
r 83         l
--[ 2019.09.24.11.12.05.327.0 ]--
r 83         
--[ 2019.09.24.11.12.06.877.0 ]--
r 83         L
--[ 2019.09.24.11.12.06.997.0 ]--
r 83         Li
--[ 2019.09.24.11.12.07.173.0 ]--
r 83         Lis
--[ 2019.09.24.11.12.07.255.0 ]--
r 83         List
--[ 2019.09.24.11.12.07.539.0 ]--
r 83         ListI
--[ 2019.09.24.11.12.07.837.0 ]--
r 83         ListIt
--[ 2019.09.24.11.12.08.606.0 ]--
r 83         
--[ 2019.09.24.11.12.09.251.0 ]--
r 83         I
--[ 2019.09.24.11.12.09.395.0 ]--
r 83         It
--[ 2019.09.24.11.12.09.515.0 ]--
r 83         Ite
--[ 2019.09.24.11.12.09.687.0 ]--
r 83         Iter
--[ 2019.09.24.11.12.10.044.0 ]--
r 83         Itera
--[ 2019.09.24.11.12.10.297.0 ]--
r 83         Iterator
--[ 2019.09.24.11.12.11.024.0 ]--
r 83         Iterator<>
--[ 2019.09.24.11.12.11.217.0 ]--
r 83         Iterator<S>
--[ 2019.09.24.11.12.11.415.0 ]--
r 83         Iterator<St>
--[ 2019.09.24.11.12.11.575.0 ]--
r 83         Iterator<Str>
--[ 2019.09.24.11.12.11.710.0 ]--
r 83         Iterator<Strin>
--[ 2019.09.24.11.12.11.778.0 ]--
r 83         Iterator<String>
--[ 2019.09.24.11.12.12.198.0 ]--
r 83         Iterator<String> 
--[ 2019.09.24.11.12.12.226.0 ]--
r 83         Iterator<String> =
--[ 2019.09.24.11.12.12.293.0 ]--
r 83         Iterator<String> = 
--[ 2019.09.24.11.12.14.434.0 ]--
r 83         Iterator<String> = t
--[ 2019.09.24.11.12.14.477.0 ]--
r 83         Iterator<String> = te
--[ 2019.09.24.11.12.14.617.0 ]--
r 83         Iterator<String> = tes
--[ 2019.09.24.11.12.14.722.0 ]--
r 83         Iterator<String> = test
--[ 2019.09.24.11.12.15.262.0 ]--
r 83         Iterator<String> = testSteque
--[ 2019.09.24.11.12.15.455.0 ]--
r 83         Iterator<String> = testSteque.
--[ 2019.09.24.11.12.16.046.0 ]--
r 83         Iterator<String> = testSteque.l
--[ 2019.09.24.11.12.16.143.0 ]--
r 83         Iterator<String> = testSteque.li
--[ 2019.09.24.11.12.16.204.0 ]--
r 83         Iterator<String> = testSteque.lis
--[ 2019.09.24.11.12.16.338.0 ]--
r 83         Iterator<String> = testSteque.list
--[ 2019.09.24.11.12.18.518.0 ]--
r 83         Iterator<String> i= testSteque.list
--[ 2019.09.24.11.12.18.590.0 ]--
r 83         Iterator<String> it= testSteque.list
--[ 2019.09.24.11.12.18.656.0 ]--
r 83         Iterator<String> ite= testSteque.list
--[ 2019.09.24.11.12.18.771.0 ]--
r 83         Iterator<String> iter= testSteque.list
--[ 2019.09.24.11.12.18.874.0 ]--
r 83         Iterator<String> itera= testSteque.list
--[ 2019.09.24.11.12.18.972.0 ]--
r 83         Iterator<String> iterat= testSteque.list
--[ 2019.09.24.11.12.19.162.0 ]--
r 83         Iterator<String> iterato= testSteque.list
--[ 2019.09.24.11.12.19.230.0 ]--
r 83         Iterator<String> iterator= testSteque.list
--[ 2019.09.24.11.12.19.296.0 ]--
r 83         Iterator<String> iterator = testSteque.list
--[ 2019.09.24.11.12.21.494.0 ]--
r 83         Iterator<String> iterator = testSteque.lis
--[ 2019.09.24.11.12.21.567.0 ]--
r 83         Iterator<String> iterator = testSteque.li
--[ 2019.09.24.11.12.21.719.0 ]--
r 83         Iterator<String> iterator = testSteque.l
--[ 2019.09.24.11.12.21.805.0 ]--
r 83         Iterator<String> iterator = testSteque.
--[ 2019.09.24.11.12.22.764.0 ]--
r 83         Iterator<String> iterator = testSteque.L
--[ 2019.09.24.11.12.22.897.0 ]--
r 83         Iterator<String> iterator = testSteque.Li
--[ 2019.09.24.11.12.22.961.0 ]--
r 83         Iterator<String> iterator = testSteque.Lis
--[ 2019.09.24.11.12.23.072.0 ]--
r 83         Iterator<String> iterator = testSteque.List
--[ 2019.09.24.11.12.23.392.0 ]--
r 83         Iterator<String> iterator = testSteque.ListI
--[ 2019.09.24.11.12.24.046.0 ]--
r 83         Iterator<String> iterator = testSteque.ListIterator
--[ 2019.09.24.11.12.25.064.0 ]--
r 83         Iterator<String> iterator = testSteque.ListIterator;
--[ 2019.09.24.11.12.25.578.0 ]--
r 83         Iterator<String> iterator = testSteque.ListIterator
--[ 2019.09.24.11.12.25.872.0 ]--
r 83         Iterator<String> iterator = testSteque.ListIterator()
--[ 2019.09.24.11.12.26.407.0 ]--
r 83         Iterator<String> iterator = testSteque.ListIterator();
--[ 2019.09.24.11.12.30.133.0 ]--
r 83         Iterator<String> iterator = testSteque.ListIterator(); 
--[ 2019.09.24.11.12.30.175.0 ]--
r 83         Iterator<String> iterator = testSteque.ListIterator();
--[ 2019.09.24.11.12.38.115.0 ]--
r 83         
--[ 2019.09.24.11.12.38.292.0 ]--
- 83
--[ 2019.09.24.11.14.55.902.0 ]--
- 67
- 67
- 67
- 67
- 67
- 68
- 68
- 68
- 68
- 68
- 68
--[ 2019.09.24.11.14.56.061.0 ]--
- 67
--[ 2019.09.24.11.14.56.462.0 ]--
r 66     } 
--[ 2019.09.24.11.14.56.545.0 ]--
r 66     }
--[ 2019.09.24.11.15.04.294.0 ]--
r 66     } 
--[ 2019.09.24.11.15.04.544.0 ]--
r 66     }
--[ 2019.09.24.11.15.04.783.0 ]--
+ 67 
--[ 2019.09.24.11.15.05.083.0 ]--
+ 67 
+ 68     private class ListIterator implements Iterator<Item>{
+ 69         private Node current = top;
+ 70 
+ 71         public boolean hasNext() {return current != null;}
+ 73         public Item next(){
+ 74             Item item = current.item;
+ 75             current = current.next;
+ 76             return item;
+ 77         }
+ 78     }
--[ 2019.09.24.11.15.13.959.0 ]--
r 69         private Node<> current = top;
--[ 2019.09.24.11.15.14.361.0 ]--
r 69         private Node<I> current = top;
--[ 2019.09.24.11.15.14.520.0 ]--
r 69         private Node<It> current = top;
--[ 2019.09.24.11.15.14.579.0 ]--
r 69         private Node<Ite> current = top;
--[ 2019.09.24.11.15.14.645.0 ]--
r 69         private Node<Item> current = top;
--[ 2019.09.24.11.15.15.313.0 ]--
r 69         private Node<Item>  current = top;
--[ 2019.09.24.11.15.15.403.0 ]--
r 69         private Node<Item> current = top;
--[ 2019.09.24.11.15.18.784.0 ]--
r 69         private Node current = top;
--[ 2019.09.24.11.16.03.519.0 ]--
+ 83         
--[ 2019.09.24.11.16.11.916.0 ]--
- 83
--[ 2019.09.24.11.17.04.832.0 ]--
+ 85         
--[ 2019.09.24.11.17.05.330.0 ]--
r 85         s
--[ 2019.09.24.11.17.05.452.0 ]--
r 85         st
--[ 2019.09.24.11.17.05.551.0 ]--
r 85         ste
--[ 2019.09.24.11.17.06.466.0 ]--
r 85         testSteque
--[ 2019.09.24.11.17.06.642.0 ]--
r 85         testSteque.
--[ 2019.09.24.11.17.06.934.0 ]--
r 85         testSteque.n
--[ 2019.09.24.11.17.07.018.0 ]--
r 85         testSteque.ne
--[ 2019.09.24.11.17.07.492.0 ]--
r 85         testSteque.nex
--[ 2019.09.24.11.17.07.665.0 ]--
r 85         testSteque.next
--[ 2019.09.24.11.17.08.012.0 ]--
r 85         testSteque.next 
--[ 2019.09.24.11.17.08.146.0 ]--
r 85         testSteque.next
--[ 2019.09.24.11.17.08.539.0 ]--
r 85         testSteque.next()
--[ 2019.09.24.11.17.09.343.0 ]--
r 85         testSteque.next();
--[ 2019.09.24.11.17.10.072.0 ]--
r 85         testSteque.next()
--[ 2019.09.24.11.17.10.264.0 ]--
r 85         testSteque.next(
--[ 2019.09.24.11.17.10.470.0 ]--
r 85         testSteque.next
--[ 2019.09.24.11.17.10.709.0 ]--
r 85         testSteque.
--[ 2019.09.24.11.17.10.967.0 ]--
r 85         testSteque
--[ 2019.09.24.11.17.11.380.0 ]--
r 85         
--[ 2019.09.24.11.17.11.835.0 ]--
- 85
--[ 2019.09.24.11.17.14.311.0 ]--
r 84         testSteque.push("There"); 
--[ 2019.09.24.11.17.14.357.0 ]--
r 84         testSteque.push("There");
--[ 2019.09.24.11.26.08.628.0 ]--
r 72     
--[ 2019.09.24.11.26.08.775.0 ]--
r 72         
--[ 2019.09.24.11.26.09.470.0 ]--
+ 72         
--[ 2019.09.24.11.26.10.718.0 ]--
+ 72         
--[ 2019.09.24.11.26.11.187.0 ]--
r 73         p
--[ 2019.09.24.11.26.11.452.0 ]--
r 73         pu
--[ 2019.09.24.11.26.11.587.0 ]--
r 73         pub
--[ 2019.09.24.11.26.11.672.0 ]--
r 73         publ
--[ 2019.09.24.11.26.11.823.0 ]--
r 73         publi
--[ 2019.09.24.11.26.11.919.0 ]--
r 73         public
--[ 2019.09.24.11.26.12.184.0 ]--
r 73         publicb
--[ 2019.09.24.11.26.12.840.0 ]--
r 73         public
--[ 2019.09.24.11.26.13.694.0 ]--
r 73         publicv
--[ 2019.09.24.11.26.13.758.0 ]--
r 73         publicvo
--[ 2019.09.24.11.26.13.827.0 ]--
r 73         publicvoi
--[ 2019.09.24.11.26.13.865.0 ]--
r 73         publicvoid
--[ 2019.09.24.11.26.13.941.0 ]--
r 73         publicvoid 
--[ 2019.09.24.11.26.14.052.0 ]--
r 73         publicvoid r
--[ 2019.09.24.11.26.14.073.0 ]--
r 73         publicvoid re
--[ 2019.09.24.11.26.14.150.0 ]--
r 73         publicvoid rem
--[ 2019.09.24.11.26.14.230.0 ]--
r 73         publicvoid remo
--[ 2019.09.24.11.26.14.285.0 ]--
r 73         publicvoid remov
--[ 2019.09.24.11.26.14.384.0 ]--
r 73         publicvoid remove
--[ 2019.09.24.11.26.14.678.0 ]--
r 73         publicvoid 
--[ 2019.09.24.11.26.14.870.0 ]--
r 73         publicvoid
--[ 2019.09.24.11.26.14.960.0 ]--
r 73         publicvoi
--[ 2019.09.24.11.26.15.073.0 ]--
r 73         publicvo
--[ 2019.09.24.11.26.15.261.0 ]--
r 73         publicv
--[ 2019.09.24.11.26.15.368.0 ]--
r 73         public
--[ 2019.09.24.11.26.15.533.0 ]--
r 73         public 
--[ 2019.09.24.11.26.15.585.0 ]--
r 73         public v
--[ 2019.09.24.11.26.15.681.0 ]--
r 73         public vo
--[ 2019.09.24.11.26.15.726.0 ]--
r 73         public voi
--[ 2019.09.24.11.26.15.886.0 ]--
r 73         public voic
--[ 2019.09.24.11.26.16.167.0 ]--
r 73         public voic 
--[ 2019.09.24.11.26.16.179.0 ]--
r 73         public voic r
--[ 2019.09.24.11.26.16.247.0 ]--
r 73         public voic re
--[ 2019.09.24.11.26.16.341.0 ]--
r 73         public voic rem
--[ 2019.09.24.11.26.16.370.0 ]--
r 73         public voic remo
--[ 2019.09.24.11.26.16.436.0 ]--
r 73         public voic remov
--[ 2019.09.24.11.26.16.481.0 ]--
r 73         public voic remove
--[ 2019.09.24.11.26.17.317.0 ]--
r 73         public voic remove()
--[ 2019.09.24.11.26.17.697.0 ]--
r 73         public voic remove() 
--[ 2019.09.24.11.26.17.819.0 ]--
r 73         public voic remove() {}
--[ 2019.09.24.11.26.18.453.0 ]--
r 73         public voic remove() {t}
--[ 2019.09.24.11.26.18.617.0 ]--
r 73         public voic remove() {th}
--[ 2019.09.24.11.26.18.965.0 ]--
r 73         public voic remove() {thr}
--[ 2019.09.24.11.26.21.098.0 ]--
r 73         public voicd remove() {thr}
--[ 2019.09.24.11.26.21.508.0 ]--
r 73         public voic remove() {thr}
--[ 2019.09.24.11.26.21.643.0 ]--
r 73         public voicd remove() {thr}
--[ 2019.09.24.11.26.22.080.0 ]--
r 73         public voic remove() {thr}
--[ 2019.09.24.11.26.22.154.0 ]--
r 73         public voi remove() {thr}
--[ 2019.09.24.11.26.22.221.0 ]--
r 73         public void remove() {thr}
--[ 2019.09.24.11.26.25.288.0 ]--
r 73         public void remove() {thro}
--[ 2019.09.24.11.26.25.352.0 ]--
r 73         public void remove() {throw}
--[ 2019.09.24.11.26.25.441.0 ]--
r 73         public void remove() {throw }
--[ 2019.09.24.11.26.26.191.0 ]--
r 73         public void remove() {throw n}
--[ 2019.09.24.11.26.26.213.0 ]--
r 73         public void remove() {throw ne}
--[ 2019.09.24.11.26.26.345.0 ]--
r 73         public void remove() {throw new}
--[ 2019.09.24.11.26.26.432.0 ]--
r 73         public void remove() {throw new }
--[ 2019.09.24.11.26.26.695.0 ]--
r 73         public void remove() {throw new U}
--[ 2019.09.24.11.26.26.972.0 ]--
r 73         public void remove() {throw new Un}
--[ 2019.09.24.11.26.27.162.0 ]--
r 73         public void remove() {throw new Uns}
--[ 2019.09.24.11.26.27.755.0 ]--
r 73         public void remove() {throw new UnsupportedOperationException}
--[ 2019.09.24.11.26.27.815.0 ]--
r 73         public void remove() {throw new UnsupportedOperationException()}
--[ 2019.09.24.11.26.30.050.0 ]--
r 73         public void remove() {throw new UnsupportedOperationException();}
--[ 2019.09.24.11.26.30.660.0 ]--
r 73         public void remove() {throw new UnsupportedOperationException(); }
--[ 2019.09.24.11.26.30.717.0 ]--
r 73         public void remove() {throw new UnsupportedOperationException();}
--[ 2019.09.24.11.27.54.440.0 ]--
r 65         return new SIterator();
--[ 2019.09.24.11.27.54.673.0 ]--
r 65         return new StIterator();
--[ 2019.09.24.11.27.55.125.0 ]--
r 65         return new StqIterator();
--[ 2019.09.24.11.27.56.803.0 ]--
r 65         return new StIterator();
--[ 2019.09.24.11.27.56.942.0 ]--
r 65         return new SteIterator();
--[ 2019.09.24.11.27.57.083.0 ]--
r 65         return new SteqIterator();
--[ 2019.09.24.11.27.57.161.0 ]--
r 65         return new StequIterator();
--[ 2019.09.24.11.27.57.295.0 ]--
r 65         return new StequeIterator();
--[ 2019.09.24.11.27.57.445.0 ]--
r 65         return new Steque Iterator();
--[ 2019.09.24.11.27.57.566.0 ]--
r 65         return new StequeIterator();
--[ 2019.09.24.11.28.00.644.0 ]--
r 65         return new LIterator();
--[ 2019.09.24.11.28.00.784.0 ]--
r 65         return new LiIterator();
--[ 2019.09.24.11.28.00.848.0 ]--
r 65         return new LisIterator();
--[ 2019.09.24.11.28.00.918.0 ]--
r 65         return new ListIterator();
--[ 2019.09.24.11.28.02.053.0 ]--
r 65         return new List Iterator();
--[ 2019.09.24.11.28.02.078.0 ]--
r 65         return new ListIterator();
--[ 2019.09.24.11.28.03.398.0 ]--
r 65         return new SIterator();
--[ 2019.09.24.11.28.03.632.0 ]--
r 65         return new StIterator();
--[ 2019.09.24.11.28.03.770.0 ]--
r 65         return new StqIterator();
--[ 2019.09.24.11.28.03.903.0 ]--
r 65         return new StquIterator();
--[ 2019.09.24.11.28.04.001.0 ]--
r 65         return new StqueIterator();
--[ 2019.09.24.11.28.04.556.0 ]--
r 65         return new StquIterator();
--[ 2019.09.24.11.28.04.646.0 ]--
r 65         return new StqIterator();
--[ 2019.09.24.11.28.05.304.0 ]--
r 65         return new StIterator();
--[ 2019.09.24.11.28.05.629.0 ]--
r 65         return new SteIterator();
--[ 2019.09.24.11.28.05.790.0 ]--
r 65         return new SteqIterator();
--[ 2019.09.24.11.28.05.871.0 ]--
r 65         return new StequIterator();
--[ 2019.09.24.11.28.05.963.0 ]--
r 65         return new StequeIterator();
--[ 2019.09.24.11.28.10.238.0 ]--
r 68     private class StequeIterator implements Iterator<Item>{
--[ 2019.09.24.11.31.25.730.0 ]--
+ 87         
--[ 2019.09.24.11.31.26.971.0 ]--
r 87         f
--[ 2019.09.24.11.31.27.068.0 ]--
r 87         fo
--[ 2019.09.24.11.31.27.105.0 ]--
r 87         for
--[ 2019.09.24.11.31.27.406.0 ]--
r 87         for()
--[ 2019.09.24.11.31.27.541.0 ]--
r 87         for(S)
--[ 2019.09.24.11.31.27.724.0 ]--
r 87         for(St)
--[ 2019.09.24.11.31.27.910.0 ]--
r 87         for(Str)
--[ 2019.09.24.11.31.28.059.0 ]--
r 87         for(Stri)
--[ 2019.09.24.11.31.28.108.0 ]--
r 87         for(Strin)
--[ 2019.09.24.11.31.28.184.0 ]--
r 87         for(String)
--[ 2019.09.24.11.31.29.285.0 ]--
r 87         for(String )
--[ 2019.09.24.11.31.29.338.0 ]--
r 87         for(String s)
--[ 2019.09.24.11.31.29.460.0 ]--
r 87         for(String s )
--[ 2019.09.24.11.31.29.649.0 ]--
r 87         for(String s :)
--[ 2019.09.24.11.31.29.706.0 ]--
r 87         for(String s : )
--[ 2019.09.24.11.31.30.456.0 ]--
r 87         for(String s : s)
--[ 2019.09.24.11.31.31.151.0 ]--
r 87         for(String s : )
--[ 2019.09.24.11.31.31.517.0 ]--
r 87         for(String s : t)
--[ 2019.09.24.11.31.31.587.0 ]--
r 87         for(String s : te)
--[ 2019.09.24.11.31.31.689.0 ]--
r 87         for(String s : tes)
--[ 2019.09.24.11.31.32.075.0 ]--
r 87         for(String s : test)
--[ 2019.09.24.11.31.32.304.0 ]--
r 87         for(String s : testSteque)
--[ 2019.09.24.11.31.34.449.0 ]--
r 87         for(String s : testSteque){
--[ 2019.09.24.11.31.34.584.0 ]--
+ 88 
+ 89 }
--[ 2019.09.24.11.31.34.595.0 ]--
r 89         }
--[ 2019.09.24.11.31.34.616.0 ]--
r 88             
--[ 2019.09.24.11.31.36.159.0 ]--
r 88             S
--[ 2019.09.24.11.31.36.296.0 ]--
r 88             St
--[ 2019.09.24.11.31.36.466.0 ]--
r 88             Std
--[ 2019.09.24.11.31.37.223.0 ]--
r 88             StdOut
--[ 2019.09.24.11.31.37.389.0 ]--
r 88             StdOut.
--[ 2019.09.24.11.31.37.752.0 ]--
r 88             StdOut.p
--[ 2019.09.24.11.31.38.057.0 ]--
r 88             StdOut.println
--[ 2019.09.24.11.31.38.065.0 ]--
r 88             StdOut.println()
--[ 2019.09.24.11.31.38.070.0 ]--
r 88             StdOut.println();
--[ 2019.09.24.11.31.40.416.0 ]--
r 88             StdOut.println(s);
--[ 2019.09.24.11.31.41.227.0 ]--
r 88             StdOut.println(s );
--[ 2019.09.24.11.31.41.308.0 ]--
r 88             StdOut.println(s);
--[ 2019.09.24.11.31.44.386.0 ]--
r 72 
r 74 
--[ 2019.09.24.11.31.46.967.0 ]--
UpdateTree (AD): 0 1
- /out/production/P02_DataTypes/Steque$ListIterator.class

--[ 2019.09.24.11.31.46.967.1 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.24.11.31.47.714.0 ]--
UpdateTree (AD): 1 0
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.34.37.769.0 ]--
- 87
- 87
r 87         
--[ 2019.09.24.11.34.38.185.0 ]--
- 87
--[ 2019.09.24.11.34.38.368.0 ]--
r 86         testSteque.push("There")
--[ 2019.09.24.11.34.38.881.0 ]--
+ 86         testSteque.push("There");
r 87         
--[ 2019.09.24.11.34.39.224.0 ]--
r 87          
--[ 2019.09.24.11.34.39.244.0 ]--
r 87         
--[ 2019.09.24.11.34.39.430.0 ]--
- 87
--[ 2019.09.24.11.34.44.463.0 ]--
+ 61     
--[ 2019.09.24.11.34.44.557.0 ]--
+ 61     
--[ 2019.09.24.11.34.45.041.0 ]--
r 62     p
--[ 2019.09.24.11.34.45.112.0 ]--
r 62     pu
--[ 2019.09.24.11.34.45.179.0 ]--
r 62     pub
--[ 2019.09.24.11.34.45.286.0 ]--
r 62     publ
--[ 2019.09.24.11.34.45.466.0 ]--
r 62     publi
--[ 2019.09.24.11.34.45.591.0 ]--
r 62     public
--[ 2019.09.24.11.34.45.852.0 ]--
r 62     public 
--[ 2019.09.24.11.34.46.759.0 ]--
r 62     public  
--[ 2019.09.24.11.34.46.833.0 ]--
r 62     public 
--[ 2019.09.24.11.34.48.180.0 ]--
r 62     public v
--[ 2019.09.24.11.34.48.321.0 ]--
r 62     public vo
--[ 2019.09.24.11.34.48.393.0 ]--
r 62     public voi
--[ 2019.09.24.11.34.48.494.0 ]--
r 62     public void
--[ 2019.09.24.11.34.48.628.0 ]--
r 62     public void 
--[ 2019.09.24.11.34.51.266.0 ]--
r 62     public void p
--[ 2019.09.24.11.34.51.375.0 ]--
r 62     public void pri
--[ 2019.09.24.11.34.52.052.0 ]--
r 62     public void prin
--[ 2019.09.24.11.34.52.159.0 ]--
r 62     public void print
--[ 2019.09.24.11.34.52.529.0 ]--
r 62     public void printS
--[ 2019.09.24.11.34.52.638.0 ]--
r 62     public void printSt
--[ 2019.09.24.11.34.53.144.0 ]--
r 62     public void printSte
--[ 2019.09.24.11.34.53.269.0 ]--
r 62     public void printSteq
--[ 2019.09.24.11.34.53.329.0 ]--
r 62     public void printStequ
--[ 2019.09.24.11.34.53.507.0 ]--
r 62     public void printSteque
--[ 2019.09.24.11.34.53.921.0 ]--
r 62     public void printSteque()
--[ 2019.09.24.11.34.54.098.0 ]--
r 62     public void printSteque(){}
--[ 2019.09.24.11.34.54.296.0 ]--
+ 62     public void printSteque(){
r 63     }
--[ 2019.09.24.11.34.54.319.0 ]--
+ 63         
--[ 2019.09.24.11.34.55.222.0 ]--
+ 63         for(String s : testSteque){
+ 64             StdOut.println(s);
r 65         }
--[ 2019.09.24.11.34.56.040.0 ]--
r 65         } 
--[ 2019.09.24.11.34.56.102.0 ]--
r 65         }
--[ 2019.09.24.11.34.59.159.0 ]--
r 62     public void printSteque(s){
--[ 2019.09.24.11.34.59.424.0 ]--
r 62     public void printSteque(st){
--[ 2019.09.24.11.35.00.541.0 ]--
r 62     public void printSteque(s){
--[ 2019.09.24.11.35.00.644.0 ]--
r 62     public void printSteque(){
--[ 2019.09.24.11.35.02.228.0 ]--
r 62     public void printSteque(s){
--[ 2019.09.24.11.35.02.376.0 ]--
r 62     public void printSteque(st){
--[ 2019.09.24.11.35.02.537.0 ]--
r 62     public void printSteque(ste){
--[ 2019.09.24.11.35.02.705.0 ]--
r 62     public void printSteque(steq){
--[ 2019.09.24.11.35.02.776.0 ]--
r 62     public void printSteque(stequ){
--[ 2019.09.24.11.35.02.855.0 ]--
r 62     public void printSteque(steque){
--[ 2019.09.24.11.35.03.086.0 ]--
r 62     public void printSteque(steque ){
--[ 2019.09.24.11.35.03.207.0 ]--
r 62     public void printSteque(steque){
--[ 2019.09.24.11.35.15.848.0 ]--
r 62     public void printSteque(s){
--[ 2019.09.24.11.35.16.307.0 ]--
r 62     public void printSteque(){
--[ 2019.09.24.11.35.22.789.0 ]--
r 62     public void printSteque( ){
--[ 2019.09.24.11.35.22.842.0 ]--
r 62     public void printSteque(){
--[ 2019.09.24.11.35.22.956.0 ]--
r 62     public void printSteque(s){
--[ 2019.09.24.11.35.23.090.0 ]--
r 62     public void printSteque(st){
--[ 2019.09.24.11.35.24.306.0 ]--
r 62     public void printSteque(ste){
--[ 2019.09.24.11.35.24.489.0 ]--
r 62     public void printSteque(steq){
--[ 2019.09.24.11.35.24.539.0 ]--
r 62     public void printSteque(stequ){
--[ 2019.09.24.11.35.24.651.0 ]--
r 62     public void printSteque(steque){
--[ 2019.09.24.11.35.24.972.0 ]--
r 62     public void printSteque(steque ){
--[ 2019.09.24.11.35.25.012.0 ]--
r 62     public void printSteque(steque){
--[ 2019.09.24.11.35.36.895.0 ]--
r 61 
--[ 2019.09.24.11.36.38.440.0 ]--
r 62     public void printSteque(Ssteque){
--[ 2019.09.24.11.36.38.590.0 ]--
r 62     public void printSteque(Ststeque){
--[ 2019.09.24.11.36.39.154.0 ]--
r 62     public void printSteque(Stqsteque){
--[ 2019.09.24.11.36.40.076.0 ]--
r 62     public void printSteque(Stequesteque){
--[ 2019.09.24.11.36.40.113.0 ]--
r 62     public void printSteque(Steque steque){
--[ 2019.09.24.11.36.40.130.0 ]--
r 62     public void printSteque(Stequesteque){
--[ 2019.09.24.11.36.40.717.0 ]--
r 62     public void printSteque(Steque steque){
--[ 2019.09.24.11.36.41.635.0 ]--
r 62     public void printSteque(Steque  steque){
--[ 2019.09.24.11.36.41.664.0 ]--
r 62     public void printSteque(Steque steque){
--[ 2019.09.24.11.36.45.253.0 ]--
r 63         for(String s : e){
--[ 2019.09.24.11.36.45.821.0 ]--
r 63         for(String s : ){
--[ 2019.09.24.11.36.45.968.0 ]--
r 63         for(String s : steque){
--[ 2019.09.24.11.36.57.758.0 ]--
r 63         for(I s : steque){
--[ 2019.09.24.11.36.57.884.0 ]--
r 63         for(It s : steque){
--[ 2019.09.24.11.36.57.948.0 ]--
r 63         for(Ite s : steque){
--[ 2019.09.24.11.36.58.017.0 ]--
r 63         for(Item s : steque){
--[ 2019.09.24.11.36.59.637.0 ]--
r 63         for(Item  s : steque){
--[ 2019.09.24.11.36.59.682.0 ]--
r 63         for(Item s : steque){
--[ 2019.09.24.11.37.04.029.0 ]--
- 62
- 62
- 62
- 62
- 62
r 62     public void 
--[ 2019.09.24.11.37.04.061.0 ]--
r 62     public 
--[ 2019.09.24.11.37.04.480.0 ]--
r 62     
--[ 2019.09.24.11.37.04.536.0 ]--
r 62 
--[ 2019.09.24.11.37.04.943.0 ]--
- 61
r 61     
--[ 2019.09.24.11.37.43.892.0 ]--
+ 88         
--[ 2019.09.24.11.37.43.959.0 ]--
r 88         steque
--[ 2019.09.24.11.37.44.571.0 ]--
r 88         steque 
--[ 2019.09.24.11.37.44.651.0 ]--
r 88         steque
--[ 2019.09.24.11.37.44.841.0 ]--
r 88         steque 
--[ 2019.09.24.11.37.45.007.0 ]--
r 88         steque
--[ 2019.09.24.11.37.45.272.0 ]--
r 88         
--[ 2019.09.24.11.37.45.525.0 ]--
- 88
--[ 2019.09.24.11.37.45.947.0 ]--
+ 61 
r 62 
--[ 2019.09.24.11.37.46.107.0 ]--
+ 62     public void printSteque(Steque steque){
+ 63         for(Item s : steque){
+ 64             StdOut.println(s);
+ 65         }
+ 66     }
--[ 2019.09.24.11.37.46.721.0 ]--
r 63         for(Item  s : steque){
--[ 2019.09.24.11.37.46.779.0 ]--
r 63         for(String s : steque){
--[ 2019.09.24.11.37.47.180.0 ]--
r 63         for(String s : ){
--[ 2019.09.24.11.37.47.229.0 ]--
r 63         for(String s : e){
--[ 2019.09.24.11.37.47.688.0 ]--
r 63         for(String s : testSteque){
--[ 2019.09.24.11.37.51.507.0 ]--
- 63
- 63
r 63         
--[ 2019.09.24.11.37.53.069.0 ]--
- 62
- 62
r 62     publ
--[ 2019.09.24.11.37.53.090.0 ]--
r 62     pub
--[ 2019.09.24.11.37.53.168.0 ]--
r 62     pu
--[ 2019.09.24.11.37.53.335.0 ]--
r 62     
--[ 2019.09.24.11.37.53.486.0 ]--
- 61
--[ 2019.09.24.11.37.53.842.0 ]--
- 61
--[ 2019.09.24.11.37.55.951.0 ]--
+ 88         
--[ 2019.09.24.11.37.56.086.0 ]--
+ 88         for(String s : testSteque){
+ 89             StdOut.println(s);
r 90         }
--[ 2019.09.24.11.37.56.521.0 ]--
r 90         } 
--[ 2019.09.24.11.37.56.602.0 ]--
r 90         }
--[ 2019.09.24.11.38.03.021.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.24.11.38.08.638.0 ]--
r 86         testSteque.push("There"); 
--[ 2019.09.24.11.38.08.705.0 ]--
r 86         testSteque.push("There");
--[ 2019.09.24.11.38.10.076.0 ]--
+ 88         
--[ 2019.09.24.11.38.11.575.0 ]--
r 88         ""
--[ 2019.09.24.11.38.12.665.0 ]--
r 88         
--[ 2019.09.24.11.38.34.644.0 ]--
r 88         t
--[ 2019.09.24.11.38.34.720.0 ]--
r 88         te
--[ 2019.09.24.11.38.34.840.0 ]--
r 88         tes
--[ 2019.09.24.11.38.34.927.0 ]--
r 88         test
--[ 2019.09.24.11.38.35.289.0 ]--
r 88         testSteque
--[ 2019.09.24.11.38.35.695.0 ]--
r 88         testSteque.
--[ 2019.09.24.11.38.36.121.0 ]--
r 88         testSteque.p
--[ 2019.09.24.11.38.36.188.0 ]--
r 88         testSteque.pu
--[ 2019.09.24.11.38.36.347.0 ]--
r 88         testSteque.puh
--[ 2019.09.24.11.38.36.607.0 ]--
r 88         testSteque.pu
--[ 2019.09.24.11.38.36.691.0 ]--
r 88         testSteque.pus
--[ 2019.09.24.11.38.36.756.0 ]--
r 88         testSteque.push
--[ 2019.09.24.11.38.37.390.0 ]--
r 88         testSteque.push()
--[ 2019.09.24.11.38.37.892.0 ]--
r 88         testSteque.push("")
--[ 2019.09.24.11.38.38.009.0 ]--
r 88         testSteque.push("G")
--[ 2019.09.24.11.38.38.188.0 ]--
r 88         testSteque.push("Ge")
--[ 2019.09.24.11.38.38.287.0 ]--
r 88         testSteque.push("Gen")
--[ 2019.09.24.11.38.38.324.0 ]--
r 88         testSteque.push("Gene")
--[ 2019.09.24.11.38.38.429.0 ]--
r 88         testSteque.push("Gener")
--[ 2019.09.24.11.38.38.529.0 ]--
r 88         testSteque.push("Genera")
--[ 2019.09.24.11.38.38.572.0 ]--
r 88         testSteque.push("General")
--[ 2019.09.24.11.38.39.921.0 ]--
r 88         testSteque.push("General");
--[ 2019.09.24.11.38.40.101.0 ]--
+ 89         
--[ 2019.09.24.11.38.44.706.0 ]--
- 90
- 90
r 90         
--[ 2019.09.24.11.38.46.667.0 ]--
r 87         testSteque.pop();\
--[ 2019.09.24.11.38.46.790.0 ]--
+ 87         testSteque.pop();\for(String s : testSteque){
+ 88             StdOut.println(s);
r 89         }
--[ 2019.09.24.11.38.47.485.0 ]--
- 87
- 87
r 87         testSteque.pop();\
--[ 2019.09.24.11.38.47.818.0 ]--
r 87         testSteque.pop();
--[ 2019.09.24.11.38.47.984.0 ]--
+ 88         
--[ 2019.09.24.11.38.48.207.0 ]--
+ 88         for(String s : testSteque){
+ 89             StdOut.println(s);
r 90         }
--[ 2019.09.24.11.39.03.766.0 ]--
r 92         t
--[ 2019.09.24.11.39.03.847.0 ]--
r 92         te
--[ 2019.09.24.11.39.03.971.0 ]--
r 92         tes
--[ 2019.09.24.11.39.04.077.0 ]--
r 92         test
--[ 2019.09.24.11.39.04.338.0 ]--
r 92         testSteque
--[ 2019.09.24.11.39.04.474.0 ]--
r 92         testSteque.
--[ 2019.09.24.11.39.04.903.0 ]--
r 92         testSteque.p
--[ 2019.09.24.11.39.04.978.0 ]--
r 92         testSteque.pu
--[ 2019.09.24.11.39.05.087.0 ]--
r 92         testSteque.pus
--[ 2019.09.24.11.39.05.157.0 ]--
r 92         testSteque.push
--[ 2019.09.24.11.39.05.670.0 ]--
r 92         testSteque.push()
--[ 2019.09.24.11.39.05.911.0 ]--
r 92         testSteque.push("")
--[ 2019.09.24.11.39.06.162.0 ]--
r 92         testSteque.push("K")
--[ 2019.09.24.11.39.06.285.0 ]--
r 92         testSteque.push("Ke")
--[ 2019.09.24.11.39.06.382.0 ]--
r 92         testSteque.push("Ken")
--[ 2019.09.24.11.39.06.477.0 ]--
r 92         testSteque.push("Keno")
--[ 2019.09.24.11.39.06.772.0 ]--
r 92         testSteque.push("Kenob")
--[ 2019.09.24.11.39.07.061.0 ]--
r 92         testSteque.push("Kenobi")
--[ 2019.09.24.11.39.07.327.0 ]--
r 92         testSteque.push("Kenobi ")
--[ 2019.09.24.11.39.07.391.0 ]--
r 92         testSteque.push("Kenobi")
--[ 2019.09.24.11.39.08.616.0 ]--
r 92         testSteque.push("Kenobi");
--[ 2019.09.24.11.39.11.100.0 ]--
+ 93         
--[ 2019.09.24.11.39.11.206.0 ]--
+ 93         for(String s : testSteque){
+ 94             StdOut.println(s);
r 95         }
--[ 2019.09.24.11.39.13.602.0 ]--
r 96 
--[ 2019.09.24.11.39.15.538.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.24.11.39.24.391.0 ]--
- 91
- 91
- 91
r 91         
--[ 2019.09.24.11.39.24.605.0 ]--
- 91
--[ 2019.09.24.11.39.25.097.0 ]--
r 90         } 
--[ 2019.09.24.11.39.25.181.0 ]--
r 90         }
--[ 2019.09.24.11.39.35.194.0 ]--
UpdateTree (AD): 0 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.35.194.1 ]--
CompilationStatus (AEW): 0 1 0
[Ljava.lang.String;@10ba14f9
--[ 2019.09.24.11.39.38.087.0 ]--
- 88
- 88
r 88         
--[ 2019.09.24.11.39.38.087.1 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.38.090.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.38.092.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.38.095.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.38.215.0 ]--
- 88
--[ 2019.09.24.11.39.38.216.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.38.218.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.38.738.0 ]--
r 87         testSteque.pop(); 
--[ 2019.09.24.11.39.38.739.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.38.742.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.38.812.0 ]--
r 87         testSteque.pop();
--[ 2019.09.24.11.39.38.812.1 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.38.813.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.40.736.0 ]--
- 91
--[ 2019.09.24.11.39.40.736.1 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.40.745.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.41.690.0 ]--
+ 91 }
--[ 2019.09.24.11.39.41.692.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.41.701.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.44.686.0 ]--
r 90     
--[ 2019.09.24.11.39.44.687.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.44.698.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.44.706.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.44.715.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.45.109.0 ]--
- 89
r 89         
--[ 2019.09.24.11.39.45.109.1 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.45.111.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.45.635.0 ]--
- 89
--[ 2019.09.24.11.39.45.636.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.45.638.0 ]--
UpdateTree (AD): 4 4
- /out/production/P02_DataTypes/Steque$1.class
- /out/production/P02_DataTypes/Steque$Node.class
- /out/production/P02_DataTypes/Steque.class
- /out/production/P02_DataTypes/Steque$StequeIterator.class
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.49.721.0 ]--
UpdateTree (AD): 4 0
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$1.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/Steque$StequeIterator.class

--[ 2019.09.24.11.39.49.721.1 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.24.11.39.51.762.0 ]--
+ 89 
+ 90     }
--[ 2019.09.24.11.39.52.380.0 ]--
r 87         testSteque.pop(); 
--[ 2019.09.24.11.39.52.518.0 ]--
r 87         testSteque.pop();
--[ 2019.09.24.11.39.52.691.0 ]--
+ 88         for(String s : testSteque){
+ 89             StdOut.println(s);
+ 90         }
--[ 2019.09.24.11.39.52.968.0 ]--
r 90         } 
--[ 2019.09.24.11.39.53.029.0 ]--
r 90         }
--[ 2019.09.24.11.39.53.243.0 ]--
+ 91         testSteque.push("General");
+ 92         testSteque.push("Kenobi");
+ 93         for(String s : testSteque){
+ 94             StdOut.println(s);
--[ 2019.09.24.11.39.53.483.0 ]--
- 93
- 93
r 93         
r 94         
--[ 2019.09.24.11.39.53.593.0 ]--
- 93
--[ 2019.09.24.11.39.53.653.0 ]--
r 92         testSteque.push("Kenobi")
--[ 2019.09.24.11.39.54.083.0 ]--
r 92         testSteque
--[ 2019.09.24.11.39.54.164.0 ]--
r 92         test
--[ 2019.09.24.11.39.54.313.0 ]--
r 92         
--[ 2019.09.24.11.39.54.564.0 ]--
- 88
- 88
r 88         
--[ 2019.09.24.11.39.54.691.0 ]--
- 88
--[ 2019.09.24.11.39.54.836.0 ]--
r 87         testSteque.pop();\
--[ 2019.09.24.11.39.54.984.0 ]--
r 87         testSteque.pop();
--[ 2019.09.24.11.39.55.556.0 ]--
+ 90         for(String s : testSteque){
+ 91             StdOut.println(s);
r 92         }
--[ 2019.09.24.11.39.56.233.0 ]--
- 89
--[ 2019.09.24.11.39.56.390.0 ]--
r 88         testSteque.push("General")
--[ 2019.09.24.11.39.56.660.0 ]--
r 88         testSteque.pu
--[ 2019.09.24.11.39.56.799.0 ]--
r 88         testSteque.puh
--[ 2019.09.24.11.39.56.932.0 ]--
r 88         testSteque
--[ 2019.09.24.11.39.57.077.0 ]--
r 88         test
--[ 2019.09.24.11.39.57.362.0 ]--
r 88         ""
--[ 2019.09.24.11.39.57.476.0 ]--
r 88         
--[ 2019.09.24.11.39.57.644.0 ]--
- 88
--[ 2019.09.24.11.39.58.098.0 ]--
r 86         testSteque.push("There"); 
--[ 2019.09.24.11.39.58.285.0 ]--
r 86         testSteque.push("There");
--[ 2019.09.24.11.39.58.547.0 ]--
r 90         } 
--[ 2019.09.24.11.39.58.684.0 ]--
r 90         }
--[ 2019.09.24.11.39.58.847.0 ]--
- 88
- 88
r 88         
--[ 2019.09.24.11.39.59.047.0 ]--
- 88
--[ 2019.09.24.11.40.00.240.0 ]--
- 60
--[ 2019.09.24.11.40.01.997.0 ]--
- 59
--[ 2019.09.24.11.40.03.213.0 ]--
- 60
--[ 2019.09.24.11.40.03.974.0 ]--
- 60
--[ 2019.09.24.11.40.04.421.0 ]--
+ 59 
+ 60     }
+ 62     // returns new Iterator<Item> that iterates over items in steque
+ 63     @Override
--[ 2019.09.24.11.40.04.943.0 ]--
+ 59 
+ 60     }
+ 62     public void printSteque(Steque steque){
+ 63         
--[ 2019.09.24.11.40.06.601.0 ]--
- 62
- 62
r 62     publ
--[ 2019.09.24.11.40.06.764.0 ]--
r 62     pub
--[ 2019.09.24.11.40.06.900.0 ]--
r 62     pu
--[ 2019.09.24.11.40.07.031.0 ]--
r 62     p
--[ 2019.09.24.11.40.07.176.0 ]--
r 62     
--[ 2019.09.24.11.40.07.340.0 ]--
- 61
--[ 2019.09.24.11.40.07.565.0 ]--
- 61
--[ 2019.09.24.11.40.07.974.0 ]--
r 60     } 
--[ 2019.09.24.11.40.08.062.0 ]--
r 60     }
--[ 2019.09.24.11.40.11.783.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.24.11.40.12.103.0 ]--
+ 88         
--[ 2019.09.24.11.40.12.226.0 ]--
+ 88         for(String s : testSteque){
+ 89             StdOut.println(s);
r 90         }
--[ 2019.09.24.11.40.16.246.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.24.17.08.16.356.0 ]--
DisposeComponent
--[ 2019.09.25.12.46.55.049.0 ]--
NewLogger: P02_DataTypes
Version: 1.3
--[ 2019.09.25.12.46.55.215.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$1.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/out/production/P02_DataTypes/Steque$StequeIterator.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/dictionaries/ccollier.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2019.09.25.12.46.55.216.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2019.09.25.12.46.55.216.1 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    private Node top,bottom;
    private int N = 1;

    public Steque() {

    }
    private class Node{
        Item item;
        Node next;
    }
    // returns the number of items stored
    public int size() {
        return N;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return top == null;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {
        Node oldbottom = bottom;
        bottom = new Node();
        bottom.item = item;
        bottom.next = null;
        if(isEmpty()){
            top = bottom;
        }
        else{
            oldbottom.next = bottom;
        }

    }

    // pushes item to top of steque
    public void push(Item item) {
        Node oldtop = top;
        top = new Node();
        top.item = item;
        top.next = oldtop;
        N++;
    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        if(isEmpty()){
            throw new NoSuchElementException();
        }
        Item item = top.item;
        top = top.next;
        N--;
        return item;

    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return new StequeIterator();
    }

    private class StequeIterator implements Iterator<Item>{
        private Node current = top;

        public boolean hasNext() {return current != null;}

        public void remove() {throw new UnsupportedOperationException();}

        public Item next(){
            Item item = current.item;
            current = current.next;
            return item;
        }
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {
        Steque<String> testSteque = new Steque<>();
        testSteque.push("Hello");
        testSteque.push("There");
        testSteque.pop();
        for(String s : testSteque){
            StdOut.println(s);
        }
    }
}

--[ 2019.09.25.12.46.55.217.0 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2019.09.25.12.46.55.217.1 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2019.09.25.12.46.55.217.2 ]--
InitFile: /.cos265


--[ 2019.09.25.12.56.34.572.0 ]--
:/src/Steque.java
+ 91         
--[ 2019.09.25.12.56.35.485.0 ]--
- 91
--[ 2019.09.25.12.56.39.898.0 ]--
r 87         tes
--[ 2019.09.25.12.56.40.056.0 ]--
r 87         test
--[ 2019.09.25.12.56.40.202.0 ]--
r 87         testS
--[ 2019.09.25.12.56.40.317.0 ]--
r 87         testSt
--[ 2019.09.25.12.56.40.461.0 ]--
r 87         testStq
--[ 2019.09.25.12.56.41.074.0 ]--
r 87         testSt
--[ 2019.09.25.12.56.41.162.0 ]--
r 87         testSte
--[ 2019.09.25.12.56.41.654.0 ]--
r 87         testSteque
--[ 2019.09.25.12.56.41.724.0 ]--
r 87         testSteque.
--[ 2019.09.25.12.56.42.238.0 ]--
r 87         testSteque.n
--[ 2019.09.25.12.56.42.417.0 ]--
r 87         testSteque.
--[ 2019.09.25.12.56.42.509.0 ]--
r 87         testSteque.e
--[ 2019.09.25.12.56.42.585.0 ]--
r 87         testSteque.en
--[ 2019.09.25.12.56.42.892.0 ]--
r 87         testSteque.enc
--[ 2019.09.25.12.56.43.110.0 ]--
+ 88         
--[ 2019.09.25.12.56.43.214.0 ]--
r 88                 
--[ 2019.09.25.12.56.43.723.0 ]--
- 88
--[ 2019.09.25.12.56.43.797.0 ]--
r 87         testSteque.en
--[ 2019.09.25.12.56.44.274.0 ]--
r 87         testSteque.enq
--[ 2019.09.25.12.56.45.013.0 ]--
r 87         testSteque.enqueue
--[ 2019.09.25.12.56.45.043.0 ]--
r 87         testSteque.enqueue()
--[ 2019.09.25.12.56.45.052.0 ]--
r 87         testSteque.enqueue();
--[ 2019.09.25.12.56.45.453.0 ]--
r 87         testSteque.enqueue("");
--[ 2019.09.25.12.56.45.962.0 ]--
r 87         testSteque.enqueue("A");
--[ 2019.09.25.12.56.46.112.0 ]--
r 87         testSteque.enqueue("Ah");
--[ 2019.09.25.12.56.46.463.0 ]--
r 87         testSteque.enqueue("Ah ");
--[ 2019.09.25.12.56.46.528.0 ]--
r 87         testSteque.enqueue("Ah");
--[ 2019.09.25.12.56.52.957.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.25.12.57.09.465.0 ]--
r 87         
--[ 2019.09.25.12.57.09.568.0 ]--
- 87
--[ 2019.09.25.12.57.15.775.0 ]--
r 86         testSteque.push("There"); 
--[ 2019.09.25.12.57.15.898.0 ]--
r 86         testSteque.push("There");
--[ 2019.09.25.12.57.19.133.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.25.12.57.25.295.0 ]--
DisposeComponent
--[ 2019.09.25.13.56.24.176.0 ]--
NewLogger: P02_DataTypes
Version: 1.3
--[ 2019.09.25.13.56.24.209.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$1.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/out/production/P02_DataTypes/Steque$StequeIterator.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/dictionaries/ccollier.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2019.09.25.13.56.24.209.1 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2019.09.25.13.56.24.210.0 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    private Node top,bottom;
    private int N = 1;

    public Steque() {

    }
    private class Node{
        Item item;
        Node next;
    }
    // returns the number of items stored
    public int size() {
        return N;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return top == null;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {
        Node oldbottom = bottom;
        bottom = new Node();
        bottom.item = item;
        bottom.next = null;
        if(isEmpty()){
            top = bottom;
        }
        else{
            oldbottom.next = bottom;
        }

    }

    // pushes item to top of steque
    public void push(Item item) {
        Node oldtop = top;
        top = new Node();
        top.item = item;
        top.next = oldtop;
        N++;
    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        if(isEmpty()){
            throw new NoSuchElementException();
        }
        Item item = top.item;
        top = top.next;
        N--;
        return item;

    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return new StequeIterator();
    }

    private class StequeIterator implements Iterator<Item>{
        private Node current = top;

        public boolean hasNext() {return current != null;}

        public void remove() {throw new UnsupportedOperationException();}

        public Item next(){
            Item item = current.item;
            current = current.next;
            return item;
        }
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {
        Steque<String> testSteque = new Steque<>();
        testSteque.push("Hello");
        testSteque.push("There");
        for(String s : testSteque){
            StdOut.println(s);
        }
    }
}

--[ 2019.09.25.13.56.24.210.1 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2019.09.25.13.56.24.210.2 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2019.09.25.13.56.24.210.3 ]--
InitFile: /.cos265


--[ 2019.09.25.19.12.26.031.0 ]--
DisposeComponent
--[ 2019.09.30.13.58.52.383.0 ]--
NewLogger: P02_DataTypes
Version: 1.3
--[ 2019.09.30.13.58.52.919.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$1.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/out/production/P02_DataTypes/Steque$StequeIterator.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/dictionaries/ccollier.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2019.09.30.13.58.52.920.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2019.09.30.13.58.52.920.1 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    private Node top,bottom;
    private int N = 1;

    public Steque() {

    }
    private class Node{
        Item item;
        Node next;
    }
    // returns the number of items stored
    public int size() {
        return N;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return top == null;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {
        Node oldbottom = bottom;
        bottom = new Node();
        bottom.item = item;
        bottom.next = null;
        if(isEmpty()){
            top = bottom;
        }
        else{
            oldbottom.next = bottom;
        }

    }

    // pushes item to top of steque
    public void push(Item item) {
        Node oldtop = top;
        top = new Node();
        top.item = item;
        top.next = oldtop;
        N++;
    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        if(isEmpty()){
            throw new NoSuchElementException();
        }
        Item item = top.item;
        top = top.next;
        N--;
        return item;

    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return new StequeIterator();
    }

    private class StequeIterator implements Iterator<Item>{
        private Node current = top;

        public boolean hasNext() {return current != null;}

        public void remove() {throw new UnsupportedOperationException();}

        public Item next(){
            Item item = current.item;
            current = current.next;
            return item;
        }
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {
        Steque<String> testSteque = new Steque<>();
        testSteque.push("Hello");
        testSteque.push("There");
        for(String s : testSteque){
            StdOut.println(s);
        }
    }
}

--[ 2019.09.30.13.58.52.920.2 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2019.09.30.13.58.52.921.0 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2019.09.30.13.58.52.921.1 ]--
InitFile: /.cos265


--[ 2019.09.30.14.00.21.672.0 ]--
:/src/Steque.java
r 85         testSteque.enqu("Hello");
--[ 2019.09.30.14.00.22.330.0 ]--
r 85         testSteque.enquu("Hello");
--[ 2019.09.30.14.00.22.375.0 ]--
r 85         testSteque.enquue("Hello");
--[ 2019.09.30.14.00.23.167.0 ]--
r 85         testSteque.enquu("Hello");
--[ 2019.09.30.14.00.23.266.0 ]--
r 85         testSteque.enqu("Hello");
--[ 2019.09.30.14.00.24.203.0 ]--
r 85         testSteque.enque("Hello");
--[ 2019.09.30.14.00.24.337.0 ]--
r 85         testSteque.enqueu("Hello");
--[ 2019.09.30.14.00.24.352.0 ]--
r 85         testSteque.enqueue("Hello");
--[ 2019.09.30.14.00.28.888.0 ]--
r 86         testSteque.e("There");
--[ 2019.09.30.14.00.28.980.0 ]--
r 86         testSteque.en("There");
--[ 2019.09.30.14.00.29.115.0 ]--
r 86         testSteque.enq("There");
--[ 2019.09.30.14.00.29.219.0 ]--
r 86         testSteque.enqu("There");
--[ 2019.09.30.14.00.29.676.0 ]--
r 86         testSteque.enque("There");
--[ 2019.09.30.14.00.29.746.0 ]--
r 86         testSteque.enqueu("There");
--[ 2019.09.30.14.00.29.803.0 ]--
r 86         testSteque.enqueue("There");
--[ 2019.09.30.14.00.36.820.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.30.14.01.26.576.0 ]--
DisposeComponent
--[ 2019.09.30.14.05.28.727.0 ]--
NewLogger: P02_DataTypes
Version: 1.3
--[ 2019.09.30.14.05.28.761.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$1.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/out/production/P02_DataTypes/Steque$StequeIterator.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/dictionaries/ccollier.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2019.09.30.14.05.28.762.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2019.09.30.14.05.28.762.1 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    private Node top,bottom;
    private int N = 1;

    public Steque() {

    }
    private class Node{
        Item item;
        Node next;
    }
    // returns the number of items stored
    public int size() {
        return N;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return top == null;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {
        Node oldbottom = bottom;
        bottom = new Node();
        bottom.item = item;
        bottom.next = null;
        if(isEmpty()){
            top = bottom;
        }
        else{
            oldbottom.next = bottom;
        }

    }

    // pushes item to top of steque
    public void push(Item item) {
        Node oldtop = top;
        top = new Node();
        top.item = item;
        top.next = oldtop;
        N++;
    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        if(isEmpty()){
            throw new NoSuchElementException();
        }
        Item item = top.item;
        top = top.next;
        N--;
        return item;

    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return new StequeIterator();
    }

    private class StequeIterator implements Iterator<Item>{
        private Node current = top;

        public boolean hasNext() {return current != null;}

        public void remove() {throw new UnsupportedOperationException();}

        public Item next(){
            Item item = current.item;
            current = current.next;
            return item;
        }
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {
        Steque<String> testSteque = new Steque<>();
        testSteque.enqueue("Hello");
        testSteque.enqueue("There");
        for(String s : testSteque){
            StdOut.println(s);
        }
    }
}

--[ 2019.09.30.14.05.28.762.2 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2019.09.30.14.05.28.762.3 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2019.09.30.14.05.28.763.0 ]--
InitFile: /.cos265


--[ 2019.09.30.14.05.43.048.0 ]--
DisposeComponent
--[ 2019.09.30.16.54.38.600.0 ]--
NewLogger: P02_DataTypes
Version: 1.3
--[ 2019.09.30.16.54.38.635.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$1.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/out/production/P02_DataTypes/Steque$StequeIterator.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/dictionaries/ccollier.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2019.09.30.16.54.38.635.1 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2019.09.30.16.54.38.635.2 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    private Node top,bottom;
    private int N = 1;

    public Steque() {

    }
    private class Node{
        Item item;
        Node next;
    }
    // returns the number of items stored
    public int size() {
        return N;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return top == null;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {
        Node oldbottom = bottom;
        bottom = new Node();
        bottom.item = item;
        bottom.next = null;
        if(isEmpty()){
            top = bottom;
        }
        else{
            oldbottom.next = bottom;
        }

    }

    // pushes item to top of steque
    public void push(Item item) {
        Node oldtop = top;
        top = new Node();
        top.item = item;
        top.next = oldtop;
        N++;
    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        if(isEmpty()){
            throw new NoSuchElementException();
        }
        Item item = top.item;
        top = top.next;
        N--;
        return item;

    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return new StequeIterator();
    }

    private class StequeIterator implements Iterator<Item>{
        private Node current = top;

        public boolean hasNext() {return current != null;}

        public void remove() {throw new UnsupportedOperationException();}

        public Item next(){
            Item item = current.item;
            current = current.next;
            return item;
        }
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {
        Steque<String> testSteque = new Steque<>();
        testSteque.enqueue("Hello");
        testSteque.enqueue("There");
        for(String s : testSteque){
            StdOut.println(s);
        }
    }
}

--[ 2019.09.30.16.54.38.635.3 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2019.09.30.16.54.38.636.0 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2019.09.30.16.54.38.636.1 ]--
InitFile: /.cos265


--[ 2019.09.30.16.55.08.366.0 ]--
:/src/Steque.java
r 85         testSteque.("Hello");
--[ 2019.09.30.16.55.08.451.0 ]--
r 85         testSteque.p("Hello");
--[ 2019.09.30.16.55.08.878.0 ]--
r 85         testSteque.pp("Hello");
--[ 2019.09.30.16.55.08.955.0 ]--
r 85         testSteque.ppo("Hello");
--[ 2019.09.30.16.55.09.347.0 ]--
r 85         testSteque.pp("Hello");
--[ 2019.09.30.16.55.09.567.0 ]--
r 85         testSteque.p("Hello");
--[ 2019.09.30.16.55.09.981.0 ]--
r 85         testSteque.pu("Hello");
--[ 2019.09.30.16.55.10.043.0 ]--
r 85         testSteque.pus("Hello");
--[ 2019.09.30.16.55.10.090.0 ]--
r 85         testSteque.push("Hello");
--[ 2019.09.30.16.55.10.212.0 ]--
r 85         testSteque.push ("Hello");
--[ 2019.09.30.16.55.10.278.0 ]--
r 85         testSteque.push("Hello");
--[ 2019.09.30.16.55.17.289.0 ]--
r 85         testSteque.e("Hello");
--[ 2019.09.30.16.55.17.391.0 ]--
r 85         testSteque.en("Hello");
--[ 2019.09.30.16.55.17.611.0 ]--
r 85         testSteque.enq("Hello");
--[ 2019.09.30.16.55.17.681.0 ]--
r 85         testSteque.enqu("Hello");
--[ 2019.09.30.16.55.17.913.0 ]--
r 85         testSteque.enquue("Hello");
--[ 2019.09.30.16.55.18.792.0 ]--
r 85         testSteque.enquu("Hello");
--[ 2019.09.30.16.55.18.897.0 ]--
r 85         testSteque.enqu("Hello");
--[ 2019.09.30.16.55.19.171.0 ]--
r 85         testSteque.enquu("Hello");
--[ 2019.09.30.16.55.19.223.0 ]--
r 85         testSteque.enquue("Hello");
--[ 2019.09.30.16.55.23.953.0 ]--
r 85         testSteque.enqueue("Hello");
--[ 2019.09.30.16.55.28.943.0 ]--
r 85         testSteque.enqueue("K");
--[ 2019.09.30.16.55.29.053.0 ]--
r 85         testSteque.enqueue("Ke");
--[ 2019.09.30.16.55.29.146.0 ]--
r 85         testSteque.enqueue("Ken");
--[ 2019.09.30.16.55.29.219.0 ]--
r 85         testSteque.enqueue("Keno");
--[ 2019.09.30.16.55.29.378.0 ]--
r 85         testSteque.enqueue("Kenob");
--[ 2019.09.30.16.55.29.434.0 ]--
r 85         testSteque.enqueue("Kenobi");
--[ 2019.09.30.16.55.32.497.0 ]--
r 86         testSteque.p("There");
--[ 2019.09.30.16.55.32.607.0 ]--
r 86         testSteque.pu("There");
--[ 2019.09.30.16.55.32.726.0 ]--
r 86         testSteque.pus("There");
--[ 2019.09.30.16.55.32.775.0 ]--
r 86         testSteque.push("There");
--[ 2019.09.30.16.55.34.689.0 ]--
r 86         testSteque.push("H");
--[ 2019.09.30.16.55.34.816.0 ]--
r 86         testSteque.push("He");
--[ 2019.09.30.16.55.34.907.0 ]--
r 86         testSteque.push("Hel");
--[ 2019.09.30.16.55.35.014.0 ]--
r 86         testSteque.push("Hell");
--[ 2019.09.30.16.55.35.160.0 ]--
r 86         testSteque.push("Hello");
--[ 2019.09.30.16.55.40.796.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.30.16.55.43.636.0 ]--
+ 87         
--[ 2019.09.30.16.55.44.396.0 ]--
r 87         p
--[ 2019.09.30.16.55.44.440.0 ]--
r 87         pu
--[ 2019.09.30.16.55.44.539.0 ]--
r 87         pus
--[ 2019.09.30.16.55.44.641.0 ]--
r 87         push
--[ 2019.09.30.16.55.45.662.0 ]--
r 87         push 
--[ 2019.09.30.16.55.45.730.0 ]--
r 87         push
--[ 2019.09.30.16.55.45.885.0 ]--
r 87         pus
--[ 2019.09.30.16.55.46.006.0 ]--
r 87         pu
--[ 2019.09.30.16.55.46.092.0 ]--
r 87         p
--[ 2019.09.30.16.55.46.201.0 ]--
r 87         
--[ 2019.09.30.16.55.46.280.0 ]--
r 87         t
--[ 2019.09.30.16.55.46.337.0 ]--
r 87         te
--[ 2019.09.30.16.55.46.486.0 ]--
r 87         tes
--[ 2019.09.30.16.55.46.571.0 ]--
r 87         test
--[ 2019.09.30.16.55.47.190.0 ]--
r 87         testSteque
--[ 2019.09.30.16.55.47.335.0 ]--
r 87         testSteque.
--[ 2019.09.30.16.55.47.625.0 ]--
r 87         testSteque.p
--[ 2019.09.30.16.55.47.713.0 ]--
r 87         testSteque.pu
--[ 2019.09.30.16.55.47.808.0 ]--
r 87         testSteque.pus
--[ 2019.09.30.16.55.47.894.0 ]--
r 87         testSteque.push
--[ 2019.09.30.16.55.48.057.0 ]--
r 87         testSteque.push()
--[ 2019.09.30.16.55.48.391.0 ]--
r 87         testSteque.push("")
--[ 2019.09.30.16.55.48.896.0 ]--
r 87         testSteque.push("T")
--[ 2019.09.30.16.55.49.054.0 ]--
r 87         testSteque.push("Th")
--[ 2019.09.30.16.55.49.087.0 ]--
r 87         testSteque.push("The")
--[ 2019.09.30.16.55.49.160.0 ]--
r 87         testSteque.push("Ther")
--[ 2019.09.30.16.55.49.248.0 ]--
r 87         testSteque.push("There")
--[ 2019.09.30.16.55.49.946.0 ]--
r 87         testSteque.push("There");
--[ 2019.09.30.16.55.53.668.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.30.16.55.56.876.0 ]--
+ 88         
--[ 2019.09.30.16.55.58.950.0 ]--
r 88          
--[ 2019.09.30.16.55.59.022.0 ]--
r 88         
--[ 2019.09.30.16.55.59.519.0 ]--
- 88
--[ 2019.09.30.16.55.59.593.0 ]--
r 87         testSteque.push("There")
--[ 2019.09.30.16.56.00.382.0 ]--
r 87         testSteque.push("There"
--[ 2019.09.30.16.56.00.487.0 ]--
r 87         testSteque.push(
--[ 2019.09.30.16.56.00.587.0 ]--
r 87         testSteque.push
--[ 2019.09.30.16.56.00.701.0 ]--
r 87         testSteque.
--[ 2019.09.30.16.56.01.355.0 ]--
r 87         testSteque.e
--[ 2019.09.30.16.56.01.476.0 ]--
r 87         testSteque.en
--[ 2019.09.30.16.56.01.577.0 ]--
r 87         testSteque.enq
--[ 2019.09.30.16.56.01.713.0 ]--
r 87         testSteque.enqu
--[ 2019.09.30.16.56.01.822.0 ]--
r 87         testSteque.enquu
--[ 2019.09.30.16.56.01.935.0 ]--
r 87         testSteque.enquue
--[ 2019.09.30.16.56.02.404.0 ]--
r 87         testSteque.enquu
--[ 2019.09.30.16.56.02.475.0 ]--
r 87         testSteque.enqu
--[ 2019.09.30.16.56.02.710.0 ]--
r 87         testSteque.enque
--[ 2019.09.30.16.56.02.786.0 ]--
r 87         testSteque.enqueu
--[ 2019.09.30.16.56.02.884.0 ]--
r 87         testSteque.enqueue
--[ 2019.09.30.16.56.04.755.0 ]--
r 87         testSteque.enqueue()
--[ 2019.09.30.16.56.05.400.0 ]--
r 87         testSteque.enqueue("")
--[ 2019.09.30.16.56.07.044.0 ]--
r 87         testSteque.enqueue("G")
--[ 2019.09.30.16.56.07.160.0 ]--
r 87         testSteque.enqueue("Ge")
--[ 2019.09.30.16.56.07.234.0 ]--
r 87         testSteque.enqueue("Gen")
--[ 2019.09.30.16.56.07.304.0 ]--
r 87         testSteque.enqueue("Gene")
--[ 2019.09.30.16.56.07.936.0 ]--
r 87         testSteque.enqueue("Gener")
--[ 2019.09.30.16.56.08.007.0 ]--
r 87         testSteque.enqueue("Genera")
--[ 2019.09.30.16.56.08.089.0 ]--
r 87         testSteque.enqueue("General")
--[ 2019.09.30.16.56.08.693.0 ]--
r 87         testSteque.enqueue()
--[ 2019.09.30.16.56.09.552.0 ]--
r 87         testSteque.enqueue("")
--[ 2019.09.30.16.56.09.642.0 ]--
r 87         testSteque.enqueue("T")
--[ 2019.09.30.16.56.09.764.0 ]--
r 87         testSteque.enqueue("Th")
--[ 2019.09.30.16.56.09.814.0 ]--
r 87         testSteque.enqueue("The")
--[ 2019.09.30.16.56.09.887.0 ]--
r 87         testSteque.enqueue("Ther")
--[ 2019.09.30.16.56.09.957.0 ]--
r 87         testSteque.enqueue("There")
--[ 2019.09.30.16.56.10.954.0 ]--
r 87         testSteque.enqueue("There");
--[ 2019.09.30.16.56.14.320.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.30.16.56.21.364.0 ]--
r 87         /testSteque.enqueue("There");
--[ 2019.09.30.16.56.21.453.0 ]--
r 87         //testSteque.enqueue("There");
--[ 2019.09.30.16.56.22.158.0 ]--
r 86         /testSteque.push("Hello");
--[ 2019.09.30.16.56.22.219.0 ]--
r 86         //testSteque.push("Hello");
--[ 2019.09.30.16.56.22.785.0 ]--
r 85         /testSteque.enqueue("Kenobi");
--[ 2019.09.30.16.56.23.390.0 ]--
r 85         //testSteque.enqueue("Kenobi");
--[ 2019.09.30.16.56.25.871.0 ]--
+ 88         
--[ 2019.09.30.16.56.28.084.0 ]--
r 88         s
--[ 2019.09.30.16.56.28.340.0 ]--
r 88         
--[ 2019.09.30.16.56.28.368.0 ]--
r 88         t
--[ 2019.09.30.16.56.28.556.0 ]--
r 88         ts
--[ 2019.09.30.16.56.28.822.0 ]--
r 88         t
--[ 2019.09.30.16.56.28.940.0 ]--
r 88         te
--[ 2019.09.30.16.56.29.215.0 ]--
r 88         tet
--[ 2019.09.30.16.56.29.763.0 ]--
r 88         te
--[ 2019.09.30.16.56.30.011.0 ]--
r 88         tes
--[ 2019.09.30.16.56.31.509.0 ]--
- 85
- 85
- 85
r 85         //t
--[ 2019.09.30.16.56.31.594.0 ]--
r 85         //
--[ 2019.09.30.16.56.31.806.0 ]--
r 85         /
--[ 2019.09.30.16.56.31.946.0 ]--
r 85         
--[ 2019.09.30.16.56.32.068.0 ]--
r 85         t
--[ 2019.09.30.16.56.32.122.0 ]--
r 85         te
--[ 2019.09.30.16.56.32.264.0 ]--
r 85         tes
--[ 2019.09.30.16.56.32.395.0 ]--
r 85         test
--[ 2019.09.30.16.56.32.853.0 ]--
r 85         test 
--[ 2019.09.30.16.56.32.893.0 ]--
r 85         test
--[ 2019.09.30.16.56.33.223.0 ]--
r 85         tes
--[ 2019.09.30.16.56.34.200.0 ]--
r 85         test
--[ 2019.09.30.16.56.34.431.0 ]--
r 85         test.
--[ 2019.09.30.16.56.34.954.0 ]--
r 85         test
--[ 2019.09.30.16.56.35.161.0 ]--
r 85         testS
--[ 2019.09.30.16.56.35.373.0 ]--
r 85         testSt
--[ 2019.09.30.16.56.35.586.0 ]--
r 85         testSteque
--[ 2019.09.30.16.56.35.769.0 ]--
r 85         testSteque.
--[ 2019.09.30.16.56.36.116.0 ]--
r 85         testSteque.p
--[ 2019.09.30.16.56.36.174.0 ]--
r 85         testSteque.pu
--[ 2019.09.30.16.56.36.687.0 ]--
r 85         testSteque.pus
--[ 2019.09.30.16.56.36.771.0 ]--
r 85         testSteque.push
--[ 2019.09.30.16.56.44.472.0 ]--
r 85         testSteque.push 
--[ 2019.09.30.16.56.44.529.0 ]--
r 85         testSteque.push
--[ 2019.09.30.16.56.44.932.0 ]--
r 85         testSteque.push()
--[ 2019.09.30.16.56.45.145.0 ]--
r 85         testSteque.push("")
--[ 2019.09.30.16.56.45.327.0 ]--
r 85         testSteque.push("H")
--[ 2019.09.30.16.56.45.471.0 ]--
r 85         testSteque.push("He")
--[ 2019.09.30.16.56.45.564.0 ]--
r 85         testSteque.push("Hel")
--[ 2019.09.30.16.56.45.691.0 ]--
r 85         testSteque.push("Hell")
--[ 2019.09.30.16.56.45.812.0 ]--
r 85         testSteque.push("Hello")
--[ 2019.09.30.16.56.46.725.0 ]--
r 85         testSteque.push("Hello");
--[ 2019.09.30.16.56.46.934.0 ]--
+ 86         
--[ 2019.09.30.16.56.47.479.0 ]--
r 86         t
--[ 2019.09.30.16.56.47.575.0 ]--
r 86         te
--[ 2019.09.30.16.56.47.690.0 ]--
r 86         tes
--[ 2019.09.30.16.56.47.820.0 ]--
r 86         test
--[ 2019.09.30.16.56.48.280.0 ]--
r 86         testSteque
--[ 2019.09.30.16.56.48.543.0 ]--
r 86         testSteque.
--[ 2019.09.30.16.56.49.180.0 ]--
r 86         testSteque.p
--[ 2019.09.30.16.56.49.216.0 ]--
r 86         testSteque.pu
--[ 2019.09.30.16.56.49.240.0 ]--
r 86         testSteque.pus
--[ 2019.09.30.16.56.49.319.0 ]--
r 86         testSteque.push
--[ 2019.09.30.16.56.49.629.0 ]--
r 86         testSteque.push""
--[ 2019.09.30.16.56.50.070.0 ]--
r 86         testSteque.push
--[ 2019.09.30.16.56.50.397.0 ]--
r 86         testSteque.push()
--[ 2019.09.30.16.56.50.625.0 ]--
r 86         testSteque.push("")
--[ 2019.09.30.16.56.50.795.0 ]--
r 86         testSteque.push("T")
--[ 2019.09.30.16.56.50.907.0 ]--
r 86         testSteque.push("Th")
--[ 2019.09.30.16.56.50.959.0 ]--
r 86         testSteque.push("The")
--[ 2019.09.30.16.56.51.027.0 ]--
r 86         testSteque.push("Ther")
--[ 2019.09.30.16.56.51.133.0 ]--
r 86         testSteque.push("There")
--[ 2019.09.30.16.56.51.977.0 ]--
r 86         testSteque.push("There");
--[ 2019.09.30.16.56.53.761.0 ]--
+ 87         
--[ 2019.09.30.16.56.54.752.0 ]--
r 87         t
--[ 2019.09.30.16.56.54.839.0 ]--
r 87         te
--[ 2019.09.30.16.56.54.890.0 ]--
r 87         tes
--[ 2019.09.30.16.56.54.998.0 ]--
r 87         test
--[ 2019.09.30.16.56.55.318.0 ]--
r 87         test>
--[ 2019.09.30.16.56.55.694.0 ]--
r 87         test
--[ 2019.09.30.16.56.55.839.0 ]--
r 87         testS
--[ 2019.09.30.16.56.55.999.0 ]--
r 87         testSt
--[ 2019.09.30.16.56.56.233.0 ]--
r 87         testSteque
--[ 2019.09.30.16.56.56.341.0 ]--
r 87         testSteque.
--[ 2019.09.30.16.56.56.936.0 ]--
r 87         testSteque.e
--[ 2019.09.30.16.56.56.991.0 ]--
r 87         testSteque.en
--[ 2019.09.30.16.56.57.181.0 ]--
r 87         testSteque.enqueue
--[ 2019.09.30.16.56.57.190.0 ]--
r 87         testSteque.enqueue()
--[ 2019.09.30.16.56.57.195.0 ]--
r 87         testSteque.enqueue();
--[ 2019.09.30.16.56.57.744.0 ]--
r 87         testSteque.enqueue("");
--[ 2019.09.30.16.56.58.463.0 ]--
r 87         testSteque.enqueue("K");
--[ 2019.09.30.16.56.58.600.0 ]--
r 87         testSteque.enqueue("Ke");
--[ 2019.09.30.16.56.59.085.0 ]--
r 87         testSteque.enqueue("Ken");
--[ 2019.09.30.16.56.59.164.0 ]--
r 87         testSteque.enqueue("Keno");
--[ 2019.09.30.16.56.59.260.0 ]--
r 87         testSteque.enqueue("Kenob");
--[ 2019.09.30.16.56.59.348.0 ]--
r 87         testSteque.enqueue("Kenobi");
--[ 2019.09.30.16.57.04.211.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.30.17.03.15.787.0 ]--
r 46         top.next = oldtop; 
--[ 2019.09.30.17.03.15.816.0 ]--
r 46         top.next = oldtop;
--[ 2019.09.30.17.03.17.332.0 ]--
+ 46         
--[ 2019.09.30.17.03.18.030.0 ]--
r 46         i
--[ 2019.09.30.17.03.18.149.0 ]--
r 46         if
--[ 2019.09.30.17.03.18.295.0 ]--
r 46         if()
--[ 2019.09.30.17.03.18.734.0 ]--
r 46         if(i)
--[ 2019.09.30.17.03.18.838.0 ]--
r 46         if(is)
--[ 2019.09.30.17.03.19.115.0 ]--
r 46         if(isE)
--[ 2019.09.30.17.03.19.230.0 ]--
r 46         if(isEm)
--[ 2019.09.30.17.03.19.347.0 ]--
r 46         if(isEmp)
--[ 2019.09.30.17.03.19.434.0 ]--
r 46         if(isEmpt)
--[ 2019.09.30.17.03.19.554.0 ]--
r 46         if(isEmpty)
--[ 2019.09.30.17.03.19.714.0 ]--
r 46         if(isEmpty())
--[ 2019.09.30.17.03.20.235.0 ]--
r 46         if(isEmpty()){}
--[ 2019.09.30.17.03.20.364.0 ]--
+ 46         if (isEmpty()) {
r 47         }
--[ 2019.09.30.17.03.20.415.0 ]--
+ 47             
--[ 2019.09.30.17.03.22.735.0 ]--
r 47             t
--[ 2019.09.30.17.03.22.781.0 ]--
r 47             to
--[ 2019.09.30.17.03.22.914.0 ]--
r 47             top
--[ 2019.09.30.17.03.23.207.0 ]--
r 47             to
--[ 2019.09.30.17.03.23.282.0 ]--
r 47             t
--[ 2019.09.30.17.03.23.397.0 ]--
r 47             
--[ 2019.09.30.17.03.23.466.0 ]--
r 47             b
--[ 2019.09.30.17.03.23.605.0 ]--
r 47             bo
--[ 2019.09.30.17.03.23.677.0 ]--
r 47             bot
--[ 2019.09.30.17.03.23.800.0 ]--
r 47             bott
--[ 2019.09.30.17.03.23.879.0 ]--
r 47             botto
--[ 2019.09.30.17.03.23.956.0 ]--
r 47             bottom
--[ 2019.09.30.17.03.24.042.0 ]--
r 47             bottom 
--[ 2019.09.30.17.03.24.141.0 ]--
r 47             bottom =
--[ 2019.09.30.17.03.24.203.0 ]--
r 47             bottom = 
--[ 2019.09.30.17.03.24.476.0 ]--
r 47             bottom = t
--[ 2019.09.30.17.03.24.558.0 ]--
r 47             bottom = to
--[ 2019.09.30.17.03.24.662.0 ]--
r 47             bottom = top
--[ 2019.09.30.17.03.25.205.0 ]--
r 47             bottom = top;
--[ 2019.09.30.17.03.28.782.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.30.17.03.30.144.0 ]--
+ 49         
--[ 2019.09.30.17.03.30.216.0 ]--
r 49         e
--[ 2019.09.30.17.03.30.359.0 ]--
r 49         el
--[ 2019.09.30.17.03.30.381.0 ]--
r 49         els
--[ 2019.09.30.17.03.30.536.0 ]--
r 49         else
--[ 2019.09.30.17.03.31.225.0 ]--
r 49         else{
--[ 2019.09.30.17.03.33.372.0 ]--
+ 51         
--[ 2019.09.30.17.03.33.462.0 ]--
r 51         }
--[ 2019.09.30.17.03.33.519.0 ]--
r 49         else {
--[ 2019.09.30.17.03.33.522.0 ]--
r 50             top.next = oldtop;
--[ 2019.09.30.17.03.41.917.0 ]--
r 49         else{
r 50         top.next = oldtop;
--[ 2019.09.30.17.03.42.079.0 ]--
r 51         
--[ 2019.09.30.17.03.42.254.0 ]--
- 51
--[ 2019.09.30.17.03.42.553.0 ]--
r 49         
--[ 2019.09.30.17.03.42.712.0 ]--
- 49
--[ 2019.09.30.17.03.42.972.0 ]--
r 47             
--[ 2019.09.30.17.03.43.103.0 ]--
r 47             top
--[ 2019.09.30.17.03.43.304.0 ]--
- 46
- 46
r 46         
--[ 2019.09.30.17.03.43.396.0 ]--
- 46
--[ 2019.09.30.17.03.45.526.0 ]--
r 46         top.next = oldtop; 
--[ 2019.09.30.17.03.45.567.0 ]--
r 46         top.next = oldtop;
--[ 2019.09.30.17.03.50.845.0 ]--
+ 46         
--[ 2019.09.30.17.03.51.199.0 ]--
r 46         i
--[ 2019.09.30.17.03.51.257.0 ]--
r 46         if
--[ 2019.09.30.17.03.51.408.0 ]--
r 46         if()
--[ 2019.09.30.17.03.51.778.0 ]--
r 46         if(i)
--[ 2019.09.30.17.03.51.896.0 ]--
r 46         if(is)
--[ 2019.09.30.17.03.52.544.0 ]--
r 46         if(isEmpty)
--[ 2019.09.30.17.03.52.570.0 ]--
r 46         if(isEmpty())
--[ 2019.09.30.17.03.53.621.0 ]--
r 46         if(isEmpty()){
--[ 2019.09.30.17.03.53.860.0 ]--
+ 47 
+ 48 }
--[ 2019.09.30.17.03.53.910.0 ]--
r 48         }
--[ 2019.09.30.17.03.53.922.0 ]--
r 47             
--[ 2019.09.30.17.03.55.747.0 ]--
r 47             b
--[ 2019.09.30.17.03.55.834.0 ]--
r 47             bo
--[ 2019.09.30.17.03.55.900.0 ]--
r 47             bot
--[ 2019.09.30.17.03.56.009.0 ]--
r 47             bott
--[ 2019.09.30.17.03.56.085.0 ]--
r 47             botto
--[ 2019.09.30.17.03.56.132.0 ]--
r 47             bottom
--[ 2019.09.30.17.03.56.220.0 ]--
r 47             bottom 
--[ 2019.09.30.17.03.56.295.0 ]--
r 47             bottom =
--[ 2019.09.30.17.03.56.358.0 ]--
r 47             bottom = 
--[ 2019.09.30.17.03.56.529.0 ]--
r 47             bottom = t
--[ 2019.09.30.17.03.56.596.0 ]--
r 47             bottom = to
--[ 2019.09.30.17.03.56.717.0 ]--
r 47             bottom = top
--[ 2019.09.30.17.03.57.102.0 ]--
r 47             bottom = top;
--[ 2019.09.30.17.04.01.484.0 ]--
+ 49         
--[ 2019.09.30.17.04.02.698.0 ]--
r 49         l
--[ 2019.09.30.17.04.03.065.0 ]--
r 49         
--[ 2019.09.30.17.04.03.233.0 ]--
r 49         e
--[ 2019.09.30.17.04.03.367.0 ]--
r 49         el
--[ 2019.09.30.17.04.03.404.0 ]--
r 49         els
--[ 2019.09.30.17.04.03.591.0 ]--
r 49         else
--[ 2019.09.30.17.04.03.719.0 ]--
r 49         else{
--[ 2019.09.30.17.04.05.517.0 ]--
+ 51         
--[ 2019.09.30.17.04.05.660.0 ]--
r 51         }
--[ 2019.09.30.17.04.05.671.0 ]--
r 49         else {
--[ 2019.09.30.17.04.05.674.0 ]--
r 50             top.next = oldtop;
--[ 2019.09.30.17.04.10.304.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.30.17.04.58.994.0 ]--
r 91         
--[ 2019.09.30.17.04.59.227.0 ]--
- 91
--[ 2019.09.30.17.04.59.548.0 ]--
r 90         testSteque.push("Hello"); 
--[ 2019.09.30.17.04.59.627.0 ]--
r 90         testSteque.push("Hello");
--[ 2019.09.30.17.05.02.885.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.30.17.08.17.096.0 ]--
+ 48             
--[ 2019.09.30.17.08.21.726.0 ]--
r 48              
--[ 2019.09.30.17.08.21.791.0 ]--
r 48             
--[ 2019.09.30.17.08.22.588.0 ]--
r 48             t
--[ 2019.09.30.17.08.22.635.0 ]--
r 48             to
--[ 2019.09.30.17.08.22.770.0 ]--
r 48             top
--[ 2019.09.30.17.08.22.941.0 ]--
r 48             top.
--[ 2019.09.30.17.08.23.208.0 ]--
r 48             top.n
--[ 2019.09.30.17.08.23.244.0 ]--
r 48             top.ne
--[ 2019.09.30.17.08.23.369.0 ]--
r 48             top.nex
--[ 2019.09.30.17.08.23.570.0 ]--
r 48             top.next
--[ 2019.09.30.17.08.23.633.0 ]--
r 48             top.next 
--[ 2019.09.30.17.08.23.685.0 ]--
r 48             top.next =
--[ 2019.09.30.17.08.23.759.0 ]--
r 48             top.next = 
--[ 2019.09.30.17.08.23.928.0 ]--
r 48             top.next = n
--[ 2019.09.30.17.08.24.002.0 ]--
r 48             top.next = nu
--[ 2019.09.30.17.08.24.154.0 ]--
r 48             top.next = nul
--[ 2019.09.30.17.08.24.274.0 ]--
r 48             top.next = null
--[ 2019.09.30.17.08.24.404.0 ]--
r 48             top.next = null;
--[ 2019.09.30.17.08.29.025.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2019.09.30.17.08.33.918.0 ]--
r 48             
--[ 2019.09.30.17.08.34.297.0 ]--
- 48
--[ 2019.09.30.17.08.34.689.0 ]--
r 47             bottom = top
--[ 2019.09.30.17.08.35.390.0 ]--
+ 47             bottom = top;
r 48             top.next = null;
--[ 2019.09.30.17.08.38.179.0 ]--
r 48             \
--[ 2019.09.30.17.08.38.567.0 ]--
r 48             
--[ 2019.09.30.17.08.38.720.0 ]--
- 48
--[ 2019.09.30.17.08.39.083.0 ]--
r 47             bottom = top; 
--[ 2019.09.30.17.08.39.160.0 ]--
r 47             bottom = top;
--[ 2019.10.01.00.35.22.799.0 ]--
DisposeComponent
--[ 2019.10.01.10.08.48.418.0 ]--
NewLogger: P02_DataTypes
Version: 1.3
--[ 2019.10.01.10.08.48.625.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$1.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/out/production/P02_DataTypes/Steque$StequeIterator.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/dictionaries/ccollier.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2019.10.01.10.08.48.626.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2019.10.01.10.08.48.626.1 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    private Node top,bottom;
    private int N = 1;

    public Steque() {

    }
    private class Node{
        Item item;
        Node next;
    }
    // returns the number of items stored
    public int size() {
        return N;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return top == null;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {
        Node oldbottom = bottom;
        bottom = new Node();
        bottom.item = item;
        bottom.next = null;
        if(isEmpty()){
            top = bottom;
        }
        else{
            oldbottom.next = bottom;
        }

    }

    // pushes item to top of steque
    public void push(Item item) {
        Node oldtop = top;
        top = new Node();
        top.item = item;
        if(isEmpty()){
            bottom = top;
        }
        else {
            top.next = oldtop;
        }
        N++;
    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        if(isEmpty()){
            throw new NoSuchElementException();
        }
        Item item = top.item;
        top = top.next;
        N--;
        return item;

    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return new StequeIterator();
    }

    private class StequeIterator implements Iterator<Item>{
        private Node current = top;

        public boolean hasNext() {return current != null;}

        public void remove() {throw new UnsupportedOperationException();}

        public Item next(){
            Item item = current.item;
            current = current.next;
            return item;
        }
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {
        Steque<String> testSteque = new Steque<>();
        testSteque.push("Hello");
        testSteque.enqueue("Kenobi");
        for(String s : testSteque){
            StdOut.println(s);
        }
    }
}

--[ 2019.10.01.10.08.48.626.2 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2019.10.01.10.08.48.626.3 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2019.10.01.10.08.48.627.0 ]--
InitFile: /.cos265


--[ 2019.10.01.10.10.23.034.0 ]--
DisposeComponent
--[ 2020.07.10.21.33.07.264.0 ]--
NewLogger: P02_DataTypes
Version: 1.3
--[ 2020.07.10.21.33.07.272.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$1.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/out/production/P02_DataTypes/Steque$StequeIterator.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/dictionaries/ccollier.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2020.07.10.21.33.07.276.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2020.07.10.21.33.07.281.0 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    private Node top,bottom;
    private int N = 1;

    public Steque() {

    }
    private class Node{
        Item item;
        Node next;
    }
    // returns the number of items stored
    public int size() {
        return N;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return top == null;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {
        Node oldbottom = bottom;
        bottom = new Node();
        bottom.item = item;
        bottom.next = null;
        if(isEmpty()){
            top = bottom;
        }
        else{
            oldbottom.next = bottom;
        }

    }

    // pushes item to top of steque
    public void push(Item item) {
        Node oldtop = top;
        top = new Node();
        top.item = item;
        if(isEmpty()){
            bottom = top;
        }
        else {
            top.next = oldtop;
        }
        N++;
    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        if(isEmpty()){
            throw new NoSuchElementException();
        }
        Item item = top.item;
        top = top.next;
        N--;
        return item;

    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return new StequeIterator();
    }

    private class StequeIterator implements Iterator<Item>{
        private Node current = top;

        public boolean hasNext() {return current != null;}

        public void remove() {throw new UnsupportedOperationException();}

        public Item next(){
            Item item = current.item;
            current = current.next;
            return item;
        }
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {
        Steque<String> testSteque = new Steque<>();
        testSteque.push("Hello");
        testSteque.enqueue("Kenobi");
        for(String s : testSteque){
            StdOut.println(s);
        }
    }
}

--[ 2020.07.10.21.33.07.300.0 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2020.07.10.21.33.07.307.0 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2020.07.10.21.33.07.312.0 ]--
InitFile: /.cos265


--[ 2020.07.10.21.33.11.610.0 ]--
UpdateTree (AD): 1 0
+ /.idea/vcs.xml

--[ 2020.07.10.21.33.15.211.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2020.07.10.21.33.23.961.0 ]--
DisposeComponent
